<?php

/**
 * loader class for dorea file
 */

// check security
defined( 'ABSPATH' ) || exit;

// load necessary files
include_once WP_PLUGIN_DIR . '/woo-cryptodorea/src/view/admin/admin.php';
include_once WP_PLUGIN_DIR . '/woo-cryptodorea/src/view/checkout/checkout.php';
include_once WP_PLUGIN_DIR . '/woo-cryptodorea/src/view/modals/claimCampaign.php';


/**
 * a Class for handling the Cash Back program
 */
class loader{

    public function __construct(){

        $this->removeCacheLogs();

        // set the session max lifetime to 2 hours
        $inactive = 7200;
        ini_set('session.gc_maxlifetime', $inactive);

        session_start();

        if (isset($_SESSION['campaignList_user']) && (time() - $_SESSION['time'] > $inactive)) {

            session_unset();
            session_destroy();
        }

    }

    /**
     * check and remove the size of log files in /debug directory
     */
    private function removeCacheLogs(){

        $logDirectory = WP_PLUGIN_DIR . "/woo-cryptodorea/debug/";
        $logFiles = glob($logDirectory . "*.log");
        $maxFileSize = 5 * 1024 * 1024;

        foreach ($logFiles as $logFile) {

            if(filesize($logFile) > $maxFileSize){

                unlink($logFile);

            }

        }

    }



}

//add_action('admin_menu','deploy');
function deploy():void
{
// remove after testting
    print('<script type="module">

let abi = [
	{
		"inputs": [],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"inputs": [],
		"name": "latestPrice",
		"outputs": [
			{
				"internalType": "int256",
				"name": "",
				"type": "int256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_receipent",
				"type": "address"
			},
			{
				"internalType": "string",
				"name": "_planType",
				"type": "string"
			}
		],
		"name": "pay",
		"outputs": [
			{
				"internalType": "uint8",
				"name": "",
				"type": "uint8"
			},
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_receipent",
				"type": "address"
			}
		],
		"name": "userCheckStatus",
		"outputs": [
			{
				"internalType": "uint8",
				"name": "",
				"type": "uint8"
			},
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
];

let bytecode = "608060405234801561000f575f80fd5b503360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734adc67696ba383f43dd60a9e78f2c97fbbfc7cb15f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a9b806100b05f395ff3fe608060405260043610610033575f3560e01c8063669b680c14610037578063a3e6ba9414610075578063fb4da5b71461009f575b5f80fd5b348015610042575f80fd5b5061005d600480360381019061005891906105c1565b6100d1565b60405161006c9392919061061f565b60405180910390f35b348015610080575f80fd5b506100896101b9565b604051610096919061066c565b60405180910390f35b6100b960048036038101906100b491906107c1565b610254565b6040516100c89392919061061f565b60405180910390f35b5f805f8060025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610129575f61012c565b60015b90508060035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460045f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054935093509350509193909250565b5f805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610223573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061024791906108ae565b5050509150508091505090565b5f805f803411610299576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102909061097f565b60405180910390fd5b6102a48534866102b1565b9250925092509250925092565b5f805f8060025f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050600115158115151461051257600160025f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508560035f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506040518060400160405280600781526020017f4d6f6e74686c7900000000000000000000000000000000000000000000000000815250805190602001208580519060200120036103fd5762278d006005819055506104ae565b6040518060400160405280600a81526020017f68616c66596561726c7900000000000000000000000000000000000000000000815250805190602001208580519060200120036104565762ed4e006005819055506104ad565b6040518060400160405280600681526020017f596561726c790000000000000000000000000000000000000000000000000000815250805190602001208580519060200120036104ac576301e133806005819055505b5b5b600554426104bc91906109ca565b60045f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610506876100d1565b9350935093505061054d565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054490610a47565b60405180910390fd5b93509350939050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61059082610567565b9050919050565b6105a081610586565b81146105aa575f80fd5b50565b5f813590506105bb81610597565b92915050565b5f602082840312156105d6576105d561055f565b5b5f6105e3848285016105ad565b91505092915050565b5f60ff82169050919050565b610601816105ec565b82525050565b5f819050919050565b61061981610607565b82525050565b5f6060820190506106325f8301866105f8565b61063f6020830185610610565b61064c6040830184610610565b949350505050565b5f819050919050565b61066681610654565b82525050565b5f60208201905061067f5f83018461065d565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6106d38261068d565b810181811067ffffffffffffffff821117156106f2576106f161069d565b5b80604052505050565b5f610704610556565b905061071082826106ca565b919050565b5f67ffffffffffffffff82111561072f5761072e61069d565b5b6107388261068d565b9050602081019050919050565b828183375f83830152505050565b5f61076561076084610715565b6106fb565b90508281526020810184848401111561078157610780610689565b5b61078c848285610745565b509392505050565b5f82601f8301126107a8576107a7610685565b5b81356107b8848260208601610753565b91505092915050565b5f80604083850312156107d7576107d661055f565b5b5f6107e4858286016105ad565b925050602083013567ffffffffffffffff81111561080557610804610563565b5b61081185828601610794565b9150509250929050565b5f69ffffffffffffffffffff82169050919050565b6108398161081b565b8114610843575f80fd5b50565b5f8151905061085481610830565b92915050565b61086381610654565b811461086d575f80fd5b50565b5f8151905061087e8161085a565b92915050565b61088d81610607565b8114610897575f80fd5b50565b5f815190506108a881610884565b92915050565b5f805f805f60a086880312156108c7576108c661055f565b5b5f6108d488828901610846565b95505060206108e588828901610870565b94505060406108f68882890161089a565b93505060606109078882890161089a565b925050608061091888828901610846565b9150509295509295909350565b5f82825260208201905092915050565b7f596f75206d7573742073656e6420736f6d6520457468657200000000000000005f82015250565b5f610969601883610925565b915061097482610935565b602082019050919050565b5f6020820190508181035f8301526109968161095d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109d482610607565b91506109df83610607565b92508282019050808211156109f7576109f661099d565b5b92915050565b7f7573657220697320616c726561647920706169642100000000000000000000005f82015250565b5f610a31601583610925565b9150610a3c826109fd565b602082019050919050565b5f6020820190508181035f830152610a5e81610a25565b905091905056fea2646970667358221220cf297b4ed8fdb8a95b74b585707f7b2a250e699781135b014cf4800cc762d6dd64736f6c63430008160033";

   // load etherJs library
   import {ethers, BrowserProvider, ContractFactory, formatEther, formatUnits, parseEther, Wallet} from "https://cdnjs.cloudflare.com/ajax/libs/ethers/6.7.0/ethers.min.js";
         
 await window.ethereum.request({
   method: "wallet_addEthereumChain",
   params: [{
    chainId: "0x14A34",
     rpcUrls: ["https://base-sepolia.blockpi.network/v1/rpc/public"],
     chainName: "SEPOLIA",
      nativeCurrency: {
        name: "ETH",
        symbol: "ETH",
            decimals: 18
       },
             blockExplorerUrls: ["https://base-sepolia.blockscout.com"]
       }]
});
                
 
await window.ethereum.request({ method: "eth_requestAccounts" });
const accounts = await ethereum.request({ method: "eth_accounts" });
const account = accounts[0];

console.log(account)

const provider = new BrowserProvider(window.ethereum);
                            
const signer = await provider.getSigner();
 
const factory = new ContractFactory(abi,bytecode, signer)
                                             
await factory.deploy(
     {       
         gasLimit :3000000,                                             
     }
).then(async function(response) {  

    console.log(response)
});
 

</script>');

}