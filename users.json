{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"users.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity >=0.4.20 <0.9.0;\\r\\n\\r\\ncontract cryptoDoreaUsers {\\r\\n\\r\\n    mapping(address=>uint256) private _freeTrialTime;\\r\\n    mapping(address=>bool) private _freeTrialStatus;\\r\\n    mapping(address=>bool) private _paymentStatus;\\r\\n\\r\\n    constructor()  {\\r\\n\\r\\n\\r\\n    }\\r\\n\\r\\n   function freeTrialCheck(address usersAddress) public{\\r\\n        \\r\\n        bool trialCheck = _freeTrialTime[usersAddress] != 0;\\r\\n\\r\\n        if(trialCheck != true){\\r\\n\\r\\n            // add 14 days trial period to the first time deployment \\r\\n            _freeTrialTime[usersAddress] = block.timestamp; //+ (14 * 86400);\\r\\n            _freeTrialStatus[usersAddress] = true;\\r\\n\\r\\n        }else{\\r\\n\\r\\n            if(_freeTrialTime[usersAddress] <= block.timestamp){\\r\\n\\r\\n                _freeTrialTime[usersAddress] = 0;\\r\\n                _freeTrialStatus[usersAddress] = false;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function time(address _receipent) public view returns (uint256){\\r\\n\\r\\n        return  _freeTrialTime[_receipent];\\r\\n\\r\\n    }\\r\\n\\r\\n    // Transfer Ether to Loyal Customers\\r\\n    function pay(address _receipent) public payable{\\r\\n\\r\\n        freeTrialCheck(_receipent);\\r\\n\\r\\n        // check if user is on free trial or not (throws remaining days)\\r\\n        bool trialCheck = _freeTrialStatus[_receipent] != true;\\r\\n        if(trialCheck != true){\\r\\n            // add function to check if user is paid or not\\r\\n            require(msg.value > 0, \\\"You must send some Ether\\\");\\r\\n        }else{\\r\\n            revert(\\\"no need to pay!\\\");\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    \\r\\n    // get balance of contract address\\r\\n    function getBalance() public view returns(uint256){\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n}\"}},\"settings\":{\"optimizer\":{\"enabled\":false,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}},\"remappings\":[]}}",
	"name": "cryptoDoreaUsers",
	"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usersAddress\",\"type\":\"address\"}],\"name\":\"freeTrialCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receipent\",\"type\":\"address\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receipent\",\"type\":\"address\"}],\"name\":\"time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"users.sol\":\"cryptoDoreaUsers\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"users.sol\":{\"keccak256\":\"0x419cee5ee27337189c643775330dc3affa7e7ab25aa22dfc8405c688a12aa641\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b3a97d3764e8c86a9942337ac470ed7ad6d53204ef811a86fdde5054310c4a93\",\"dweb:/ipfs/QmX9Wx6MFm8dEcVxk4inv5EQBeVFveCLuEdw9FJ9LE4JnF\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_17": {
				"entryPoint": null,
				"id": 17,
				"parameterSlots": 0,
				"returnSlots": 0
			}
		},
		"generatedSources": [],
		"linkReferences": {},
		"object": "608060405234801561000f575f80fd5b506105bf8061001d5f395ff3fe60806040526004361061003e575f3560e01c80630c11dedd1461004257806312065fe01461005e5780637c67a3e214610088578063f9a24dc0146100c4575b5f80fd5b61005c6004803603810190610057919061044d565b6100ec565b005b348015610069575f80fd5b506100726101dc565b60405161007f9190610490565b60405180910390f35b348015610093575f80fd5b506100ae60048036038101906100a9919061044d565b6101e3565b6040516100bb9190610490565b60405180910390f35b3480156100cf575f80fd5b506100ea60048036038101906100e5919061044d565b610228565b005b6100f581610228565b5f6001151560015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16151514159050600115158115151461019d575f3411610198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f90610503565b60405180910390fd5b6101d8565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cf9061056b565b60405180910390fd5b5050565b5f47905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414159050600115158115151461031157425f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506001805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506103eb565b425f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054116103ea575f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b5b5050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61041c826103f3565b9050919050565b61042c81610412565b8114610436575f80fd5b50565b5f8135905061044781610423565b92915050565b5f60208284031215610462576104616103ef565b5b5f61046f84828501610439565b91505092915050565b5f819050919050565b61048a81610478565b82525050565b5f6020820190506104a35f830184610481565b92915050565b5f82825260208201905092915050565b7f596f75206d7573742073656e6420736f6d6520457468657200000000000000005f82015250565b5f6104ed6018836104a9565b91506104f8826104b9565b602082019050919050565b5f6020820190508181035f83015261051a816104e1565b9050919050565b7f6e6f206e65656420746f207061792100000000000000000000000000000000005f82015250565b5f610555600f836104a9565b915061056082610521565b602082019050919050565b5f6020820190508181035f83015261058281610549565b905091905056fea26469706673582212205aa2f4032b16671a05e6f7eac0c4a39b5575e50abffdaa8f64b2eedc45f520cd64736f6c63430008160033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BF DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC11DEDD EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x7C67A3E2 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xF9A24DC0 EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x44D JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x72 PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 DUP2 PUSH2 0x228 JUMP JUMPDEST PUSH0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x19D JUMPI PUSH0 CALLVALUE GT PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F SWAP1 PUSH2 0x503 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x311 JUMPI TIMESTAMP PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3EB JUMP JUMPDEST TIMESTAMP PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x3EA JUMPI PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x41C DUP3 PUSH2 0x3F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42C DUP2 PUSH2 0x412 JUMP JUMPDEST DUP2 EQ PUSH2 0x436 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x447 DUP2 PUSH2 0x423 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0x3EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x46F DUP5 DUP3 DUP6 ADD PUSH2 0x439 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48A DUP2 PUSH2 0x478 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A3 PUSH0 DUP4 ADD DUP5 PUSH2 0x481 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206D7573742073656E6420736F6D652045746865720000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4ED PUSH1 0x18 DUP4 PUSH2 0x4A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F8 DUP3 PUSH2 0x4B9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x51A DUP2 PUSH2 0x4E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F206E65656420746F20706179210000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x555 PUSH1 0xF DUP4 PUSH2 0x4A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x560 DUP3 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x582 DUP2 PUSH2 0x549 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS LOG2 DELEGATECALL SUB 0x2B AND PUSH8 0x1A05E6F7EAC0C4A3 SWAP12 SSTORE PUSH22 0xE50ABFFDAA8F64B2EEDC45F520CD64736F6C63430008 AND STOP CALLER ",
		"sourceMap": "73:1628:0:-:0;;;271:27;;;;;;;;;;73:1628;;;;;;"
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "usersAddress",
					"type": "address"
				}
			],
			"name": "freeTrialCheck",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getBalance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_receipent",
					"type": "address"
				}
			],
			"name": "pay",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_receipent",
					"type": "address"
				}
			],
			"name": "time",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 5,
				"contract": "users.sol:cryptoDoreaUsers",
				"label": "_freeTrialTime",
				"offset": 0,
				"slot": "0",
				"type": "t_mapping(t_address,t_uint256)"
			},
			{
				"astId": 9,
				"contract": "users.sol:cryptoDoreaUsers",
				"label": "_freeTrialStatus",
				"offset": 0,
				"slot": "1",
				"type": "t_mapping(t_address,t_bool)"
			},
			{
				"astId": 13,
				"contract": "users.sol:cryptoDoreaUsers",
				"label": "_paymentStatus",
				"offset": 0,
				"slot": "2",
				"type": "t_mapping(t_address,t_bool)"
			}
		],
		"types": {
			"t_address": {
				"encoding": "inplace",
				"label": "address",
				"numberOfBytes": "20"
			},
			"t_bool": {
				"encoding": "inplace",
				"label": "bool",
				"numberOfBytes": "1"
			},
			"t_mapping(t_address,t_bool)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => bool)",
				"numberOfBytes": "32",
				"value": "t_bool"
			},
			"t_mapping(t_address,t_uint256)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => uint256)",
				"numberOfBytes": "32",
				"value": "t_uint256"
			},
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			}
		}
	},
	"web3Deploy": "var cryptodoreausersContract = new web3.eth.Contract([{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usersAddress\",\"type\":\"address\"}],\"name\":\"freeTrialCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receipent\",\"type\":\"address\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receipent\",\"type\":\"address\"}],\"name\":\"time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]);\nvar cryptodoreausers = cryptodoreausersContract.deploy({\n     data: '0x608060405234801561000f575f80fd5b506105bf8061001d5f395ff3fe60806040526004361061003e575f3560e01c80630c11dedd1461004257806312065fe01461005e5780637c67a3e214610088578063f9a24dc0146100c4575b5f80fd5b61005c6004803603810190610057919061044d565b6100ec565b005b348015610069575f80fd5b506100726101dc565b60405161007f9190610490565b60405180910390f35b348015610093575f80fd5b506100ae60048036038101906100a9919061044d565b6101e3565b6040516100bb9190610490565b60405180910390f35b3480156100cf575f80fd5b506100ea60048036038101906100e5919061044d565b610228565b005b6100f581610228565b5f6001151560015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16151514159050600115158115151461019d575f3411610198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f90610503565b60405180910390fd5b6101d8565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cf9061056b565b60405180910390fd5b5050565b5f47905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414159050600115158115151461031157425f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506001805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506103eb565b425f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054116103ea575f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b5b5050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61041c826103f3565b9050919050565b61042c81610412565b8114610436575f80fd5b50565b5f8135905061044781610423565b92915050565b5f60208284031215610462576104616103ef565b5b5f61046f84828501610439565b91505092915050565b5f819050919050565b61048a81610478565b82525050565b5f6020820190506104a35f830184610481565b92915050565b5f82825260208201905092915050565b7f596f75206d7573742073656e6420736f6d6520457468657200000000000000005f82015250565b5f6104ed6018836104a9565b91506104f8826104b9565b602082019050919050565b5f6020820190508181035f83015261051a816104e1565b9050919050565b7f6e6f206e65656420746f207061792100000000000000000000000000000000005f82015250565b5f610555600f836104a9565b915061056082610521565b602082019050919050565b5f6020820190508181035f83015261058281610549565b905091905056fea26469706673582212205aa2f4032b16671a05e6f7eac0c4a39b5575e50abffdaa8f64b2eedc45f520cd64736f6c63430008160033', \n     arguments: [\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"f9a24dc0": "freeTrialCheck(address)",
		"12065fe0": "getBalance()",
		"0c11dedd": "pay(address)",
		"7c67a3e2": "time(address)"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "294200",
			"executionCost": "329",
			"totalCost": "294529"
		},
		"External": {
			"freeTrialCheck(address)": "49303",
			"getBalance()": "334",
			"pay(address)": "51833",
			"time(address)": "2851"
		}
	},
	"devdoc": {
		"kind": "dev",
		"methods": {},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@freeTrialCheck_70": {
				"entryPoint": 552,
				"id": 70,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@getBalance_130": {
				"entryPoint": 476,
				"id": 130,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@pay_118": {
				"entryPoint": 236,
				"id": 118,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@time_82": {
				"entryPoint": 483,
				"id": 82,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_decode_t_address": {
				"entryPoint": 1081,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_address": {
				"entryPoint": 1101,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 1249,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_ec45d5bdb228a86d6f29e095f0ff2cec164597a7d56ce499e5b45b6035ec23f1_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 1353,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 1153,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 1283,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_ec45d5bdb228a86d6f29e095f0ff2cec164597a7d56ce499e5b45b6035ec23f1__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 1387,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": 1168,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"allocate_unbounded": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
				"entryPoint": 1193,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"cleanup_t_address": {
				"entryPoint": 1042,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint160": {
				"entryPoint": 1011,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 1144,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
				"entryPoint": 1007,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"store_literal_in_memory_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b": {
				"entryPoint": 1209,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_ec45d5bdb228a86d6f29e095f0ff2cec164597a7d56ce499e5b45b6035ec23f1": {
				"entryPoint": 1313,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_address": {
				"entryPoint": 1059,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:3728:1",
					"nodeType": "YulBlock",
					"src": "0:3728:1",
					"statements": [
						{
							"body": {
								"nativeSrc": "47:35:1",
								"nodeType": "YulBlock",
								"src": "47:35:1",
								"statements": [
									{
										"nativeSrc": "57:19:1",
										"nodeType": "YulAssignment",
										"src": "57:19:1",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "73:2:1",
													"nodeType": "YulLiteral",
													"src": "73:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "67:5:1",
												"nodeType": "YulIdentifier",
												"src": "67:5:1"
											},
											"nativeSrc": "67:9:1",
											"nodeType": "YulFunctionCall",
											"src": "67:9:1"
										},
										"variableNames": [
											{
												"name": "memPtr",
												"nativeSrc": "57:6:1",
												"nodeType": "YulIdentifier",
												"src": "57:6:1"
											}
										]
									}
								]
							},
							"name": "allocate_unbounded",
							"nativeSrc": "7:75:1",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "memPtr",
									"nativeSrc": "40:6:1",
									"nodeType": "YulTypedName",
									"src": "40:6:1",
									"type": ""
								}
							],
							"src": "7:75:1"
						},
						{
							"body": {
								"nativeSrc": "177:28:1",
								"nodeType": "YulBlock",
								"src": "177:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "194:1:1",
													"nodeType": "YulLiteral",
													"src": "194:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "197:1:1",
													"nodeType": "YulLiteral",
													"src": "197:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "187:6:1",
												"nodeType": "YulIdentifier",
												"src": "187:6:1"
											},
											"nativeSrc": "187:12:1",
											"nodeType": "YulFunctionCall",
											"src": "187:12:1"
										},
										"nativeSrc": "187:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "187:12:1"
									}
								]
							},
							"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
							"nativeSrc": "88:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "88:117:1"
						},
						{
							"body": {
								"nativeSrc": "300:28:1",
								"nodeType": "YulBlock",
								"src": "300:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "317:1:1",
													"nodeType": "YulLiteral",
													"src": "317:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "320:1:1",
													"nodeType": "YulLiteral",
													"src": "320:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "310:6:1",
												"nodeType": "YulIdentifier",
												"src": "310:6:1"
											},
											"nativeSrc": "310:12:1",
											"nodeType": "YulFunctionCall",
											"src": "310:12:1"
										},
										"nativeSrc": "310:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "310:12:1"
									}
								]
							},
							"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
							"nativeSrc": "211:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "211:117:1"
						},
						{
							"body": {
								"nativeSrc": "379:81:1",
								"nodeType": "YulBlock",
								"src": "379:81:1",
								"statements": [
									{
										"nativeSrc": "389:65:1",
										"nodeType": "YulAssignment",
										"src": "389:65:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "404:5:1",
													"nodeType": "YulIdentifier",
													"src": "404:5:1"
												},
												{
													"kind": "number",
													"nativeSrc": "411:42:1",
													"nodeType": "YulLiteral",
													"src": "411:42:1",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "400:3:1",
												"nodeType": "YulIdentifier",
												"src": "400:3:1"
											},
											"nativeSrc": "400:54:1",
											"nodeType": "YulFunctionCall",
											"src": "400:54:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "389:7:1",
												"nodeType": "YulIdentifier",
												"src": "389:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint160",
							"nativeSrc": "334:126:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "361:5:1",
									"nodeType": "YulTypedName",
									"src": "361:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "371:7:1",
									"nodeType": "YulTypedName",
									"src": "371:7:1",
									"type": ""
								}
							],
							"src": "334:126:1"
						},
						{
							"body": {
								"nativeSrc": "511:51:1",
								"nodeType": "YulBlock",
								"src": "511:51:1",
								"statements": [
									{
										"nativeSrc": "521:35:1",
										"nodeType": "YulAssignment",
										"src": "521:35:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "550:5:1",
													"nodeType": "YulIdentifier",
													"src": "550:5:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint160",
												"nativeSrc": "532:17:1",
												"nodeType": "YulIdentifier",
												"src": "532:17:1"
											},
											"nativeSrc": "532:24:1",
											"nodeType": "YulFunctionCall",
											"src": "532:24:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "521:7:1",
												"nodeType": "YulIdentifier",
												"src": "521:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_address",
							"nativeSrc": "466:96:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "493:5:1",
									"nodeType": "YulTypedName",
									"src": "493:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "503:7:1",
									"nodeType": "YulTypedName",
									"src": "503:7:1",
									"type": ""
								}
							],
							"src": "466:96:1"
						},
						{
							"body": {
								"nativeSrc": "611:79:1",
								"nodeType": "YulBlock",
								"src": "611:79:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "668:16:1",
											"nodeType": "YulBlock",
											"src": "668:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "677:1:1",
																"nodeType": "YulLiteral",
																"src": "677:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "680:1:1",
																"nodeType": "YulLiteral",
																"src": "680:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "670:6:1",
															"nodeType": "YulIdentifier",
															"src": "670:6:1"
														},
														"nativeSrc": "670:12:1",
														"nodeType": "YulFunctionCall",
														"src": "670:12:1"
													},
													"nativeSrc": "670:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "670:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "634:5:1",
															"nodeType": "YulIdentifier",
															"src": "634:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "659:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "659:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_address",
																"nativeSrc": "641:17:1",
																"nodeType": "YulIdentifier",
																"src": "641:17:1"
															},
															"nativeSrc": "641:24:1",
															"nodeType": "YulFunctionCall",
															"src": "641:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "631:2:1",
														"nodeType": "YulIdentifier",
														"src": "631:2:1"
													},
													"nativeSrc": "631:35:1",
													"nodeType": "YulFunctionCall",
													"src": "631:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "624:6:1",
												"nodeType": "YulIdentifier",
												"src": "624:6:1"
											},
											"nativeSrc": "624:43:1",
											"nodeType": "YulFunctionCall",
											"src": "624:43:1"
										},
										"nativeSrc": "621:63:1",
										"nodeType": "YulIf",
										"src": "621:63:1"
									}
								]
							},
							"name": "validator_revert_t_address",
							"nativeSrc": "568:122:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "604:5:1",
									"nodeType": "YulTypedName",
									"src": "604:5:1",
									"type": ""
								}
							],
							"src": "568:122:1"
						},
						{
							"body": {
								"nativeSrc": "748:87:1",
								"nodeType": "YulBlock",
								"src": "748:87:1",
								"statements": [
									{
										"nativeSrc": "758:29:1",
										"nodeType": "YulAssignment",
										"src": "758:29:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "780:6:1",
													"nodeType": "YulIdentifier",
													"src": "780:6:1"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "767:12:1",
												"nodeType": "YulIdentifier",
												"src": "767:12:1"
											},
											"nativeSrc": "767:20:1",
											"nodeType": "YulFunctionCall",
											"src": "767:20:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "758:5:1",
												"nodeType": "YulIdentifier",
												"src": "758:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "823:5:1",
													"nodeType": "YulIdentifier",
													"src": "823:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_address",
												"nativeSrc": "796:26:1",
												"nodeType": "YulIdentifier",
												"src": "796:26:1"
											},
											"nativeSrc": "796:33:1",
											"nodeType": "YulFunctionCall",
											"src": "796:33:1"
										},
										"nativeSrc": "796:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "796:33:1"
									}
								]
							},
							"name": "abi_decode_t_address",
							"nativeSrc": "696:139:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "726:6:1",
									"nodeType": "YulTypedName",
									"src": "726:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "734:3:1",
									"nodeType": "YulTypedName",
									"src": "734:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "742:5:1",
									"nodeType": "YulTypedName",
									"src": "742:5:1",
									"type": ""
								}
							],
							"src": "696:139:1"
						},
						{
							"body": {
								"nativeSrc": "907:263:1",
								"nodeType": "YulBlock",
								"src": "907:263:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "953:83:1",
											"nodeType": "YulBlock",
											"src": "953:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "955:77:1",
															"nodeType": "YulIdentifier",
															"src": "955:77:1"
														},
														"nativeSrc": "955:79:1",
														"nodeType": "YulFunctionCall",
														"src": "955:79:1"
													},
													"nativeSrc": "955:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "955:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "928:7:1",
															"nodeType": "YulIdentifier",
															"src": "928:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "937:9:1",
															"nodeType": "YulIdentifier",
															"src": "937:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "924:3:1",
														"nodeType": "YulIdentifier",
														"src": "924:3:1"
													},
													"nativeSrc": "924:23:1",
													"nodeType": "YulFunctionCall",
													"src": "924:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "949:2:1",
													"nodeType": "YulLiteral",
													"src": "949:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "920:3:1",
												"nodeType": "YulIdentifier",
												"src": "920:3:1"
											},
											"nativeSrc": "920:32:1",
											"nodeType": "YulFunctionCall",
											"src": "920:32:1"
										},
										"nativeSrc": "917:119:1",
										"nodeType": "YulIf",
										"src": "917:119:1"
									},
									{
										"nativeSrc": "1046:117:1",
										"nodeType": "YulBlock",
										"src": "1046:117:1",
										"statements": [
											{
												"nativeSrc": "1061:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "1061:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "1075:1:1",
													"nodeType": "YulLiteral",
													"src": "1075:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "1065:6:1",
														"nodeType": "YulTypedName",
														"src": "1065:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "1090:63:1",
												"nodeType": "YulAssignment",
												"src": "1090:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "1125:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1125:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "1136:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1136:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1121:3:1",
																"nodeType": "YulIdentifier",
																"src": "1121:3:1"
															},
															"nativeSrc": "1121:22:1",
															"nodeType": "YulFunctionCall",
															"src": "1121:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "1145:7:1",
															"nodeType": "YulIdentifier",
															"src": "1145:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "1100:20:1",
														"nodeType": "YulIdentifier",
														"src": "1100:20:1"
													},
													"nativeSrc": "1100:53:1",
													"nodeType": "YulFunctionCall",
													"src": "1100:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "1090:6:1",
														"nodeType": "YulIdentifier",
														"src": "1090:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_address",
							"nativeSrc": "841:329:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "877:9:1",
									"nodeType": "YulTypedName",
									"src": "877:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "888:7:1",
									"nodeType": "YulTypedName",
									"src": "888:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "900:6:1",
									"nodeType": "YulTypedName",
									"src": "900:6:1",
									"type": ""
								}
							],
							"src": "841:329:1"
						},
						{
							"body": {
								"nativeSrc": "1221:32:1",
								"nodeType": "YulBlock",
								"src": "1221:32:1",
								"statements": [
									{
										"nativeSrc": "1231:16:1",
										"nodeType": "YulAssignment",
										"src": "1231:16:1",
										"value": {
											"name": "value",
											"nativeSrc": "1242:5:1",
											"nodeType": "YulIdentifier",
											"src": "1242:5:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "1231:7:1",
												"nodeType": "YulIdentifier",
												"src": "1231:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "1176:77:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1203:5:1",
									"nodeType": "YulTypedName",
									"src": "1203:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "1213:7:1",
									"nodeType": "YulTypedName",
									"src": "1213:7:1",
									"type": ""
								}
							],
							"src": "1176:77:1"
						},
						{
							"body": {
								"nativeSrc": "1324:53:1",
								"nodeType": "YulBlock",
								"src": "1324:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1341:3:1",
													"nodeType": "YulIdentifier",
													"src": "1341:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1364:5:1",
															"nodeType": "YulIdentifier",
															"src": "1364:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nativeSrc": "1346:17:1",
														"nodeType": "YulIdentifier",
														"src": "1346:17:1"
													},
													"nativeSrc": "1346:24:1",
													"nodeType": "YulFunctionCall",
													"src": "1346:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1334:6:1",
												"nodeType": "YulIdentifier",
												"src": "1334:6:1"
											},
											"nativeSrc": "1334:37:1",
											"nodeType": "YulFunctionCall",
											"src": "1334:37:1"
										},
										"nativeSrc": "1334:37:1",
										"nodeType": "YulExpressionStatement",
										"src": "1334:37:1"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nativeSrc": "1259:118:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1312:5:1",
									"nodeType": "YulTypedName",
									"src": "1312:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "1319:3:1",
									"nodeType": "YulTypedName",
									"src": "1319:3:1",
									"type": ""
								}
							],
							"src": "1259:118:1"
						},
						{
							"body": {
								"nativeSrc": "1481:124:1",
								"nodeType": "YulBlock",
								"src": "1481:124:1",
								"statements": [
									{
										"nativeSrc": "1491:26:1",
										"nodeType": "YulAssignment",
										"src": "1491:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1503:9:1",
													"nodeType": "YulIdentifier",
													"src": "1503:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1514:2:1",
													"nodeType": "YulLiteral",
													"src": "1514:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1499:3:1",
												"nodeType": "YulIdentifier",
												"src": "1499:3:1"
											},
											"nativeSrc": "1499:18:1",
											"nodeType": "YulFunctionCall",
											"src": "1499:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1491:4:1",
												"nodeType": "YulIdentifier",
												"src": "1491:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "1571:6:1",
													"nodeType": "YulIdentifier",
													"src": "1571:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "1584:9:1",
															"nodeType": "YulIdentifier",
															"src": "1584:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "1595:1:1",
															"nodeType": "YulLiteral",
															"src": "1595:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1580:3:1",
														"nodeType": "YulIdentifier",
														"src": "1580:3:1"
													},
													"nativeSrc": "1580:17:1",
													"nodeType": "YulFunctionCall",
													"src": "1580:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1527:43:1",
												"nodeType": "YulIdentifier",
												"src": "1527:43:1"
											},
											"nativeSrc": "1527:71:1",
											"nodeType": "YulFunctionCall",
											"src": "1527:71:1"
										},
										"nativeSrc": "1527:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "1527:71:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "1383:222:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1453:9:1",
									"nodeType": "YulTypedName",
									"src": "1453:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "1465:6:1",
									"nodeType": "YulTypedName",
									"src": "1465:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "1476:4:1",
									"nodeType": "YulTypedName",
									"src": "1476:4:1",
									"type": ""
								}
							],
							"src": "1383:222:1"
						},
						{
							"body": {
								"nativeSrc": "1707:73:1",
								"nodeType": "YulBlock",
								"src": "1707:73:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1724:3:1",
													"nodeType": "YulIdentifier",
													"src": "1724:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "1729:6:1",
													"nodeType": "YulIdentifier",
													"src": "1729:6:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1717:6:1",
												"nodeType": "YulIdentifier",
												"src": "1717:6:1"
											},
											"nativeSrc": "1717:19:1",
											"nodeType": "YulFunctionCall",
											"src": "1717:19:1"
										},
										"nativeSrc": "1717:19:1",
										"nodeType": "YulExpressionStatement",
										"src": "1717:19:1"
									},
									{
										"nativeSrc": "1745:29:1",
										"nodeType": "YulAssignment",
										"src": "1745:29:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1764:3:1",
													"nodeType": "YulIdentifier",
													"src": "1764:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1769:4:1",
													"nodeType": "YulLiteral",
													"src": "1769:4:1",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1760:3:1",
												"nodeType": "YulIdentifier",
												"src": "1760:3:1"
											},
											"nativeSrc": "1760:14:1",
											"nodeType": "YulFunctionCall",
											"src": "1760:14:1"
										},
										"variableNames": [
											{
												"name": "updated_pos",
												"nativeSrc": "1745:11:1",
												"nodeType": "YulIdentifier",
												"src": "1745:11:1"
											}
										]
									}
								]
							},
							"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
							"nativeSrc": "1611:169:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "1679:3:1",
									"nodeType": "YulTypedName",
									"src": "1679:3:1",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "1684:6:1",
									"nodeType": "YulTypedName",
									"src": "1684:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "updated_pos",
									"nativeSrc": "1695:11:1",
									"nodeType": "YulTypedName",
									"src": "1695:11:1",
									"type": ""
								}
							],
							"src": "1611:169:1"
						},
						{
							"body": {
								"nativeSrc": "1892:68:1",
								"nodeType": "YulBlock",
								"src": "1892:68:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "1914:6:1",
															"nodeType": "YulIdentifier",
															"src": "1914:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "1922:1:1",
															"nodeType": "YulLiteral",
															"src": "1922:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1910:3:1",
														"nodeType": "YulIdentifier",
														"src": "1910:3:1"
													},
													"nativeSrc": "1910:14:1",
													"nodeType": "YulFunctionCall",
													"src": "1910:14:1"
												},
												{
													"hexValue": "596f75206d7573742073656e6420736f6d65204574686572",
													"kind": "string",
													"nativeSrc": "1926:26:1",
													"nodeType": "YulLiteral",
													"src": "1926:26:1",
													"type": "",
													"value": "You must send some Ether"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1903:6:1",
												"nodeType": "YulIdentifier",
												"src": "1903:6:1"
											},
											"nativeSrc": "1903:50:1",
											"nodeType": "YulFunctionCall",
											"src": "1903:50:1"
										},
										"nativeSrc": "1903:50:1",
										"nodeType": "YulExpressionStatement",
										"src": "1903:50:1"
									}
								]
							},
							"name": "store_literal_in_memory_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b",
							"nativeSrc": "1786:174:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "1884:6:1",
									"nodeType": "YulTypedName",
									"src": "1884:6:1",
									"type": ""
								}
							],
							"src": "1786:174:1"
						},
						{
							"body": {
								"nativeSrc": "2112:220:1",
								"nodeType": "YulBlock",
								"src": "2112:220:1",
								"statements": [
									{
										"nativeSrc": "2122:74:1",
										"nodeType": "YulAssignment",
										"src": "2122:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2188:3:1",
													"nodeType": "YulIdentifier",
													"src": "2188:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2193:2:1",
													"nodeType": "YulLiteral",
													"src": "2193:2:1",
													"type": "",
													"value": "24"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2129:58:1",
												"nodeType": "YulIdentifier",
												"src": "2129:58:1"
											},
											"nativeSrc": "2129:67:1",
											"nodeType": "YulFunctionCall",
											"src": "2129:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "2122:3:1",
												"nodeType": "YulIdentifier",
												"src": "2122:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2294:3:1",
													"nodeType": "YulIdentifier",
													"src": "2294:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b",
												"nativeSrc": "2205:88:1",
												"nodeType": "YulIdentifier",
												"src": "2205:88:1"
											},
											"nativeSrc": "2205:93:1",
											"nodeType": "YulFunctionCall",
											"src": "2205:93:1"
										},
										"nativeSrc": "2205:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "2205:93:1"
									},
									{
										"nativeSrc": "2307:19:1",
										"nodeType": "YulAssignment",
										"src": "2307:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2318:3:1",
													"nodeType": "YulIdentifier",
													"src": "2318:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2323:2:1",
													"nodeType": "YulLiteral",
													"src": "2323:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2314:3:1",
												"nodeType": "YulIdentifier",
												"src": "2314:3:1"
											},
											"nativeSrc": "2314:12:1",
											"nodeType": "YulFunctionCall",
											"src": "2314:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "2307:3:1",
												"nodeType": "YulIdentifier",
												"src": "2307:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "1966:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "2100:3:1",
									"nodeType": "YulTypedName",
									"src": "2100:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "2108:3:1",
									"nodeType": "YulTypedName",
									"src": "2108:3:1",
									"type": ""
								}
							],
							"src": "1966:366:1"
						},
						{
							"body": {
								"nativeSrc": "2509:248:1",
								"nodeType": "YulBlock",
								"src": "2509:248:1",
								"statements": [
									{
										"nativeSrc": "2519:26:1",
										"nodeType": "YulAssignment",
										"src": "2519:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2531:9:1",
													"nodeType": "YulIdentifier",
													"src": "2531:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2542:2:1",
													"nodeType": "YulLiteral",
													"src": "2542:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2527:3:1",
												"nodeType": "YulIdentifier",
												"src": "2527:3:1"
											},
											"nativeSrc": "2527:18:1",
											"nodeType": "YulFunctionCall",
											"src": "2527:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "2519:4:1",
												"nodeType": "YulIdentifier",
												"src": "2519:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "2566:9:1",
															"nodeType": "YulIdentifier",
															"src": "2566:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "2577:1:1",
															"nodeType": "YulLiteral",
															"src": "2577:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "2562:3:1",
														"nodeType": "YulIdentifier",
														"src": "2562:3:1"
													},
													"nativeSrc": "2562:17:1",
													"nodeType": "YulFunctionCall",
													"src": "2562:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "2585:4:1",
															"nodeType": "YulIdentifier",
															"src": "2585:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "2591:9:1",
															"nodeType": "YulIdentifier",
															"src": "2591:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "2581:3:1",
														"nodeType": "YulIdentifier",
														"src": "2581:3:1"
													},
													"nativeSrc": "2581:20:1",
													"nodeType": "YulFunctionCall",
													"src": "2581:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2555:6:1",
												"nodeType": "YulIdentifier",
												"src": "2555:6:1"
											},
											"nativeSrc": "2555:47:1",
											"nodeType": "YulFunctionCall",
											"src": "2555:47:1"
										},
										"nativeSrc": "2555:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "2555:47:1"
									},
									{
										"nativeSrc": "2611:139:1",
										"nodeType": "YulAssignment",
										"src": "2611:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "2745:4:1",
													"nodeType": "YulIdentifier",
													"src": "2745:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2619:124:1",
												"nodeType": "YulIdentifier",
												"src": "2619:124:1"
											},
											"nativeSrc": "2619:131:1",
											"nodeType": "YulFunctionCall",
											"src": "2619:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "2611:4:1",
												"nodeType": "YulIdentifier",
												"src": "2611:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "2338:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2489:9:1",
									"nodeType": "YulTypedName",
									"src": "2489:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "2504:4:1",
									"nodeType": "YulTypedName",
									"src": "2504:4:1",
									"type": ""
								}
							],
							"src": "2338:419:1"
						},
						{
							"body": {
								"nativeSrc": "2869:59:1",
								"nodeType": "YulBlock",
								"src": "2869:59:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "2891:6:1",
															"nodeType": "YulIdentifier",
															"src": "2891:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "2899:1:1",
															"nodeType": "YulLiteral",
															"src": "2899:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "2887:3:1",
														"nodeType": "YulIdentifier",
														"src": "2887:3:1"
													},
													"nativeSrc": "2887:14:1",
													"nodeType": "YulFunctionCall",
													"src": "2887:14:1"
												},
												{
													"hexValue": "6e6f206e65656420746f2070617921",
													"kind": "string",
													"nativeSrc": "2903:17:1",
													"nodeType": "YulLiteral",
													"src": "2903:17:1",
													"type": "",
													"value": "no need to pay!"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2880:6:1",
												"nodeType": "YulIdentifier",
												"src": "2880:6:1"
											},
											"nativeSrc": "2880:41:1",
											"nodeType": "YulFunctionCall",
											"src": "2880:41:1"
										},
										"nativeSrc": "2880:41:1",
										"nodeType": "YulExpressionStatement",
										"src": "2880:41:1"
									}
								]
							},
							"name": "store_literal_in_memory_ec45d5bdb228a86d6f29e095f0ff2cec164597a7d56ce499e5b45b6035ec23f1",
							"nativeSrc": "2763:165:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "2861:6:1",
									"nodeType": "YulTypedName",
									"src": "2861:6:1",
									"type": ""
								}
							],
							"src": "2763:165:1"
						},
						{
							"body": {
								"nativeSrc": "3080:220:1",
								"nodeType": "YulBlock",
								"src": "3080:220:1",
								"statements": [
									{
										"nativeSrc": "3090:74:1",
										"nodeType": "YulAssignment",
										"src": "3090:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3156:3:1",
													"nodeType": "YulIdentifier",
													"src": "3156:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3161:2:1",
													"nodeType": "YulLiteral",
													"src": "3161:2:1",
													"type": "",
													"value": "15"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3097:58:1",
												"nodeType": "YulIdentifier",
												"src": "3097:58:1"
											},
											"nativeSrc": "3097:67:1",
											"nodeType": "YulFunctionCall",
											"src": "3097:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "3090:3:1",
												"nodeType": "YulIdentifier",
												"src": "3090:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3262:3:1",
													"nodeType": "YulIdentifier",
													"src": "3262:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_ec45d5bdb228a86d6f29e095f0ff2cec164597a7d56ce499e5b45b6035ec23f1",
												"nativeSrc": "3173:88:1",
												"nodeType": "YulIdentifier",
												"src": "3173:88:1"
											},
											"nativeSrc": "3173:93:1",
											"nodeType": "YulFunctionCall",
											"src": "3173:93:1"
										},
										"nativeSrc": "3173:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "3173:93:1"
									},
									{
										"nativeSrc": "3275:19:1",
										"nodeType": "YulAssignment",
										"src": "3275:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3286:3:1",
													"nodeType": "YulIdentifier",
													"src": "3286:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3291:2:1",
													"nodeType": "YulLiteral",
													"src": "3291:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3282:3:1",
												"nodeType": "YulIdentifier",
												"src": "3282:3:1"
											},
											"nativeSrc": "3282:12:1",
											"nodeType": "YulFunctionCall",
											"src": "3282:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "3275:3:1",
												"nodeType": "YulIdentifier",
												"src": "3275:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_ec45d5bdb228a86d6f29e095f0ff2cec164597a7d56ce499e5b45b6035ec23f1_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "2934:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "3068:3:1",
									"nodeType": "YulTypedName",
									"src": "3068:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "3076:3:1",
									"nodeType": "YulTypedName",
									"src": "3076:3:1",
									"type": ""
								}
							],
							"src": "2934:366:1"
						},
						{
							"body": {
								"nativeSrc": "3477:248:1",
								"nodeType": "YulBlock",
								"src": "3477:248:1",
								"statements": [
									{
										"nativeSrc": "3487:26:1",
										"nodeType": "YulAssignment",
										"src": "3487:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3499:9:1",
													"nodeType": "YulIdentifier",
													"src": "3499:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3510:2:1",
													"nodeType": "YulLiteral",
													"src": "3510:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3495:3:1",
												"nodeType": "YulIdentifier",
												"src": "3495:3:1"
											},
											"nativeSrc": "3495:18:1",
											"nodeType": "YulFunctionCall",
											"src": "3495:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3487:4:1",
												"nodeType": "YulIdentifier",
												"src": "3487:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3534:9:1",
															"nodeType": "YulIdentifier",
															"src": "3534:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "3545:1:1",
															"nodeType": "YulLiteral",
															"src": "3545:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3530:3:1",
														"nodeType": "YulIdentifier",
														"src": "3530:3:1"
													},
													"nativeSrc": "3530:17:1",
													"nodeType": "YulFunctionCall",
													"src": "3530:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "3553:4:1",
															"nodeType": "YulIdentifier",
															"src": "3553:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "3559:9:1",
															"nodeType": "YulIdentifier",
															"src": "3559:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "3549:3:1",
														"nodeType": "YulIdentifier",
														"src": "3549:3:1"
													},
													"nativeSrc": "3549:20:1",
													"nodeType": "YulFunctionCall",
													"src": "3549:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3523:6:1",
												"nodeType": "YulIdentifier",
												"src": "3523:6:1"
											},
											"nativeSrc": "3523:47:1",
											"nodeType": "YulFunctionCall",
											"src": "3523:47:1"
										},
										"nativeSrc": "3523:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "3523:47:1"
									},
									{
										"nativeSrc": "3579:139:1",
										"nodeType": "YulAssignment",
										"src": "3579:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "3713:4:1",
													"nodeType": "YulIdentifier",
													"src": "3713:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_ec45d5bdb228a86d6f29e095f0ff2cec164597a7d56ce499e5b45b6035ec23f1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3587:124:1",
												"nodeType": "YulIdentifier",
												"src": "3587:124:1"
											},
											"nativeSrc": "3587:131:1",
											"nodeType": "YulFunctionCall",
											"src": "3587:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3579:4:1",
												"nodeType": "YulIdentifier",
												"src": "3579:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_ec45d5bdb228a86d6f29e095f0ff2cec164597a7d56ce499e5b45b6035ec23f1__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "3306:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3457:9:1",
									"nodeType": "YulTypedName",
									"src": "3457:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "3472:4:1",
									"nodeType": "YulTypedName",
									"src": "3472:4:1",
									"type": ""
								}
							],
							"src": "3306:419:1"
						}
					]
				},
				"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b(memPtr) {\n\n        mstore(add(memPtr, 0), \"You must send some Ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ec45d5bdb228a86d6f29e095f0ff2cec164597a7d56ce499e5b45b6035ec23f1(memPtr) {\n\n        mstore(add(memPtr, 0), \"no need to pay!\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec45d5bdb228a86d6f29e095f0ff2cec164597a7d56ce499e5b45b6035ec23f1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_ec45d5bdb228a86d6f29e095f0ff2cec164597a7d56ce499e5b45b6035ec23f1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec45d5bdb228a86d6f29e095f0ff2cec164597a7d56ce499e5b45b6035ec23f1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec45d5bdb228a86d6f29e095f0ff2cec164597a7d56ce499e5b45b6035ec23f1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "60806040526004361061003e575f3560e01c80630c11dedd1461004257806312065fe01461005e5780637c67a3e214610088578063f9a24dc0146100c4575b5f80fd5b61005c6004803603810190610057919061044d565b6100ec565b005b348015610069575f80fd5b506100726101dc565b60405161007f9190610490565b60405180910390f35b348015610093575f80fd5b506100ae60048036038101906100a9919061044d565b6101e3565b6040516100bb9190610490565b60405180910390f35b3480156100cf575f80fd5b506100ea60048036038101906100e5919061044d565b610228565b005b6100f581610228565b5f6001151560015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16151514159050600115158115151461019d575f3411610198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018f90610503565b60405180910390fd5b6101d8565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cf9061056b565b60405180910390fd5b5050565b5f47905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414159050600115158115151461031157425f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506001805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506103eb565b425f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054116103ea575f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b5b5050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61041c826103f3565b9050919050565b61042c81610412565b8114610436575f80fd5b50565b5f8135905061044781610423565b92915050565b5f60208284031215610462576104616103ef565b5b5f61046f84828501610439565b91505092915050565b5f819050919050565b61048a81610478565b82525050565b5f6020820190506104a35f830184610481565b92915050565b5f82825260208201905092915050565b7f596f75206d7573742073656e6420736f6d6520457468657200000000000000005f82015250565b5f6104ed6018836104a9565b91506104f8826104b9565b602082019050919050565b5f6020820190508181035f83015261051a816104e1565b9050919050565b7f6e6f206e65656420746f207061792100000000000000000000000000000000005f82015250565b5f610555600f836104a9565b915061056082610521565b602082019050919050565b5f6020820190508181035f83015261058281610549565b905091905056fea26469706673582212205aa2f4032b16671a05e6f7eac0c4a39b5575e50abffdaa8f64b2eedc45f520cd64736f6c63430008160033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC11DEDD EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x7C67A3E2 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xF9A24DC0 EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x44D JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x72 PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x44D JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 DUP2 PUSH2 0x228 JUMP JUMPDEST PUSH0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x19D JUMPI PUSH0 CALLVALUE GT PUSH2 0x198 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F SWAP1 PUSH2 0x503 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x311 JUMPI TIMESTAMP PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3EB JUMP JUMPDEST TIMESTAMP PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x3EA JUMPI PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x41C DUP3 PUSH2 0x3F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42C DUP2 PUSH2 0x412 JUMP JUMPDEST DUP2 EQ PUSH2 0x436 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x447 DUP2 PUSH2 0x423 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0x3EF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x46F DUP5 DUP3 DUP6 ADD PUSH2 0x439 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x48A DUP2 PUSH2 0x478 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A3 PUSH0 DUP4 ADD DUP5 PUSH2 0x481 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206D7573742073656E6420736F6D652045746865720000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4ED PUSH1 0x18 DUP4 PUSH2 0x4A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F8 DUP3 PUSH2 0x4B9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x51A DUP2 PUSH2 0x4E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F206E65656420746F20706179210000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x555 PUSH1 0xF DUP4 PUSH2 0x4A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x560 DUP3 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x582 DUP2 PUSH2 0x549 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS LOG2 DELEGATECALL SUB 0x2B AND PUSH8 0x1A05E6F7EAC0C4A3 SWAP12 SSTORE PUSH22 0xE50ABFFDAA8F64B2EEDC45F520CD64736F6C63430008 AND STOP CALLER ",
		"sourceMap": "73:1628:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1082:463;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1599:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;912:120;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;305:599;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1082:463;1142:26;1157:10;1142:14;:26::i;:::-;1255:15;1305:4;1273:36;;:16;:28;1290:10;1273:28;;;;;;;;;;;;;;;;;;;;;;;;;:36;;;;1255:54;;1337:4;1323:18;;:10;:18;;;1320:216;;1438:1;1426:9;:13;1418:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1320:216;;;1499:25;;;;;;;;;;:::i;:::-;;;;;;;;1320:216;1129:416;1082:463;:::o;1599:97::-;1641:7;1667:21;1660:28;;1599:97;:::o;912:120::-;967:7;996:14;:26;1011:10;996:26;;;;;;;;;;;;;;;;988:34;;912:120;;;:::o;305:599::-;378:15;428:1;396:14;:28;411:12;396:28;;;;;;;;;;;;;;;;:33;;378:51;;459:4;445:18;;:10;:18;;;442:453;;583:15;552:14;:28;567:12;552:28;;;;;;;;;;;;;;;:46;;;;664:4;631:16;:30;648:12;631:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;442:453;;;738:15;706:14;:28;721:12;706:28;;;;;;;;;;;;;;;;:47;703:179;;806:1;775:14;:28;790:12;775:28;;;;;;;;;;;;;;;:32;;;;859:5;826:16;:30;843:12;826:30;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;703:179;442:453;357:547;305:599;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:169::-;1695:11;1729:6;1724:3;1717:19;1769:4;1764:3;1760:14;1745:29;;1611:169;;;;:::o;1786:174::-;1926:26;1922:1;1914:6;1910:14;1903:50;1786:174;:::o;1966:366::-;2108:3;2129:67;2193:2;2188:3;2129:67;:::i;:::-;2122:74;;2205:93;2294:3;2205:93;:::i;:::-;2323:2;2318:3;2314:12;2307:19;;1966:366;;;:::o;2338:419::-;2504:4;2542:2;2531:9;2527:18;2519:26;;2591:9;2585:4;2581:20;2577:1;2566:9;2562:17;2555:47;2619:131;2745:4;2619:131;:::i;:::-;2611:139;;2338:419;;;:::o;2763:165::-;2903:17;2899:1;2891:6;2887:14;2880:41;2763:165;:::o;2934:366::-;3076:3;3097:67;3161:2;3156:3;3097:67;:::i;:::-;3090:74;;3173:93;3262:3;3173:93;:::i;:::-;3291:2;3286:3;3282:12;3275:19;;2934:366;;;:::o;3306:419::-;3472:4;3510:2;3499:9;3495:18;3487:26;;3559:9;3553:4;3549:20;3545:1;3534:9;3530:17;3523:47;3587:131;3713:4;3587:131;:::i;:::-;3579:139;;3306:419;;;:::o"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  PUSH 40\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  MSTORE \t\t\tcontract cryptoDoreaUsers {\\r\\...\n  CALLVALUE \t\t\tconstructor()  {\\r\\n\\r\\n\\r\\n  ...\n  DUP1 \t\t\tconstructor()  {\\r\\n\\r\\n\\r\\n  ...\n  ISZERO \t\t\tconstructor()  {\\r\\n\\r\\n\\r\\n  ...\n  PUSH [tag] 1\t\t\tconstructor()  {\\r\\n\\r\\n\\r\\n  ...\n  JUMPI \t\t\tconstructor()  {\\r\\n\\r\\n\\r\\n  ...\n  PUSH 0\t\t\tconstructor()  {\\r\\n\\r\\n\\r\\n  ...\n  DUP1 \t\t\tconstructor()  {\\r\\n\\r\\n\\r\\n  ...\n  REVERT \t\t\tconstructor()  {\\r\\n\\r\\n\\r\\n  ...\ntag 1\t\t\tconstructor()  {\\r\\n\\r\\n\\r\\n  ...\n  JUMPDEST \t\t\tconstructor()  {\\r\\n\\r\\n\\r\\n  ...\n  POP \t\t\tconstructor()  {\\r\\n\\r\\n\\r\\n  ...\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  PUSH 0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  CODECOPY \t\t\tcontract cryptoDoreaUsers {\\r\\...\n  PUSH 0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  RETURN \t\t\tcontract cryptoDoreaUsers {\\r\\...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 40\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      MSTORE \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 4\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      CALLDATASIZE \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      LT \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH [tag] 1\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPI \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      CALLDATALOAD \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH E0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      SHR \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH C11DEDD\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      EQ \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH [tag] 2\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPI \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 12065FE0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      EQ \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH [tag] 3\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPI \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 7C67A3E2\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      EQ \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH [tag] 4\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPI \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH F9A24DC0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      EQ \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH [tag] 5\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPI \t\t\tcontract cryptoDoreaUsers {\\r\\...\n    tag 1\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPDEST \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      REVERT \t\t\tcontract cryptoDoreaUsers {\\r\\...\n    tag 2\t\t\tfunction pay(address _receipen...\n      JUMPDEST \t\t\tfunction pay(address _receipen...\n      PUSH [tag] 6\t\t\tfunction pay(address _receipen...\n      PUSH 4\t\t\tfunction pay(address _receipen...\n      DUP1 \t\t\tfunction pay(address _receipen...\n      CALLDATASIZE \t\t\tfunction pay(address _receipen...\n      SUB \t\t\tfunction pay(address _receipen...\n      DUP2 \t\t\tfunction pay(address _receipen...\n      ADD \t\t\tfunction pay(address _receipen...\n      SWAP1 \t\t\tfunction pay(address _receipen...\n      PUSH [tag] 7\t\t\tfunction pay(address _receipen...\n      SWAP2 \t\t\tfunction pay(address _receipen...\n      SWAP1 \t\t\tfunction pay(address _receipen...\n      PUSH [tag] 8\t\t\tfunction pay(address _receipen...\n      JUMP \t\t\tfunction pay(address _receipen...\n    tag 7\t\t\tfunction pay(address _receipen...\n      JUMPDEST \t\t\tfunction pay(address _receipen...\n      PUSH [tag] 9\t\t\tfunction pay(address _receipen...\n      JUMP \t\t\tfunction pay(address _receipen...\n    tag 6\t\t\tfunction pay(address _receipen...\n      JUMPDEST \t\t\tfunction pay(address _receipen...\n      STOP \t\t\tfunction pay(address _receipen...\n    tag 3\t\t\tfunction getBalance() public v...\n      JUMPDEST \t\t\tfunction getBalance() public v...\n      CALLVALUE \t\t\tfunction getBalance() public v...\n      DUP1 \t\t\tfunction getBalance() public v...\n      ISZERO \t\t\tfunction getBalance() public v...\n      PUSH [tag] 10\t\t\tfunction getBalance() public v...\n      JUMPI \t\t\tfunction getBalance() public v...\n      PUSH 0\t\t\tfunction getBalance() public v...\n      DUP1 \t\t\tfunction getBalance() public v...\n      REVERT \t\t\tfunction getBalance() public v...\n    tag 10\t\t\tfunction getBalance() public v...\n      JUMPDEST \t\t\tfunction getBalance() public v...\n      POP \t\t\tfunction getBalance() public v...\n      PUSH [tag] 11\t\t\tfunction getBalance() public v...\n      PUSH [tag] 12\t\t\tfunction getBalance() public v...\n      JUMP \t\t\tfunction getBalance() public v...\n    tag 11\t\t\tfunction getBalance() public v...\n      JUMPDEST \t\t\tfunction getBalance() public v...\n      PUSH 40\t\t\tfunction getBalance() public v...\n      MLOAD \t\t\tfunction getBalance() public v...\n      PUSH [tag] 13\t\t\tfunction getBalance() public v...\n      SWAP2 \t\t\tfunction getBalance() public v...\n      SWAP1 \t\t\tfunction getBalance() public v...\n      PUSH [tag] 14\t\t\tfunction getBalance() public v...\n      JUMP \t\t\tfunction getBalance() public v...\n    tag 13\t\t\tfunction getBalance() public v...\n      JUMPDEST \t\t\tfunction getBalance() public v...\n      PUSH 40\t\t\tfunction getBalance() public v...\n      MLOAD \t\t\tfunction getBalance() public v...\n      DUP1 \t\t\tfunction getBalance() public v...\n      SWAP2 \t\t\tfunction getBalance() public v...\n      SUB \t\t\tfunction getBalance() public v...\n      SWAP1 \t\t\tfunction getBalance() public v...\n      RETURN \t\t\tfunction getBalance() public v...\n    tag 4\t\t\tfunction time(address _receipe...\n      JUMPDEST \t\t\tfunction time(address _receipe...\n      CALLVALUE \t\t\tfunction time(address _receipe...\n      DUP1 \t\t\tfunction time(address _receipe...\n      ISZERO \t\t\tfunction time(address _receipe...\n      PUSH [tag] 15\t\t\tfunction time(address _receipe...\n      JUMPI \t\t\tfunction time(address _receipe...\n      PUSH 0\t\t\tfunction time(address _receipe...\n      DUP1 \t\t\tfunction time(address _receipe...\n      REVERT \t\t\tfunction time(address _receipe...\n    tag 15\t\t\tfunction time(address _receipe...\n      JUMPDEST \t\t\tfunction time(address _receipe...\n      POP \t\t\tfunction time(address _receipe...\n      PUSH [tag] 16\t\t\tfunction time(address _receipe...\n      PUSH 4\t\t\tfunction time(address _receipe...\n      DUP1 \t\t\tfunction time(address _receipe...\n      CALLDATASIZE \t\t\tfunction time(address _receipe...\n      SUB \t\t\tfunction time(address _receipe...\n      DUP2 \t\t\tfunction time(address _receipe...\n      ADD \t\t\tfunction time(address _receipe...\n      SWAP1 \t\t\tfunction time(address _receipe...\n      PUSH [tag] 17\t\t\tfunction time(address _receipe...\n      SWAP2 \t\t\tfunction time(address _receipe...\n      SWAP1 \t\t\tfunction time(address _receipe...\n      PUSH [tag] 8\t\t\tfunction time(address _receipe...\n      JUMP \t\t\tfunction time(address _receipe...\n    tag 17\t\t\tfunction time(address _receipe...\n      JUMPDEST \t\t\tfunction time(address _receipe...\n      PUSH [tag] 18\t\t\tfunction time(address _receipe...\n      JUMP \t\t\tfunction time(address _receipe...\n    tag 16\t\t\tfunction time(address _receipe...\n      JUMPDEST \t\t\tfunction time(address _receipe...\n      PUSH 40\t\t\tfunction time(address _receipe...\n      MLOAD \t\t\tfunction time(address _receipe...\n      PUSH [tag] 19\t\t\tfunction time(address _receipe...\n      SWAP2 \t\t\tfunction time(address _receipe...\n      SWAP1 \t\t\tfunction time(address _receipe...\n      PUSH [tag] 14\t\t\tfunction time(address _receipe...\n      JUMP \t\t\tfunction time(address _receipe...\n    tag 19\t\t\tfunction time(address _receipe...\n      JUMPDEST \t\t\tfunction time(address _receipe...\n      PUSH 40\t\t\tfunction time(address _receipe...\n      MLOAD \t\t\tfunction time(address _receipe...\n      DUP1 \t\t\tfunction time(address _receipe...\n      SWAP2 \t\t\tfunction time(address _receipe...\n      SUB \t\t\tfunction time(address _receipe...\n      SWAP1 \t\t\tfunction time(address _receipe...\n      RETURN \t\t\tfunction time(address _receipe...\n    tag 5\t\t\tfunction freeTrialCheck(addres...\n      JUMPDEST \t\t\tfunction freeTrialCheck(addres...\n      CALLVALUE \t\t\tfunction freeTrialCheck(addres...\n      DUP1 \t\t\tfunction freeTrialCheck(addres...\n      ISZERO \t\t\tfunction freeTrialCheck(addres...\n      PUSH [tag] 20\t\t\tfunction freeTrialCheck(addres...\n      JUMPI \t\t\tfunction freeTrialCheck(addres...\n      PUSH 0\t\t\tfunction freeTrialCheck(addres...\n      DUP1 \t\t\tfunction freeTrialCheck(addres...\n      REVERT \t\t\tfunction freeTrialCheck(addres...\n    tag 20\t\t\tfunction freeTrialCheck(addres...\n      JUMPDEST \t\t\tfunction freeTrialCheck(addres...\n      POP \t\t\tfunction freeTrialCheck(addres...\n      PUSH [tag] 21\t\t\tfunction freeTrialCheck(addres...\n      PUSH 4\t\t\tfunction freeTrialCheck(addres...\n      DUP1 \t\t\tfunction freeTrialCheck(addres...\n      CALLDATASIZE \t\t\tfunction freeTrialCheck(addres...\n      SUB \t\t\tfunction freeTrialCheck(addres...\n      DUP2 \t\t\tfunction freeTrialCheck(addres...\n      ADD \t\t\tfunction freeTrialCheck(addres...\n      SWAP1 \t\t\tfunction freeTrialCheck(addres...\n      PUSH [tag] 22\t\t\tfunction freeTrialCheck(addres...\n      SWAP2 \t\t\tfunction freeTrialCheck(addres...\n      SWAP1 \t\t\tfunction freeTrialCheck(addres...\n      PUSH [tag] 8\t\t\tfunction freeTrialCheck(addres...\n      JUMP \t\t\tfunction freeTrialCheck(addres...\n    tag 22\t\t\tfunction freeTrialCheck(addres...\n      JUMPDEST \t\t\tfunction freeTrialCheck(addres...\n      PUSH [tag] 23\t\t\tfunction freeTrialCheck(addres...\n      JUMP \t\t\tfunction freeTrialCheck(addres...\n    tag 21\t\t\tfunction freeTrialCheck(addres...\n      JUMPDEST \t\t\tfunction freeTrialCheck(addres...\n      STOP \t\t\tfunction freeTrialCheck(addres...\n    tag 9\t\t\tfunction pay(address _receipen...\n      JUMPDEST \t\t\tfunction pay(address _receipen...\n      PUSH [tag] 25\t\t\tfreeTrialCheck(_receipent)\n      DUP2 \t\t\t_receipent\n      PUSH [tag] 23\t\t\tfreeTrialCheck\n      JUMP \t\t\tfreeTrialCheck(_receipent)\n    tag 25\t\t\tfreeTrialCheck(_receipent)\n      JUMPDEST \t\t\tfreeTrialCheck(_receipent)\n      PUSH 0\t\t\tbool trialCheck\n      PUSH 1\t\t\ttrue\n      ISZERO \t\t\t_freeTrialStatus[_receipent] !...\n      ISZERO \t\t\t_freeTrialStatus[_receipent] !...\n      PUSH 1\t\t\t_freeTrialStatus\n      PUSH 0\t\t\t_freeTrialStatus[_receipent]\n      DUP5 \t\t\t_receipent\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialStatus[_receipent]\n      AND \t\t\t_freeTrialStatus[_receipent]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialStatus[_receipent]\n      AND \t\t\t_freeTrialStatus[_receipent]\n      DUP2 \t\t\t_freeTrialStatus[_receipent]\n      MSTORE \t\t\t_freeTrialStatus[_receipent]\n      PUSH 20\t\t\t_freeTrialStatus[_receipent]\n      ADD \t\t\t_freeTrialStatus[_receipent]\n      SWAP1 \t\t\t_freeTrialStatus[_receipent]\n      DUP2 \t\t\t_freeTrialStatus[_receipent]\n      MSTORE \t\t\t_freeTrialStatus[_receipent]\n      PUSH 20\t\t\t_freeTrialStatus[_receipent]\n      ADD \t\t\t_freeTrialStatus[_receipent]\n      PUSH 0\t\t\t_freeTrialStatus[_receipent]\n      KECCAK256 \t\t\t_freeTrialStatus[_receipent]\n      PUSH 0\t\t\t_freeTrialStatus[_receipent]\n      SWAP1 \t\t\t_freeTrialStatus[_receipent]\n      SLOAD \t\t\t_freeTrialStatus[_receipent]\n      SWAP1 \t\t\t_freeTrialStatus[_receipent]\n      PUSH 100\t\t\t_freeTrialStatus[_receipent]\n      EXP \t\t\t_freeTrialStatus[_receipent]\n      SWAP1 \t\t\t_freeTrialStatus[_receipent]\n      DIV \t\t\t_freeTrialStatus[_receipent]\n      PUSH FF\t\t\t_freeTrialStatus[_receipent]\n      AND \t\t\t_freeTrialStatus[_receipent]\n      ISZERO \t\t\t_freeTrialStatus[_receipent] !...\n      ISZERO \t\t\t_freeTrialStatus[_receipent] !...\n      EQ \t\t\t_freeTrialStatus[_receipent] !...\n      ISZERO \t\t\t_freeTrialStatus[_receipent] !...\n      SWAP1 \t\t\tbool trialCheck = _freeTrialSt...\n      POP \t\t\tbool trialCheck = _freeTrialSt...\n      PUSH 1\t\t\ttrue\n      ISZERO \t\t\ttrialCheck != true\n      ISZERO \t\t\ttrialCheck != true\n      DUP2 \t\t\ttrialCheck\n      ISZERO \t\t\ttrialCheck != true\n      ISZERO \t\t\ttrialCheck != true\n      EQ \t\t\ttrialCheck != true\n      PUSH [tag] 26\t\t\tif(trialCheck != true){\\r\\n   ...\n      JUMPI \t\t\tif(trialCheck != true){\\r\\n   ...\n      PUSH 0\t\t\t0\n      CALLVALUE \t\t\tmsg.value\n      GT \t\t\tmsg.value > 0\n      PUSH [tag] 27\t\t\trequire(msg.value > 0, \"You mu...\n      JUMPI \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH 40\t\t\trequire(msg.value > 0, \"You mu...\n      MLOAD \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(msg.value > 0, \"You mu...\n      DUP2 \t\t\trequire(msg.value > 0, \"You mu...\n      MSTORE \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH 4\t\t\trequire(msg.value > 0, \"You mu...\n      ADD \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH [tag] 28\t\t\trequire(msg.value > 0, \"You mu...\n      SWAP1 \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH [tag] 29\t\t\trequire(msg.value > 0, \"You mu...\n      JUMP \t\t\trequire(msg.value > 0, \"You mu...\n    tag 28\t\t\trequire(msg.value > 0, \"You mu...\n      JUMPDEST \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH 40\t\t\trequire(msg.value > 0, \"You mu...\n      MLOAD \t\t\trequire(msg.value > 0, \"You mu...\n      DUP1 \t\t\trequire(msg.value > 0, \"You mu...\n      SWAP2 \t\t\trequire(msg.value > 0, \"You mu...\n      SUB \t\t\trequire(msg.value > 0, \"You mu...\n      SWAP1 \t\t\trequire(msg.value > 0, \"You mu...\n      REVERT \t\t\trequire(msg.value > 0, \"You mu...\n    tag 27\t\t\trequire(msg.value > 0, \"You mu...\n      JUMPDEST \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH [tag] 30\t\t\tif(trialCheck != true){\\r\\n   ...\n      JUMP \t\t\tif(trialCheck != true){\\r\\n   ...\n    tag 26\t\t\tif(trialCheck != true){\\r\\n   ...\n      JUMPDEST \t\t\tif(trialCheck != true){\\r\\n   ...\n      PUSH 40\t\t\trevert(\"no need to pay!\")\n      MLOAD \t\t\trevert(\"no need to pay!\")\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trevert(\"no need to pay!\")\n      DUP2 \t\t\trevert(\"no need to pay!\")\n      MSTORE \t\t\trevert(\"no need to pay!\")\n      PUSH 4\t\t\trevert(\"no need to pay!\")\n      ADD \t\t\trevert(\"no need to pay!\")\n      PUSH [tag] 31\t\t\trevert(\"no need to pay!\")\n      SWAP1 \t\t\trevert(\"no need to pay!\")\n      PUSH [tag] 32\t\t\trevert(\"no need to pay!\")\n      JUMP \t\t\trevert(\"no need to pay!\")\n    tag 31\t\t\trevert(\"no need to pay!\")\n      JUMPDEST \t\t\trevert(\"no need to pay!\")\n      PUSH 40\t\t\trevert(\"no need to pay!\")\n      MLOAD \t\t\trevert(\"no need to pay!\")\n      DUP1 \t\t\trevert(\"no need to pay!\")\n      SWAP2 \t\t\trevert(\"no need to pay!\")\n      SUB \t\t\trevert(\"no need to pay!\")\n      SWAP1 \t\t\trevert(\"no need to pay!\")\n      REVERT \t\t\trevert(\"no need to pay!\")\n    tag 30\t\t\tif(trialCheck != true){\\r\\n   ...\n      JUMPDEST \t\t\tif(trialCheck != true){\\r\\n   ...\n      POP \t\t\t{\\r\\n\\r\\n        freeTrialChec...\n      POP \t\t\tfunction pay(address _receipen...\n      JUMP \t\t\tfunction pay(address _receipen...\n    tag 12\t\t\tfunction getBalance() public v...\n      JUMPDEST \t\t\tfunction getBalance() public v...\n      PUSH 0\t\t\tuint256\n      SELFBALANCE \t\t\taddress(this).balance\n      SWAP1 \t\t\treturn address(this).balance\n      POP \t\t\treturn address(this).balance\n      SWAP1 \t\t\tfunction getBalance() public v...\n      JUMP \t\t\tfunction getBalance() public v...\n    tag 18\t\t\tfunction time(address _receipe...\n      JUMPDEST \t\t\tfunction time(address _receipe...\n      PUSH 0\t\t\tuint256\n      DUP1 \t\t\t_freeTrialTime\n      PUSH 0\t\t\t_freeTrialTime[_receipent]\n      DUP4 \t\t\t_receipent\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialTime[_receipent]\n      AND \t\t\t_freeTrialTime[_receipent]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialTime[_receipent]\n      AND \t\t\t_freeTrialTime[_receipent]\n      DUP2 \t\t\t_freeTrialTime[_receipent]\n      MSTORE \t\t\t_freeTrialTime[_receipent]\n      PUSH 20\t\t\t_freeTrialTime[_receipent]\n      ADD \t\t\t_freeTrialTime[_receipent]\n      SWAP1 \t\t\t_freeTrialTime[_receipent]\n      DUP2 \t\t\t_freeTrialTime[_receipent]\n      MSTORE \t\t\t_freeTrialTime[_receipent]\n      PUSH 20\t\t\t_freeTrialTime[_receipent]\n      ADD \t\t\t_freeTrialTime[_receipent]\n      PUSH 0\t\t\t_freeTrialTime[_receipent]\n      KECCAK256 \t\t\t_freeTrialTime[_receipent]\n      SLOAD \t\t\t_freeTrialTime[_receipent]\n      SWAP1 \t\t\treturn  _freeTrialTime[_receip...\n      POP \t\t\treturn  _freeTrialTime[_receip...\n      SWAP2 \t\t\tfunction time(address _receipe...\n      SWAP1 \t\t\tfunction time(address _receipe...\n      POP \t\t\tfunction time(address _receipe...\n      JUMP \t\t\tfunction time(address _receipe...\n    tag 23\t\t\tfunction freeTrialCheck(addres...\n      JUMPDEST \t\t\tfunction freeTrialCheck(addres...\n      PUSH 0\t\t\tbool trialCheck\n      DUP1 \t\t\t0\n      PUSH 0\t\t\t_freeTrialTime\n      DUP1 \t\t\t_freeTrialTime[usersAddress]\n      DUP5 \t\t\tusersAddress\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialTime[usersAddress]\n      AND \t\t\t_freeTrialTime[usersAddress]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialTime[usersAddress]\n      AND \t\t\t_freeTrialTime[usersAddress]\n      DUP2 \t\t\t_freeTrialTime[usersAddress]\n      MSTORE \t\t\t_freeTrialTime[usersAddress]\n      PUSH 20\t\t\t_freeTrialTime[usersAddress]\n      ADD \t\t\t_freeTrialTime[usersAddress]\n      SWAP1 \t\t\t_freeTrialTime[usersAddress]\n      DUP2 \t\t\t_freeTrialTime[usersAddress]\n      MSTORE \t\t\t_freeTrialTime[usersAddress]\n      PUSH 20\t\t\t_freeTrialTime[usersAddress]\n      ADD \t\t\t_freeTrialTime[usersAddress]\n      PUSH 0\t\t\t_freeTrialTime[usersAddress]\n      KECCAK256 \t\t\t_freeTrialTime[usersAddress]\n      SLOAD \t\t\t_freeTrialTime[usersAddress]\n      EQ \t\t\t_freeTrialTime[usersAddress] !...\n      ISZERO \t\t\t_freeTrialTime[usersAddress] !...\n      SWAP1 \t\t\tbool trialCheck = _freeTrialTi...\n      POP \t\t\tbool trialCheck = _freeTrialTi...\n      PUSH 1\t\t\ttrue\n      ISZERO \t\t\ttrialCheck != true\n      ISZERO \t\t\ttrialCheck != true\n      DUP2 \t\t\ttrialCheck\n      ISZERO \t\t\ttrialCheck != true\n      ISZERO \t\t\ttrialCheck != true\n      EQ \t\t\ttrialCheck != true\n      PUSH [tag] 36\t\t\tif(trialCheck != true){\\r\\n\\r\\...\n      JUMPI \t\t\tif(trialCheck != true){\\r\\n\\r\\...\n      TIMESTAMP \t\t\tblock.timestamp\n      PUSH 0\t\t\t_freeTrialTime\n      DUP1 \t\t\t_freeTrialTime[usersAddress]\n      DUP5 \t\t\tusersAddress\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialTime[usersAddress]\n      AND \t\t\t_freeTrialTime[usersAddress]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialTime[usersAddress]\n      AND \t\t\t_freeTrialTime[usersAddress]\n      DUP2 \t\t\t_freeTrialTime[usersAddress]\n      MSTORE \t\t\t_freeTrialTime[usersAddress]\n      PUSH 20\t\t\t_freeTrialTime[usersAddress]\n      ADD \t\t\t_freeTrialTime[usersAddress]\n      SWAP1 \t\t\t_freeTrialTime[usersAddress]\n      DUP2 \t\t\t_freeTrialTime[usersAddress]\n      MSTORE \t\t\t_freeTrialTime[usersAddress]\n      PUSH 20\t\t\t_freeTrialTime[usersAddress]\n      ADD \t\t\t_freeTrialTime[usersAddress]\n      PUSH 0\t\t\t_freeTrialTime[usersAddress]\n      KECCAK256 \t\t\t_freeTrialTime[usersAddress]\n      DUP2 \t\t\t_freeTrialTime[usersAddress] =...\n      SWAP1 \t\t\t_freeTrialTime[usersAddress] =...\n      SSTORE \t\t\t_freeTrialTime[usersAddress] =...\n      POP \t\t\t_freeTrialTime[usersAddress] =...\n      PUSH 1\t\t\ttrue\n      DUP1 \t\t\t_freeTrialStatus\n      PUSH 0\t\t\t_freeTrialStatus[usersAddress]\n      DUP5 \t\t\tusersAddress\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialStatus[usersAddress]\n      AND \t\t\t_freeTrialStatus[usersAddress]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialStatus[usersAddress]\n      AND \t\t\t_freeTrialStatus[usersAddress]\n      DUP2 \t\t\t_freeTrialStatus[usersAddress]\n      MSTORE \t\t\t_freeTrialStatus[usersAddress]\n      PUSH 20\t\t\t_freeTrialStatus[usersAddress]\n      ADD \t\t\t_freeTrialStatus[usersAddress]\n      SWAP1 \t\t\t_freeTrialStatus[usersAddress]\n      DUP2 \t\t\t_freeTrialStatus[usersAddress]\n      MSTORE \t\t\t_freeTrialStatus[usersAddress]\n      PUSH 20\t\t\t_freeTrialStatus[usersAddress]\n      ADD \t\t\t_freeTrialStatus[usersAddress]\n      PUSH 0\t\t\t_freeTrialStatus[usersAddress]\n      KECCAK256 \t\t\t_freeTrialStatus[usersAddress]\n      PUSH 0\t\t\t_freeTrialStatus[usersAddress]\n      PUSH 100\t\t\t_freeTrialStatus[usersAddress]...\n      EXP \t\t\t_freeTrialStatus[usersAddress]...\n      DUP2 \t\t\t_freeTrialStatus[usersAddress]...\n      SLOAD \t\t\t_freeTrialStatus[usersAddress]...\n      DUP2 \t\t\t_freeTrialStatus[usersAddress]...\n      PUSH FF\t\t\t_freeTrialStatus[usersAddress]...\n      MUL \t\t\t_freeTrialStatus[usersAddress]...\n      NOT \t\t\t_freeTrialStatus[usersAddress]...\n      AND \t\t\t_freeTrialStatus[usersAddress]...\n      SWAP1 \t\t\t_freeTrialStatus[usersAddress]...\n      DUP4 \t\t\t_freeTrialStatus[usersAddress]...\n      ISZERO \t\t\t_freeTrialStatus[usersAddress]...\n      ISZERO \t\t\t_freeTrialStatus[usersAddress]...\n      MUL \t\t\t_freeTrialStatus[usersAddress]...\n      OR \t\t\t_freeTrialStatus[usersAddress]...\n      SWAP1 \t\t\t_freeTrialStatus[usersAddress]...\n      SSTORE \t\t\t_freeTrialStatus[usersAddress]...\n      POP \t\t\t_freeTrialStatus[usersAddress]...\n      PUSH [tag] 37\t\t\tif(trialCheck != true){\\r\\n\\r\\...\n      JUMP \t\t\tif(trialCheck != true){\\r\\n\\r\\...\n    tag 36\t\t\tif(trialCheck != true){\\r\\n\\r\\...\n      JUMPDEST \t\t\tif(trialCheck != true){\\r\\n\\r\\...\n      TIMESTAMP \t\t\tblock.timestamp\n      PUSH 0\t\t\t_freeTrialTime\n      DUP1 \t\t\t_freeTrialTime[usersAddress]\n      DUP5 \t\t\tusersAddress\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialTime[usersAddress]\n      AND \t\t\t_freeTrialTime[usersAddress]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialTime[usersAddress]\n      AND \t\t\t_freeTrialTime[usersAddress]\n      DUP2 \t\t\t_freeTrialTime[usersAddress]\n      MSTORE \t\t\t_freeTrialTime[usersAddress]\n      PUSH 20\t\t\t_freeTrialTime[usersAddress]\n      ADD \t\t\t_freeTrialTime[usersAddress]\n      SWAP1 \t\t\t_freeTrialTime[usersAddress]\n      DUP2 \t\t\t_freeTrialTime[usersAddress]\n      MSTORE \t\t\t_freeTrialTime[usersAddress]\n      PUSH 20\t\t\t_freeTrialTime[usersAddress]\n      ADD \t\t\t_freeTrialTime[usersAddress]\n      PUSH 0\t\t\t_freeTrialTime[usersAddress]\n      KECCAK256 \t\t\t_freeTrialTime[usersAddress]\n      SLOAD \t\t\t_freeTrialTime[usersAddress]\n      GT \t\t\t_freeTrialTime[usersAddress] <...\n      PUSH [tag] 38\t\t\tif(_freeTrialTime[usersAddress...\n      JUMPI \t\t\tif(_freeTrialTime[usersAddress...\n      PUSH 0\t\t\t0\n      DUP1 \t\t\t_freeTrialTime\n      PUSH 0\t\t\t_freeTrialTime[usersAddress]\n      DUP5 \t\t\tusersAddress\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialTime[usersAddress]\n      AND \t\t\t_freeTrialTime[usersAddress]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialTime[usersAddress]\n      AND \t\t\t_freeTrialTime[usersAddress]\n      DUP2 \t\t\t_freeTrialTime[usersAddress]\n      MSTORE \t\t\t_freeTrialTime[usersAddress]\n      PUSH 20\t\t\t_freeTrialTime[usersAddress]\n      ADD \t\t\t_freeTrialTime[usersAddress]\n      SWAP1 \t\t\t_freeTrialTime[usersAddress]\n      DUP2 \t\t\t_freeTrialTime[usersAddress]\n      MSTORE \t\t\t_freeTrialTime[usersAddress]\n      PUSH 20\t\t\t_freeTrialTime[usersAddress]\n      ADD \t\t\t_freeTrialTime[usersAddress]\n      PUSH 0\t\t\t_freeTrialTime[usersAddress]\n      KECCAK256 \t\t\t_freeTrialTime[usersAddress]\n      DUP2 \t\t\t_freeTrialTime[usersAddress] =...\n      SWAP1 \t\t\t_freeTrialTime[usersAddress] =...\n      SSTORE \t\t\t_freeTrialTime[usersAddress] =...\n      POP \t\t\t_freeTrialTime[usersAddress] =...\n      PUSH 0\t\t\tfalse\n      PUSH 1\t\t\t_freeTrialStatus\n      PUSH 0\t\t\t_freeTrialStatus[usersAddress]\n      DUP5 \t\t\tusersAddress\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialStatus[usersAddress]\n      AND \t\t\t_freeTrialStatus[usersAddress]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_freeTrialStatus[usersAddress]\n      AND \t\t\t_freeTrialStatus[usersAddress]\n      DUP2 \t\t\t_freeTrialStatus[usersAddress]\n      MSTORE \t\t\t_freeTrialStatus[usersAddress]\n      PUSH 20\t\t\t_freeTrialStatus[usersAddress]\n      ADD \t\t\t_freeTrialStatus[usersAddress]\n      SWAP1 \t\t\t_freeTrialStatus[usersAddress]\n      DUP2 \t\t\t_freeTrialStatus[usersAddress]\n      MSTORE \t\t\t_freeTrialStatus[usersAddress]\n      PUSH 20\t\t\t_freeTrialStatus[usersAddress]\n      ADD \t\t\t_freeTrialStatus[usersAddress]\n      PUSH 0\t\t\t_freeTrialStatus[usersAddress]\n      KECCAK256 \t\t\t_freeTrialStatus[usersAddress]\n      PUSH 0\t\t\t_freeTrialStatus[usersAddress]\n      PUSH 100\t\t\t_freeTrialStatus[usersAddress]...\n      EXP \t\t\t_freeTrialStatus[usersAddress]...\n      DUP2 \t\t\t_freeTrialStatus[usersAddress]...\n      SLOAD \t\t\t_freeTrialStatus[usersAddress]...\n      DUP2 \t\t\t_freeTrialStatus[usersAddress]...\n      PUSH FF\t\t\t_freeTrialStatus[usersAddress]...\n      MUL \t\t\t_freeTrialStatus[usersAddress]...\n      NOT \t\t\t_freeTrialStatus[usersAddress]...\n      AND \t\t\t_freeTrialStatus[usersAddress]...\n      SWAP1 \t\t\t_freeTrialStatus[usersAddress]...\n      DUP4 \t\t\t_freeTrialStatus[usersAddress]...\n      ISZERO \t\t\t_freeTrialStatus[usersAddress]...\n      ISZERO \t\t\t_freeTrialStatus[usersAddress]...\n      MUL \t\t\t_freeTrialStatus[usersAddress]...\n      OR \t\t\t_freeTrialStatus[usersAddress]...\n      SWAP1 \t\t\t_freeTrialStatus[usersAddress]...\n      SSTORE \t\t\t_freeTrialStatus[usersAddress]...\n      POP \t\t\t_freeTrialStatus[usersAddress]...\n    tag 38\t\t\tif(_freeTrialTime[usersAddress...\n      JUMPDEST \t\t\tif(_freeTrialTime[usersAddress...\n    tag 37\t\t\tif(trialCheck != true){\\r\\n\\r\\...\n      JUMPDEST \t\t\tif(trialCheck != true){\\r\\n\\r\\...\n      POP \t\t\t{\\r\\n        \\r\\n        bool ...\n      POP \t\t\tfunction freeTrialCheck(addres...\n      JUMP \t\t\tfunction freeTrialCheck(addres...\n    tag 40\t\t\tDoreaUsers {\\r\\n\\r\\n    mappin...\n      JUMPDEST \t\t\tDoreaUsers {\\r\\n\\r\\n    mappin...\n      PUSH 0\t\t\te\n      DUP1 \t\t\t_\n      REVERT \t\t\trivate _free\n    tag 42\t\t\tss usersAddress) public{\\r\\n  ...\n      JUMPDEST \t\t\tss usersAddress) public{\\r\\n  ...\n      PUSH 0\t\t\t       \n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tusersAddress] != 0;\\r\\n\\r\\n   ...\n      DUP3 \t\t\talTim\n      AND \t\t\teTrialTime[usersAddress] != 0;...\n      SWAP1 \t\t\theck = _freeTrialTime[usersAdd...\n      POP \t\t\theck = _freeTrialTime[usersAdd...\n      SWAP2 \t\t\tss usersAddress) public{\\r\\n  ...\n      SWAP1 \t\t\tss usersAddress) public{\\r\\n  ...\n      POP \t\t\tss usersAddress) public{\\r\\n  ...\n      JUMP \t\t\tss usersAddress) public{\\r\\n  ...\n    tag 43\t\t\t\\n\\r\\n            // add 14 da...\n      JUMPDEST \t\t\t\\n\\r\\n            // add 14 da...\n      PUSH 0\t\t\teriod t\n      PUSH [tag] 59\t\t\tyment \\r\\n            _fre\n      DUP3 \t\t\t  _fr\n      PUSH [tag] 42\t\t\tyment \\r\\n            _fre\n      JUMP \t\t\tyment \\r\\n            _fre\n    tag 59\t\t\tyment \\r\\n            _fre\n      JUMPDEST \t\t\tyment \\r\\n            _fre\n      SWAP1 \t\t\t time deployment \\r\\n         ...\n      POP \t\t\t time deployment \\r\\n         ...\n      SWAP2 \t\t\t\\n\\r\\n            // add 14 da...\n      SWAP1 \t\t\t\\n\\r\\n            // add 14 da...\n      POP \t\t\t\\n\\r\\n            // add 14 da...\n      JUMP \t\t\t\\n\\r\\n            // add 14 da...\n    tag 44\t\t\tsersAddress] = block.timestamp...\n      JUMPDEST \t\t\tsersAddress] = block.timestamp...\n      PUSH [tag] 61\t\t\tStatus[usersAddress] = t\n      DUP2 \t\t\ts] = \n      PUSH [tag] 43\t\t\tStatus[usersAddress] = t\n      JUMP \t\t\tStatus[usersAddress] = t\n    tag 61\t\t\tStatus[usersAddress] = t\n      JUMPDEST \t\t\tStatus[usersAddress] = t\n      DUP2 \t\t\teeTri\n      EQ \t\t\t_freeTrialStatus[usersAddress]...\n      PUSH [tag] 62\t\t\t          _freeTrialStatus[use...\n      JUMPI \t\t\t          _freeTrialStatus[use...\n      PUSH 0\t\t\t \n      DUP1 \t\t\t \n      REVERT \t\t\t\\n\\r\\n        }\n    tag 62\t\t\t          _freeTrialStatus[use...\n      JUMPDEST \t\t\t          _freeTrialStatus[use...\n      POP \t\t\tsersAddress] = block.timestamp...\n      JUMP \t\t\tsersAddress] = block.timestamp...\n    tag 45\t\t\t       if(_freeTrialTime[users...\n      JUMPDEST \t\t\t       if(_freeTrialTime[users...\n      PUSH 0\t\t\tk.tim\n      DUP2 \t\t\tTrialT\n      CALLDATALOAD \t\t\t        _freeTrialTi\n      SWAP1 \t\t\t\\n                _freeTrialTi\n      POP \t\t\t\\n                _freeTrialTi\n      PUSH [tag] 64\t\t\tddress] = 0;\\r\\n              ...\n      DUP2 \t\t\t   _f\n      PUSH [tag] 44\t\t\tddress] = 0;\\r\\n              ...\n      JUMP \t\t\tddress] = 0;\\r\\n              ...\n    tag 64\t\t\tddress] = 0;\\r\\n              ...\n      JUMPDEST \t\t\tddress] = 0;\\r\\n              ...\n      SWAP3 \t\t\t       if(_freeTrialTime[users...\n      SWAP2 \t\t\t       if(_freeTrialTime[users...\n      POP \t\t\t       if(_freeTrialTime[users...\n      POP \t\t\t       if(_freeTrialTime[users...\n      JUMP \t\t\t       if(_freeTrialTime[users...\n    tag 8\t\t\ts[usersAddress] = false;\\r\\n\\r...\n      JUMPDEST \t\t\ts[usersAddress] = false;\\r\\n\\r...\n      PUSH 0\t\t\t   }\\r\\n\n      PUSH 20\t\t\tli\n      DUP3 \t\t\tceipent) \n      DUP5 \t\t\tdress _\n      SUB \t\t\te(address _receipent) p\n      SLT \t\t\t time(address _receipent) publ...\n      ISZERO \t\t\tion time(address _receipent) p...\n      PUSH [tag] 66\t\t\tion time(address _receipent) p...\n      JUMPI \t\t\tion time(address _receipent) p...\n      PUSH [tag] 67\t\t\tew returns (uint256){\\r\\n\\r\\n ...\n      PUSH [tag] 40\t\t\tew returns (uint256){\\r\\n\\r\\n ...\n      JUMP \t\t\tew returns (uint256){\\r\\n\\r\\n ...\n    tag 67\t\t\tew returns (uint256){\\r\\n\\r\\n ...\n      JUMPDEST \t\t\tew returns (uint256){\\r\\n\\r\\n ...\n    tag 66\t\t\tion time(address _receipent) p...\n      JUMPDEST \t\t\tion time(address _receipent) p...\n      PUSH 0\t\t\ts\n      PUSH [tag] 68\t\t\tss _receipent) public payable{...\n      DUP5 \t\t\teTrialC\n      DUP3 \t\t\t      \n      DUP6 \t\t\table{\\r\\n\\r\\n\n      ADD \t\t\t payable{\\r\\n\\r\\n        f\n      PUSH [tag] 45\t\t\tss _receipent) public payable{...\n      JUMP \t\t\tss _receipent) public payable{...\n    tag 68\t\t\tss _receipent) public payable{...\n      JUMPDEST \t\t\tss _receipent) public payable{...\n      SWAP2 \t\t\t pay(address _receipent) publi...\n      POP \t\t\t pay(address _receipent) publi...\n      POP \t\t\tnsfer Ether to Loyal Customers...\n      SWAP3 \t\t\ts[usersAddress] = false;\\r\\n\\r...\n      SWAP2 \t\t\ts[usersAddress] = false;\\r\\n\\r...\n      POP \t\t\ts[usersAddress] = false;\\r\\n\\r...\n      POP \t\t\ts[usersAddress] = false;\\r\\n\\r...\n      JUMP \t\t\ts[usersAddress] = false;\\r\\n\\r...\n    tag 46\t\t\t     // check if user is on fr...\n      JUMPDEST \t\t\t     // check if user is on fr...\n      PUSH 0\t\t\tl or no\n      DUP2 \t\t\tys)\\r\\n\n      SWAP1 \t\t\temaining days)\\r\\n\n      POP \t\t\temaining days)\\r\\n\n      SWAP2 \t\t\t     // check if user is on fr...\n      SWAP1 \t\t\t     // check if user is on fr...\n      POP \t\t\t     // check if user is on fr...\n      JUMP \t\t\t     // check if user is on fr...\n    tag 47\t\t\t trialCheck = _freeTrialStatus...\n      JUMPDEST \t\t\t trialCheck = _freeTrialStatus...\n      PUSH [tag] 71\t\t\t           // add functi\n      DUP2 \t\t\tfunct\n      PUSH [tag] 46\t\t\t           // add functi\n      JUMP \t\t\t           // add functi\n    tag 71\t\t\t           // add functi\n      JUMPDEST \t\t\t           // add functi\n      DUP3 \t\t\t){\\r\n      MSTORE \t\t\t!= true){\\r\\n            // ad...\n      POP \t\t\t trialCheck = _freeTrialStatus...\n      POP \t\t\t trialCheck = _freeTrialStatus...\n      JUMP \t\t\t trialCheck = _freeTrialStatus...\n    tag 14\t\t\tf user is paid or not\\r\\n     ...\n      JUMPDEST \t\t\tf user is paid or not\\r\\n     ...\n      PUSH 0\t\t\t   }\n      PUSH 20\t\t\t t\n      DUP3 \t\t\trt(\"no ne\n      ADD \t\t\trevert(\"no need to\n      SWAP1 \t\t\t        revert(\"no need to\n      POP \t\t\t        revert(\"no need to\n      PUSH [tag] 73\t\t\t        }\\r\\n\\r\\n    }\\r\\n\\r\\n...\n      PUSH 0\t\t\t \n      DUP4 \t\t\tt address\n      ADD \t\t\ttract address\\r\\n  \n      DUP5 \t\t\tce of \n      PUSH [tag] 47\t\t\t        }\\r\\n\\r\\n    }\\r\\n\\r\\n...\n      JUMP \t\t\t        }\\r\\n\\r\\n    }\\r\\n\\r\\n...\n    tag 73\t\t\t        }\\r\\n\\r\\n    }\\r\\n\\r\\n...\n      JUMPDEST \t\t\t        }\\r\\n\\r\\n    }\\r\\n\\r\\n...\n      SWAP3 \t\t\tf user is paid or not\\r\\n     ...\n      SWAP2 \t\t\tf user is paid or not\\r\\n     ...\n      POP \t\t\tf user is paid or not\\r\\n     ...\n      POP \t\t\tf user is paid or not\\r\\n     ...\n      JUMP \t\t\tf user is paid or not\\r\\n     ...\n    tag 48\t\t\tBalance() public view returns(...\n      JUMPDEST \t\t\tBalance() public view returns(...\n      PUSH 0\t\t\t}\\r\\n\\r\\n}\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\tBalance() public view returns(...\n      SWAP2 \t\t\tBalance() public view returns(...\n      POP \t\t\tBalance() public view returns(...\n      POP \t\t\tBalance() public view returns(...\n      JUMP \t\t\tBalance() public view returns(...\n    tag 49\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 596F75206D7573742073656E6420736F6D652045746865720000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 50\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 77\t\t\t\n      PUSH 18\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 48\t\t\t\n      JUMP \t\t\t\n    tag 77\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 78\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 49\t\t\t\n      JUMP \t\t\t\n    tag 78\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 29\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 80\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 50\t\t\t\n      JUMP \t\t\t\n    tag 80\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 51\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 6E6F206E65656420746F20706179210000000000000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 52\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 83\t\t\t\n      PUSH F\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 48\t\t\t\n      JUMP \t\t\t\n    tag 83\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 84\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 51\t\t\t\n      JUMP \t\t\t\n    tag 84\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 32\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 86\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 52\t\t\t\n      JUMP \t\t\t\n    tag 86\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    .data\n"
}