{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"users.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity >=0.4.20 <0.9.0;\\r\\n\\r\\ncontract cryptoDoreaUsers {\\r\\n\\r\\n    mapping(address=>uint256) private _freeTrialTime;\\r\\n    mapping(address=>bool) private _freeTrialStatus;\\r\\n    mapping(address=>bool) private _paymentStatus;\\r\\n\\r\\n    constructor()  {\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    *\\r\\n    */\\r\\n    /*\\r\\n    function freeTrialCheck(address usersAddress) public{\\r\\n        \\r\\n        bool trialCheck = _freeTrialTime[usersAddress] != 0;\\r\\n\\r\\n        if(trialCheck != true){\\r\\n\\r\\n            // add 14 days trial period to the first time deployment \\r\\n            _freeTrialTime[usersAddress] = block.timestamp + (14 * 86400);\\r\\n            _freeTrialStatus[usersAddress] = true;\\r\\n\\r\\n        }else{\\r\\n\\r\\n            if(_freeTrialTime[usersAddress] <= block.timestamp){\\r\\n\\r\\n                _freeTrialTime[usersAddress] = 0;\\r\\n                _freeTrialStatus[usersAddress] = false;\\r\\n\\r\\n            }\\r\\n\\r\\n        }\\r\\n    }\\r\\n    */\\r\\n\\r\\n    /**\\r\\n    *\\r\\n    */\\r\\n    function paymentCheck(address usersAddress) public{\\r\\n\\r\\n        bool payCheck = _paymentStatus[usersAddress];\\r\\n\\r\\n        if(payCheck != true){\\r\\n\\r\\n            _paymentStatus[usersAddress] = true;\\r\\n\\r\\n        }else{\\r\\n            revert(\\\"user is already paid!\\\");\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function test(address _receipent) public view returns (bool){\\r\\n\\r\\n        return  _paymentStatus[_receipent];\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n    // Transfer Ether to Loyal Customers\\r\\n    function pay(address _receipent) public payable{\\r\\n\\r\\n        // add function to check if user is paid or not\\r\\n        require(msg.value > 0, \\\"You must send some Ether\\\");\\r\\n        paymentCheck(_receipent);\\r\\n\\r\\n    }\\r\\n\\r\\n    \\r\\n    // get balance of contract address\\r\\n    function getBalance() public view returns(uint256){\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n}\"}},\"settings\":{\"optimizer\":{\"enabled\":false,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}},\"remappings\":[]}}",
	"name": "cryptoDoreaUsers",
	"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receipent\",\"type\":\"address\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usersAddress\",\"type\":\"address\"}],\"name\":\"paymentCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receipent\",\"type\":\"address\"}],\"name\":\"test\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"users.sol\":\"cryptoDoreaUsers\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"users.sol\":{\"keccak256\":\"0xca0cc8265a0f067881942cc7ad417c2405ef37210318d13a9c7a54bfeada0b5e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a80676617d7e67a54ead36d7adbb784a819491584a538d3ccb5eb9688cb6dbfa\",\"dweb:/ipfs/QmSjEdDpNCnkYCT3qxBxMNAfCJESpAWYQM2UmwKf2Qo2hA\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_17": {
				"entryPoint": null,
				"id": 17,
				"parameterSlots": 0,
				"returnSlots": 0
			}
		},
		"generatedSources": [],
		"linkReferences": {},
		"object": "608060405234801561000f575f80fd5b506104888061001d5f395ff3fe60806040526004361061003e575f3560e01c80630c11dedd1461004257806312065fe01461005e5780636062b66b14610088578063bb29998e146100b0575b5f80fd5b61005c600480360381019061005791906102e3565b6100ec565b005b348015610069575f80fd5b5061007261013a565b60405161007f9190610326565b60405180910390f35b348015610093575f80fd5b506100ae60048036038101906100a991906102e3565b610141565b005b3480156100bb575f80fd5b506100d660048036038101906100d191906102e3565b610233565b6040516100e39190610359565b60405180910390f35b5f341161012e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610125906103cc565b60405180910390fd5b61013781610141565b50565b5f47905090565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905060011515811515146101f457600160025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061022f565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022690610434565b60405180910390fd5b5050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102b282610289565b9050919050565b6102c2816102a8565b81146102cc575f80fd5b50565b5f813590506102dd816102b9565b92915050565b5f602082840312156102f8576102f7610285565b5b5f610305848285016102cf565b91505092915050565b5f819050919050565b6103208161030e565b82525050565b5f6020820190506103395f830184610317565b92915050565b5f8115159050919050565b6103538161033f565b82525050565b5f60208201905061036c5f83018461034a565b92915050565b5f82825260208201905092915050565b7f596f75206d7573742073656e6420736f6d6520457468657200000000000000005f82015250565b5f6103b6601883610372565b91506103c182610382565b602082019050919050565b5f6020820190508181035f8301526103e3816103aa565b9050919050565b7f7573657220697320616c726561647920706169642100000000000000000000005f82015250565b5f61041e601583610372565b9150610429826103ea565b602082019050919050565b5f6020820190508181035f83015261044b81610412565b905091905056fea26469706673582212201566472a574073f500a11e338b43b488a27309f01c8cc83b3d201ce900b397fc64736f6c63430008160033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x488 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC11DEDD EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x6062B66B EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xBB29998E EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x72 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x141 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x12E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125 SWAP1 PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x137 DUP2 PUSH2 0x141 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x1F4 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x226 SWAP1 PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B2 DUP3 PUSH2 0x289 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C2 DUP2 PUSH2 0x2A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2DD DUP2 PUSH2 0x2B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F8 JUMPI PUSH2 0x2F7 PUSH2 0x285 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x305 DUP5 DUP3 DUP6 ADD PUSH2 0x2CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x320 DUP2 PUSH2 0x30E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x339 PUSH0 DUP4 ADD DUP5 PUSH2 0x317 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x353 DUP2 PUSH2 0x33F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36C PUSH0 DUP4 ADD DUP5 PUSH2 0x34A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206D7573742073656E6420736F6D652045746865720000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3B6 PUSH1 0x18 DUP4 PUSH2 0x372 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C1 DUP3 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3E3 DUP2 PUSH2 0x3AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7573657220697320616C72656164792070616964210000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x41E PUSH1 0x15 DUP4 PUSH2 0x372 JUMP JUMPDEST SWAP2 POP PUSH2 0x429 DUP3 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x44B DUP2 PUSH2 0x412 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO PUSH7 0x472A574073F500 LOG1 0x1E CALLER DUP12 NUMBER 0xB4 DUP9 LOG2 PUSH20 0x9F01C8CC83B3D201CE900B397FC64736F6C6343 STOP ADDMOD AND STOP CALLER ",
		"sourceMap": "73:1719:0:-:0;;;271:25;;;;;;;;;;73:1719;;;;;;"
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [],
			"name": "getBalance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_receipent",
					"type": "address"
				}
			],
			"name": "pay",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "usersAddress",
					"type": "address"
				}
			],
			"name": "paymentCheck",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_receipent",
					"type": "address"
				}
			],
			"name": "test",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 5,
				"contract": "users.sol:cryptoDoreaUsers",
				"label": "_freeTrialTime",
				"offset": 0,
				"slot": "0",
				"type": "t_mapping(t_address,t_uint256)"
			},
			{
				"astId": 9,
				"contract": "users.sol:cryptoDoreaUsers",
				"label": "_freeTrialStatus",
				"offset": 0,
				"slot": "1",
				"type": "t_mapping(t_address,t_bool)"
			},
			{
				"astId": 13,
				"contract": "users.sol:cryptoDoreaUsers",
				"label": "_paymentStatus",
				"offset": 0,
				"slot": "2",
				"type": "t_mapping(t_address,t_bool)"
			}
		],
		"types": {
			"t_address": {
				"encoding": "inplace",
				"label": "address",
				"numberOfBytes": "20"
			},
			"t_bool": {
				"encoding": "inplace",
				"label": "bool",
				"numberOfBytes": "1"
			},
			"t_mapping(t_address,t_bool)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => bool)",
				"numberOfBytes": "32",
				"value": "t_bool"
			},
			"t_mapping(t_address,t_uint256)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => uint256)",
				"numberOfBytes": "32",
				"value": "t_uint256"
			},
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			}
		}
	},
	"web3Deploy": "var cryptodoreausersContract = new web3.eth.Contract([{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receipent\",\"type\":\"address\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usersAddress\",\"type\":\"address\"}],\"name\":\"paymentCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receipent\",\"type\":\"address\"}],\"name\":\"test\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]);\nvar cryptodoreausers = cryptodoreausersContract.deploy({\n     data: '0x608060405234801561000f575f80fd5b506104888061001d5f395ff3fe60806040526004361061003e575f3560e01c80630c11dedd1461004257806312065fe01461005e5780636062b66b14610088578063bb29998e146100b0575b5f80fd5b61005c600480360381019061005791906102e3565b6100ec565b005b348015610069575f80fd5b5061007261013a565b60405161007f9190610326565b60405180910390f35b348015610093575f80fd5b506100ae60048036038101906100a991906102e3565b610141565b005b3480156100bb575f80fd5b506100d660048036038101906100d191906102e3565b610233565b6040516100e39190610359565b60405180910390f35b5f341161012e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610125906103cc565b60405180910390fd5b61013781610141565b50565b5f47905090565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905060011515811515146101f457600160025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061022f565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022690610434565b60405180910390fd5b5050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102b282610289565b9050919050565b6102c2816102a8565b81146102cc575f80fd5b50565b5f813590506102dd816102b9565b92915050565b5f602082840312156102f8576102f7610285565b5b5f610305848285016102cf565b91505092915050565b5f819050919050565b6103208161030e565b82525050565b5f6020820190506103395f830184610317565b92915050565b5f8115159050919050565b6103538161033f565b82525050565b5f60208201905061036c5f83018461034a565b92915050565b5f82825260208201905092915050565b7f596f75206d7573742073656e6420736f6d6520457468657200000000000000005f82015250565b5f6103b6601883610372565b91506103c182610382565b602082019050919050565b5f6020820190508181035f8301526103e3816103aa565b9050919050565b7f7573657220697320616c726561647920706169642100000000000000000000005f82015250565b5f61041e601583610372565b9150610429826103ea565b602082019050919050565b5f6020820190508181035f83015261044b81610412565b905091905056fea26469706673582212201566472a574073f500a11e338b43b488a27309f01c8cc83b3d201ce900b397fc64736f6c63430008160033', \n     arguments: [\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"12065fe0": "getBalance()",
		"0c11dedd": "pay(address)",
		"6062b66b": "paymentCheck(address)",
		"bb29998e": "test(address)"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "232000",
			"executionCost": "273",
			"totalCost": "232273"
		},
		"External": {
			"getBalance()": "334",
			"pay(address)": "27088",
			"paymentCheck(address)": "27106",
			"test(address)": "2914"
		}
	},
	"devdoc": {
		"kind": "dev",
		"methods": {},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@getBalance_87": {
				"entryPoint": 314,
				"id": 87,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@pay_75": {
				"entryPoint": 236,
				"id": 75,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@paymentCheck_45": {
				"entryPoint": 321,
				"id": 45,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@test_57": {
				"entryPoint": 563,
				"id": 57,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_decode_t_address": {
				"entryPoint": 719,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_address": {
				"entryPoint": 739,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_t_bool_to_t_bool_fromStack": {
				"entryPoint": 842,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 1042,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 938,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 791,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
				"entryPoint": 857,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 1076,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 972,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": 806,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"allocate_unbounded": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
				"entryPoint": 882,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"cleanup_t_address": {
				"entryPoint": 680,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_bool": {
				"entryPoint": 831,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint160": {
				"entryPoint": 649,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 782,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
				"entryPoint": 645,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"store_literal_in_memory_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212": {
				"entryPoint": 1002,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b": {
				"entryPoint": 898,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_address": {
				"entryPoint": 697,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:4161:1",
					"nodeType": "YulBlock",
					"src": "0:4161:1",
					"statements": [
						{
							"body": {
								"nativeSrc": "47:35:1",
								"nodeType": "YulBlock",
								"src": "47:35:1",
								"statements": [
									{
										"nativeSrc": "57:19:1",
										"nodeType": "YulAssignment",
										"src": "57:19:1",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "73:2:1",
													"nodeType": "YulLiteral",
													"src": "73:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "67:5:1",
												"nodeType": "YulIdentifier",
												"src": "67:5:1"
											},
											"nativeSrc": "67:9:1",
											"nodeType": "YulFunctionCall",
											"src": "67:9:1"
										},
										"variableNames": [
											{
												"name": "memPtr",
												"nativeSrc": "57:6:1",
												"nodeType": "YulIdentifier",
												"src": "57:6:1"
											}
										]
									}
								]
							},
							"name": "allocate_unbounded",
							"nativeSrc": "7:75:1",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "memPtr",
									"nativeSrc": "40:6:1",
									"nodeType": "YulTypedName",
									"src": "40:6:1",
									"type": ""
								}
							],
							"src": "7:75:1"
						},
						{
							"body": {
								"nativeSrc": "177:28:1",
								"nodeType": "YulBlock",
								"src": "177:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "194:1:1",
													"nodeType": "YulLiteral",
													"src": "194:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "197:1:1",
													"nodeType": "YulLiteral",
													"src": "197:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "187:6:1",
												"nodeType": "YulIdentifier",
												"src": "187:6:1"
											},
											"nativeSrc": "187:12:1",
											"nodeType": "YulFunctionCall",
											"src": "187:12:1"
										},
										"nativeSrc": "187:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "187:12:1"
									}
								]
							},
							"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
							"nativeSrc": "88:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "88:117:1"
						},
						{
							"body": {
								"nativeSrc": "300:28:1",
								"nodeType": "YulBlock",
								"src": "300:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "317:1:1",
													"nodeType": "YulLiteral",
													"src": "317:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "320:1:1",
													"nodeType": "YulLiteral",
													"src": "320:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "310:6:1",
												"nodeType": "YulIdentifier",
												"src": "310:6:1"
											},
											"nativeSrc": "310:12:1",
											"nodeType": "YulFunctionCall",
											"src": "310:12:1"
										},
										"nativeSrc": "310:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "310:12:1"
									}
								]
							},
							"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
							"nativeSrc": "211:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "211:117:1"
						},
						{
							"body": {
								"nativeSrc": "379:81:1",
								"nodeType": "YulBlock",
								"src": "379:81:1",
								"statements": [
									{
										"nativeSrc": "389:65:1",
										"nodeType": "YulAssignment",
										"src": "389:65:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "404:5:1",
													"nodeType": "YulIdentifier",
													"src": "404:5:1"
												},
												{
													"kind": "number",
													"nativeSrc": "411:42:1",
													"nodeType": "YulLiteral",
													"src": "411:42:1",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "400:3:1",
												"nodeType": "YulIdentifier",
												"src": "400:3:1"
											},
											"nativeSrc": "400:54:1",
											"nodeType": "YulFunctionCall",
											"src": "400:54:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "389:7:1",
												"nodeType": "YulIdentifier",
												"src": "389:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint160",
							"nativeSrc": "334:126:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "361:5:1",
									"nodeType": "YulTypedName",
									"src": "361:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "371:7:1",
									"nodeType": "YulTypedName",
									"src": "371:7:1",
									"type": ""
								}
							],
							"src": "334:126:1"
						},
						{
							"body": {
								"nativeSrc": "511:51:1",
								"nodeType": "YulBlock",
								"src": "511:51:1",
								"statements": [
									{
										"nativeSrc": "521:35:1",
										"nodeType": "YulAssignment",
										"src": "521:35:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "550:5:1",
													"nodeType": "YulIdentifier",
													"src": "550:5:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint160",
												"nativeSrc": "532:17:1",
												"nodeType": "YulIdentifier",
												"src": "532:17:1"
											},
											"nativeSrc": "532:24:1",
											"nodeType": "YulFunctionCall",
											"src": "532:24:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "521:7:1",
												"nodeType": "YulIdentifier",
												"src": "521:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_address",
							"nativeSrc": "466:96:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "493:5:1",
									"nodeType": "YulTypedName",
									"src": "493:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "503:7:1",
									"nodeType": "YulTypedName",
									"src": "503:7:1",
									"type": ""
								}
							],
							"src": "466:96:1"
						},
						{
							"body": {
								"nativeSrc": "611:79:1",
								"nodeType": "YulBlock",
								"src": "611:79:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "668:16:1",
											"nodeType": "YulBlock",
											"src": "668:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "677:1:1",
																"nodeType": "YulLiteral",
																"src": "677:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "680:1:1",
																"nodeType": "YulLiteral",
																"src": "680:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "670:6:1",
															"nodeType": "YulIdentifier",
															"src": "670:6:1"
														},
														"nativeSrc": "670:12:1",
														"nodeType": "YulFunctionCall",
														"src": "670:12:1"
													},
													"nativeSrc": "670:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "670:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "634:5:1",
															"nodeType": "YulIdentifier",
															"src": "634:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "659:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "659:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_address",
																"nativeSrc": "641:17:1",
																"nodeType": "YulIdentifier",
																"src": "641:17:1"
															},
															"nativeSrc": "641:24:1",
															"nodeType": "YulFunctionCall",
															"src": "641:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "631:2:1",
														"nodeType": "YulIdentifier",
														"src": "631:2:1"
													},
													"nativeSrc": "631:35:1",
													"nodeType": "YulFunctionCall",
													"src": "631:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "624:6:1",
												"nodeType": "YulIdentifier",
												"src": "624:6:1"
											},
											"nativeSrc": "624:43:1",
											"nodeType": "YulFunctionCall",
											"src": "624:43:1"
										},
										"nativeSrc": "621:63:1",
										"nodeType": "YulIf",
										"src": "621:63:1"
									}
								]
							},
							"name": "validator_revert_t_address",
							"nativeSrc": "568:122:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "604:5:1",
									"nodeType": "YulTypedName",
									"src": "604:5:1",
									"type": ""
								}
							],
							"src": "568:122:1"
						},
						{
							"body": {
								"nativeSrc": "748:87:1",
								"nodeType": "YulBlock",
								"src": "748:87:1",
								"statements": [
									{
										"nativeSrc": "758:29:1",
										"nodeType": "YulAssignment",
										"src": "758:29:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "780:6:1",
													"nodeType": "YulIdentifier",
													"src": "780:6:1"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "767:12:1",
												"nodeType": "YulIdentifier",
												"src": "767:12:1"
											},
											"nativeSrc": "767:20:1",
											"nodeType": "YulFunctionCall",
											"src": "767:20:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "758:5:1",
												"nodeType": "YulIdentifier",
												"src": "758:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "823:5:1",
													"nodeType": "YulIdentifier",
													"src": "823:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_address",
												"nativeSrc": "796:26:1",
												"nodeType": "YulIdentifier",
												"src": "796:26:1"
											},
											"nativeSrc": "796:33:1",
											"nodeType": "YulFunctionCall",
											"src": "796:33:1"
										},
										"nativeSrc": "796:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "796:33:1"
									}
								]
							},
							"name": "abi_decode_t_address",
							"nativeSrc": "696:139:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "726:6:1",
									"nodeType": "YulTypedName",
									"src": "726:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "734:3:1",
									"nodeType": "YulTypedName",
									"src": "734:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "742:5:1",
									"nodeType": "YulTypedName",
									"src": "742:5:1",
									"type": ""
								}
							],
							"src": "696:139:1"
						},
						{
							"body": {
								"nativeSrc": "907:263:1",
								"nodeType": "YulBlock",
								"src": "907:263:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "953:83:1",
											"nodeType": "YulBlock",
											"src": "953:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "955:77:1",
															"nodeType": "YulIdentifier",
															"src": "955:77:1"
														},
														"nativeSrc": "955:79:1",
														"nodeType": "YulFunctionCall",
														"src": "955:79:1"
													},
													"nativeSrc": "955:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "955:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "928:7:1",
															"nodeType": "YulIdentifier",
															"src": "928:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "937:9:1",
															"nodeType": "YulIdentifier",
															"src": "937:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "924:3:1",
														"nodeType": "YulIdentifier",
														"src": "924:3:1"
													},
													"nativeSrc": "924:23:1",
													"nodeType": "YulFunctionCall",
													"src": "924:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "949:2:1",
													"nodeType": "YulLiteral",
													"src": "949:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "920:3:1",
												"nodeType": "YulIdentifier",
												"src": "920:3:1"
											},
											"nativeSrc": "920:32:1",
											"nodeType": "YulFunctionCall",
											"src": "920:32:1"
										},
										"nativeSrc": "917:119:1",
										"nodeType": "YulIf",
										"src": "917:119:1"
									},
									{
										"nativeSrc": "1046:117:1",
										"nodeType": "YulBlock",
										"src": "1046:117:1",
										"statements": [
											{
												"nativeSrc": "1061:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "1061:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "1075:1:1",
													"nodeType": "YulLiteral",
													"src": "1075:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "1065:6:1",
														"nodeType": "YulTypedName",
														"src": "1065:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "1090:63:1",
												"nodeType": "YulAssignment",
												"src": "1090:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "1125:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1125:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "1136:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1136:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1121:3:1",
																"nodeType": "YulIdentifier",
																"src": "1121:3:1"
															},
															"nativeSrc": "1121:22:1",
															"nodeType": "YulFunctionCall",
															"src": "1121:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "1145:7:1",
															"nodeType": "YulIdentifier",
															"src": "1145:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "1100:20:1",
														"nodeType": "YulIdentifier",
														"src": "1100:20:1"
													},
													"nativeSrc": "1100:53:1",
													"nodeType": "YulFunctionCall",
													"src": "1100:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "1090:6:1",
														"nodeType": "YulIdentifier",
														"src": "1090:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_address",
							"nativeSrc": "841:329:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "877:9:1",
									"nodeType": "YulTypedName",
									"src": "877:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "888:7:1",
									"nodeType": "YulTypedName",
									"src": "888:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "900:6:1",
									"nodeType": "YulTypedName",
									"src": "900:6:1",
									"type": ""
								}
							],
							"src": "841:329:1"
						},
						{
							"body": {
								"nativeSrc": "1221:32:1",
								"nodeType": "YulBlock",
								"src": "1221:32:1",
								"statements": [
									{
										"nativeSrc": "1231:16:1",
										"nodeType": "YulAssignment",
										"src": "1231:16:1",
										"value": {
											"name": "value",
											"nativeSrc": "1242:5:1",
											"nodeType": "YulIdentifier",
											"src": "1242:5:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "1231:7:1",
												"nodeType": "YulIdentifier",
												"src": "1231:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "1176:77:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1203:5:1",
									"nodeType": "YulTypedName",
									"src": "1203:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "1213:7:1",
									"nodeType": "YulTypedName",
									"src": "1213:7:1",
									"type": ""
								}
							],
							"src": "1176:77:1"
						},
						{
							"body": {
								"nativeSrc": "1324:53:1",
								"nodeType": "YulBlock",
								"src": "1324:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1341:3:1",
													"nodeType": "YulIdentifier",
													"src": "1341:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1364:5:1",
															"nodeType": "YulIdentifier",
															"src": "1364:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nativeSrc": "1346:17:1",
														"nodeType": "YulIdentifier",
														"src": "1346:17:1"
													},
													"nativeSrc": "1346:24:1",
													"nodeType": "YulFunctionCall",
													"src": "1346:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1334:6:1",
												"nodeType": "YulIdentifier",
												"src": "1334:6:1"
											},
											"nativeSrc": "1334:37:1",
											"nodeType": "YulFunctionCall",
											"src": "1334:37:1"
										},
										"nativeSrc": "1334:37:1",
										"nodeType": "YulExpressionStatement",
										"src": "1334:37:1"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nativeSrc": "1259:118:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1312:5:1",
									"nodeType": "YulTypedName",
									"src": "1312:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "1319:3:1",
									"nodeType": "YulTypedName",
									"src": "1319:3:1",
									"type": ""
								}
							],
							"src": "1259:118:1"
						},
						{
							"body": {
								"nativeSrc": "1481:124:1",
								"nodeType": "YulBlock",
								"src": "1481:124:1",
								"statements": [
									{
										"nativeSrc": "1491:26:1",
										"nodeType": "YulAssignment",
										"src": "1491:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1503:9:1",
													"nodeType": "YulIdentifier",
													"src": "1503:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1514:2:1",
													"nodeType": "YulLiteral",
													"src": "1514:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1499:3:1",
												"nodeType": "YulIdentifier",
												"src": "1499:3:1"
											},
											"nativeSrc": "1499:18:1",
											"nodeType": "YulFunctionCall",
											"src": "1499:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1491:4:1",
												"nodeType": "YulIdentifier",
												"src": "1491:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "1571:6:1",
													"nodeType": "YulIdentifier",
													"src": "1571:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "1584:9:1",
															"nodeType": "YulIdentifier",
															"src": "1584:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "1595:1:1",
															"nodeType": "YulLiteral",
															"src": "1595:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1580:3:1",
														"nodeType": "YulIdentifier",
														"src": "1580:3:1"
													},
													"nativeSrc": "1580:17:1",
													"nodeType": "YulFunctionCall",
													"src": "1580:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1527:43:1",
												"nodeType": "YulIdentifier",
												"src": "1527:43:1"
											},
											"nativeSrc": "1527:71:1",
											"nodeType": "YulFunctionCall",
											"src": "1527:71:1"
										},
										"nativeSrc": "1527:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "1527:71:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "1383:222:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1453:9:1",
									"nodeType": "YulTypedName",
									"src": "1453:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "1465:6:1",
									"nodeType": "YulTypedName",
									"src": "1465:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "1476:4:1",
									"nodeType": "YulTypedName",
									"src": "1476:4:1",
									"type": ""
								}
							],
							"src": "1383:222:1"
						},
						{
							"body": {
								"nativeSrc": "1653:48:1",
								"nodeType": "YulBlock",
								"src": "1653:48:1",
								"statements": [
									{
										"nativeSrc": "1663:32:1",
										"nodeType": "YulAssignment",
										"src": "1663:32:1",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1688:5:1",
															"nodeType": "YulIdentifier",
															"src": "1688:5:1"
														}
													],
													"functionName": {
														"name": "iszero",
														"nativeSrc": "1681:6:1",
														"nodeType": "YulIdentifier",
														"src": "1681:6:1"
													},
													"nativeSrc": "1681:13:1",
													"nodeType": "YulFunctionCall",
													"src": "1681:13:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "1674:6:1",
												"nodeType": "YulIdentifier",
												"src": "1674:6:1"
											},
											"nativeSrc": "1674:21:1",
											"nodeType": "YulFunctionCall",
											"src": "1674:21:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "1663:7:1",
												"nodeType": "YulIdentifier",
												"src": "1663:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_bool",
							"nativeSrc": "1611:90:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1635:5:1",
									"nodeType": "YulTypedName",
									"src": "1635:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "1645:7:1",
									"nodeType": "YulTypedName",
									"src": "1645:7:1",
									"type": ""
								}
							],
							"src": "1611:90:1"
						},
						{
							"body": {
								"nativeSrc": "1766:50:1",
								"nodeType": "YulBlock",
								"src": "1766:50:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1783:3:1",
													"nodeType": "YulIdentifier",
													"src": "1783:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1803:5:1",
															"nodeType": "YulIdentifier",
															"src": "1803:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_bool",
														"nativeSrc": "1788:14:1",
														"nodeType": "YulIdentifier",
														"src": "1788:14:1"
													},
													"nativeSrc": "1788:21:1",
													"nodeType": "YulFunctionCall",
													"src": "1788:21:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1776:6:1",
												"nodeType": "YulIdentifier",
												"src": "1776:6:1"
											},
											"nativeSrc": "1776:34:1",
											"nodeType": "YulFunctionCall",
											"src": "1776:34:1"
										},
										"nativeSrc": "1776:34:1",
										"nodeType": "YulExpressionStatement",
										"src": "1776:34:1"
									}
								]
							},
							"name": "abi_encode_t_bool_to_t_bool_fromStack",
							"nativeSrc": "1707:109:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1754:5:1",
									"nodeType": "YulTypedName",
									"src": "1754:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "1761:3:1",
									"nodeType": "YulTypedName",
									"src": "1761:3:1",
									"type": ""
								}
							],
							"src": "1707:109:1"
						},
						{
							"body": {
								"nativeSrc": "1914:118:1",
								"nodeType": "YulBlock",
								"src": "1914:118:1",
								"statements": [
									{
										"nativeSrc": "1924:26:1",
										"nodeType": "YulAssignment",
										"src": "1924:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1936:9:1",
													"nodeType": "YulIdentifier",
													"src": "1936:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1947:2:1",
													"nodeType": "YulLiteral",
													"src": "1947:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1932:3:1",
												"nodeType": "YulIdentifier",
												"src": "1932:3:1"
											},
											"nativeSrc": "1932:18:1",
											"nodeType": "YulFunctionCall",
											"src": "1932:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1924:4:1",
												"nodeType": "YulIdentifier",
												"src": "1924:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "1998:6:1",
													"nodeType": "YulIdentifier",
													"src": "1998:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "2011:9:1",
															"nodeType": "YulIdentifier",
															"src": "2011:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "2022:1:1",
															"nodeType": "YulLiteral",
															"src": "2022:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "2007:3:1",
														"nodeType": "YulIdentifier",
														"src": "2007:3:1"
													},
													"nativeSrc": "2007:17:1",
													"nodeType": "YulFunctionCall",
													"src": "2007:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1960:37:1",
												"nodeType": "YulIdentifier",
												"src": "1960:37:1"
											},
											"nativeSrc": "1960:65:1",
											"nodeType": "YulFunctionCall",
											"src": "1960:65:1"
										},
										"nativeSrc": "1960:65:1",
										"nodeType": "YulExpressionStatement",
										"src": "1960:65:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
							"nativeSrc": "1822:210:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1886:9:1",
									"nodeType": "YulTypedName",
									"src": "1886:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "1898:6:1",
									"nodeType": "YulTypedName",
									"src": "1898:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "1909:4:1",
									"nodeType": "YulTypedName",
									"src": "1909:4:1",
									"type": ""
								}
							],
							"src": "1822:210:1"
						},
						{
							"body": {
								"nativeSrc": "2134:73:1",
								"nodeType": "YulBlock",
								"src": "2134:73:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2151:3:1",
													"nodeType": "YulIdentifier",
													"src": "2151:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "2156:6:1",
													"nodeType": "YulIdentifier",
													"src": "2156:6:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2144:6:1",
												"nodeType": "YulIdentifier",
												"src": "2144:6:1"
											},
											"nativeSrc": "2144:19:1",
											"nodeType": "YulFunctionCall",
											"src": "2144:19:1"
										},
										"nativeSrc": "2144:19:1",
										"nodeType": "YulExpressionStatement",
										"src": "2144:19:1"
									},
									{
										"nativeSrc": "2172:29:1",
										"nodeType": "YulAssignment",
										"src": "2172:29:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2191:3:1",
													"nodeType": "YulIdentifier",
													"src": "2191:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2196:4:1",
													"nodeType": "YulLiteral",
													"src": "2196:4:1",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2187:3:1",
												"nodeType": "YulIdentifier",
												"src": "2187:3:1"
											},
											"nativeSrc": "2187:14:1",
											"nodeType": "YulFunctionCall",
											"src": "2187:14:1"
										},
										"variableNames": [
											{
												"name": "updated_pos",
												"nativeSrc": "2172:11:1",
												"nodeType": "YulIdentifier",
												"src": "2172:11:1"
											}
										]
									}
								]
							},
							"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
							"nativeSrc": "2038:169:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "2106:3:1",
									"nodeType": "YulTypedName",
									"src": "2106:3:1",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "2111:6:1",
									"nodeType": "YulTypedName",
									"src": "2111:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "updated_pos",
									"nativeSrc": "2122:11:1",
									"nodeType": "YulTypedName",
									"src": "2122:11:1",
									"type": ""
								}
							],
							"src": "2038:169:1"
						},
						{
							"body": {
								"nativeSrc": "2319:68:1",
								"nodeType": "YulBlock",
								"src": "2319:68:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "2341:6:1",
															"nodeType": "YulIdentifier",
															"src": "2341:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "2349:1:1",
															"nodeType": "YulLiteral",
															"src": "2349:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "2337:3:1",
														"nodeType": "YulIdentifier",
														"src": "2337:3:1"
													},
													"nativeSrc": "2337:14:1",
													"nodeType": "YulFunctionCall",
													"src": "2337:14:1"
												},
												{
													"hexValue": "596f75206d7573742073656e6420736f6d65204574686572",
													"kind": "string",
													"nativeSrc": "2353:26:1",
													"nodeType": "YulLiteral",
													"src": "2353:26:1",
													"type": "",
													"value": "You must send some Ether"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2330:6:1",
												"nodeType": "YulIdentifier",
												"src": "2330:6:1"
											},
											"nativeSrc": "2330:50:1",
											"nodeType": "YulFunctionCall",
											"src": "2330:50:1"
										},
										"nativeSrc": "2330:50:1",
										"nodeType": "YulExpressionStatement",
										"src": "2330:50:1"
									}
								]
							},
							"name": "store_literal_in_memory_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b",
							"nativeSrc": "2213:174:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "2311:6:1",
									"nodeType": "YulTypedName",
									"src": "2311:6:1",
									"type": ""
								}
							],
							"src": "2213:174:1"
						},
						{
							"body": {
								"nativeSrc": "2539:220:1",
								"nodeType": "YulBlock",
								"src": "2539:220:1",
								"statements": [
									{
										"nativeSrc": "2549:74:1",
										"nodeType": "YulAssignment",
										"src": "2549:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2615:3:1",
													"nodeType": "YulIdentifier",
													"src": "2615:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2620:2:1",
													"nodeType": "YulLiteral",
													"src": "2620:2:1",
													"type": "",
													"value": "24"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2556:58:1",
												"nodeType": "YulIdentifier",
												"src": "2556:58:1"
											},
											"nativeSrc": "2556:67:1",
											"nodeType": "YulFunctionCall",
											"src": "2556:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "2549:3:1",
												"nodeType": "YulIdentifier",
												"src": "2549:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2721:3:1",
													"nodeType": "YulIdentifier",
													"src": "2721:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b",
												"nativeSrc": "2632:88:1",
												"nodeType": "YulIdentifier",
												"src": "2632:88:1"
											},
											"nativeSrc": "2632:93:1",
											"nodeType": "YulFunctionCall",
											"src": "2632:93:1"
										},
										"nativeSrc": "2632:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "2632:93:1"
									},
									{
										"nativeSrc": "2734:19:1",
										"nodeType": "YulAssignment",
										"src": "2734:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2745:3:1",
													"nodeType": "YulIdentifier",
													"src": "2745:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2750:2:1",
													"nodeType": "YulLiteral",
													"src": "2750:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2741:3:1",
												"nodeType": "YulIdentifier",
												"src": "2741:3:1"
											},
											"nativeSrc": "2741:12:1",
											"nodeType": "YulFunctionCall",
											"src": "2741:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "2734:3:1",
												"nodeType": "YulIdentifier",
												"src": "2734:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "2393:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "2527:3:1",
									"nodeType": "YulTypedName",
									"src": "2527:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "2535:3:1",
									"nodeType": "YulTypedName",
									"src": "2535:3:1",
									"type": ""
								}
							],
							"src": "2393:366:1"
						},
						{
							"body": {
								"nativeSrc": "2936:248:1",
								"nodeType": "YulBlock",
								"src": "2936:248:1",
								"statements": [
									{
										"nativeSrc": "2946:26:1",
										"nodeType": "YulAssignment",
										"src": "2946:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "2958:9:1",
													"nodeType": "YulIdentifier",
													"src": "2958:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2969:2:1",
													"nodeType": "YulLiteral",
													"src": "2969:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2954:3:1",
												"nodeType": "YulIdentifier",
												"src": "2954:3:1"
											},
											"nativeSrc": "2954:18:1",
											"nodeType": "YulFunctionCall",
											"src": "2954:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "2946:4:1",
												"nodeType": "YulIdentifier",
												"src": "2946:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "2993:9:1",
															"nodeType": "YulIdentifier",
															"src": "2993:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "3004:1:1",
															"nodeType": "YulLiteral",
															"src": "3004:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "2989:3:1",
														"nodeType": "YulIdentifier",
														"src": "2989:3:1"
													},
													"nativeSrc": "2989:17:1",
													"nodeType": "YulFunctionCall",
													"src": "2989:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "3012:4:1",
															"nodeType": "YulIdentifier",
															"src": "3012:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "3018:9:1",
															"nodeType": "YulIdentifier",
															"src": "3018:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "3008:3:1",
														"nodeType": "YulIdentifier",
														"src": "3008:3:1"
													},
													"nativeSrc": "3008:20:1",
													"nodeType": "YulFunctionCall",
													"src": "3008:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2982:6:1",
												"nodeType": "YulIdentifier",
												"src": "2982:6:1"
											},
											"nativeSrc": "2982:47:1",
											"nodeType": "YulFunctionCall",
											"src": "2982:47:1"
										},
										"nativeSrc": "2982:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "2982:47:1"
									},
									{
										"nativeSrc": "3038:139:1",
										"nodeType": "YulAssignment",
										"src": "3038:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "3172:4:1",
													"nodeType": "YulIdentifier",
													"src": "3172:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3046:124:1",
												"nodeType": "YulIdentifier",
												"src": "3046:124:1"
											},
											"nativeSrc": "3046:131:1",
											"nodeType": "YulFunctionCall",
											"src": "3046:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3038:4:1",
												"nodeType": "YulIdentifier",
												"src": "3038:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "2765:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2916:9:1",
									"nodeType": "YulTypedName",
									"src": "2916:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "2931:4:1",
									"nodeType": "YulTypedName",
									"src": "2931:4:1",
									"type": ""
								}
							],
							"src": "2765:419:1"
						},
						{
							"body": {
								"nativeSrc": "3296:65:1",
								"nodeType": "YulBlock",
								"src": "3296:65:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "3318:6:1",
															"nodeType": "YulIdentifier",
															"src": "3318:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "3326:1:1",
															"nodeType": "YulLiteral",
															"src": "3326:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3314:3:1",
														"nodeType": "YulIdentifier",
														"src": "3314:3:1"
													},
													"nativeSrc": "3314:14:1",
													"nodeType": "YulFunctionCall",
													"src": "3314:14:1"
												},
												{
													"hexValue": "7573657220697320616c7265616479207061696421",
													"kind": "string",
													"nativeSrc": "3330:23:1",
													"nodeType": "YulLiteral",
													"src": "3330:23:1",
													"type": "",
													"value": "user is already paid!"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3307:6:1",
												"nodeType": "YulIdentifier",
												"src": "3307:6:1"
											},
											"nativeSrc": "3307:47:1",
											"nodeType": "YulFunctionCall",
											"src": "3307:47:1"
										},
										"nativeSrc": "3307:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "3307:47:1"
									}
								]
							},
							"name": "store_literal_in_memory_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212",
							"nativeSrc": "3190:171:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "3288:6:1",
									"nodeType": "YulTypedName",
									"src": "3288:6:1",
									"type": ""
								}
							],
							"src": "3190:171:1"
						},
						{
							"body": {
								"nativeSrc": "3513:220:1",
								"nodeType": "YulBlock",
								"src": "3513:220:1",
								"statements": [
									{
										"nativeSrc": "3523:74:1",
										"nodeType": "YulAssignment",
										"src": "3523:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3589:3:1",
													"nodeType": "YulIdentifier",
													"src": "3589:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3594:2:1",
													"nodeType": "YulLiteral",
													"src": "3594:2:1",
													"type": "",
													"value": "21"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3530:58:1",
												"nodeType": "YulIdentifier",
												"src": "3530:58:1"
											},
											"nativeSrc": "3530:67:1",
											"nodeType": "YulFunctionCall",
											"src": "3530:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "3523:3:1",
												"nodeType": "YulIdentifier",
												"src": "3523:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3695:3:1",
													"nodeType": "YulIdentifier",
													"src": "3695:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212",
												"nativeSrc": "3606:88:1",
												"nodeType": "YulIdentifier",
												"src": "3606:88:1"
											},
											"nativeSrc": "3606:93:1",
											"nodeType": "YulFunctionCall",
											"src": "3606:93:1"
										},
										"nativeSrc": "3606:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "3606:93:1"
									},
									{
										"nativeSrc": "3708:19:1",
										"nodeType": "YulAssignment",
										"src": "3708:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3719:3:1",
													"nodeType": "YulIdentifier",
													"src": "3719:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3724:2:1",
													"nodeType": "YulLiteral",
													"src": "3724:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3715:3:1",
												"nodeType": "YulIdentifier",
												"src": "3715:3:1"
											},
											"nativeSrc": "3715:12:1",
											"nodeType": "YulFunctionCall",
											"src": "3715:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "3708:3:1",
												"nodeType": "YulIdentifier",
												"src": "3708:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "3367:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "3501:3:1",
									"nodeType": "YulTypedName",
									"src": "3501:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "3509:3:1",
									"nodeType": "YulTypedName",
									"src": "3509:3:1",
									"type": ""
								}
							],
							"src": "3367:366:1"
						},
						{
							"body": {
								"nativeSrc": "3910:248:1",
								"nodeType": "YulBlock",
								"src": "3910:248:1",
								"statements": [
									{
										"nativeSrc": "3920:26:1",
										"nodeType": "YulAssignment",
										"src": "3920:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3932:9:1",
													"nodeType": "YulIdentifier",
													"src": "3932:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3943:2:1",
													"nodeType": "YulLiteral",
													"src": "3943:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3928:3:1",
												"nodeType": "YulIdentifier",
												"src": "3928:3:1"
											},
											"nativeSrc": "3928:18:1",
											"nodeType": "YulFunctionCall",
											"src": "3928:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3920:4:1",
												"nodeType": "YulIdentifier",
												"src": "3920:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3967:9:1",
															"nodeType": "YulIdentifier",
															"src": "3967:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "3978:1:1",
															"nodeType": "YulLiteral",
															"src": "3978:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3963:3:1",
														"nodeType": "YulIdentifier",
														"src": "3963:3:1"
													},
													"nativeSrc": "3963:17:1",
													"nodeType": "YulFunctionCall",
													"src": "3963:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "3986:4:1",
															"nodeType": "YulIdentifier",
															"src": "3986:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "3992:9:1",
															"nodeType": "YulIdentifier",
															"src": "3992:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "3982:3:1",
														"nodeType": "YulIdentifier",
														"src": "3982:3:1"
													},
													"nativeSrc": "3982:20:1",
													"nodeType": "YulFunctionCall",
													"src": "3982:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3956:6:1",
												"nodeType": "YulIdentifier",
												"src": "3956:6:1"
											},
											"nativeSrc": "3956:47:1",
											"nodeType": "YulFunctionCall",
											"src": "3956:47:1"
										},
										"nativeSrc": "3956:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "3956:47:1"
									},
									{
										"nativeSrc": "4012:139:1",
										"nodeType": "YulAssignment",
										"src": "4012:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "4146:4:1",
													"nodeType": "YulIdentifier",
													"src": "4146:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4020:124:1",
												"nodeType": "YulIdentifier",
												"src": "4020:124:1"
											},
											"nativeSrc": "4020:131:1",
											"nodeType": "YulFunctionCall",
											"src": "4020:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "4012:4:1",
												"nodeType": "YulIdentifier",
												"src": "4012:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "3739:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3890:9:1",
									"nodeType": "YulTypedName",
									"src": "3890:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "3905:4:1",
									"nodeType": "YulTypedName",
									"src": "3905:4:1",
									"type": ""
								}
							],
							"src": "3739:419:1"
						}
					]
				},
				"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b(memPtr) {\n\n        mstore(add(memPtr, 0), \"You must send some Ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212(memPtr) {\n\n        mstore(add(memPtr, 0), \"user is already paid!\")\n\n    }\n\n    function abi_encode_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "60806040526004361061003e575f3560e01c80630c11dedd1461004257806312065fe01461005e5780636062b66b14610088578063bb29998e146100b0575b5f80fd5b61005c600480360381019061005791906102e3565b6100ec565b005b348015610069575f80fd5b5061007261013a565b60405161007f9190610326565b60405180910390f35b348015610093575f80fd5b506100ae60048036038101906100a991906102e3565b610141565b005b3480156100bb575f80fd5b506100d660048036038101906100d191906102e3565b610233565b6040516100e39190610359565b60405180910390f35b5f341161012e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610125906103cc565b60405180910390fd5b61013781610141565b50565b5f47905090565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905060011515811515146101f457600160025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061022f565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022690610434565b60405180910390fd5b5050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102b282610289565b9050919050565b6102c2816102a8565b81146102cc575f80fd5b50565b5f813590506102dd816102b9565b92915050565b5f602082840312156102f8576102f7610285565b5b5f610305848285016102cf565b91505092915050565b5f819050919050565b6103208161030e565b82525050565b5f6020820190506103395f830184610317565b92915050565b5f8115159050919050565b6103538161033f565b82525050565b5f60208201905061036c5f83018461034a565b92915050565b5f82825260208201905092915050565b7f596f75206d7573742073656e6420736f6d6520457468657200000000000000005f82015250565b5f6103b6601883610372565b91506103c182610382565b602082019050919050565b5f6020820190508181035f8301526103e3816103aa565b9050919050565b7f7573657220697320616c726561647920706169642100000000000000000000005f82015250565b5f61041e601583610372565b9150610429826103ea565b602082019050919050565b5f6020820190508181035f83015261044b81610412565b905091905056fea26469706673582212201566472a574073f500a11e338b43b488a27309f01c8cc83b3d201ce900b397fc64736f6c63430008160033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC11DEDD EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x6062B66B EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xBB29998E EQ PUSH2 0xB0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x72 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x141 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x12E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125 SWAP1 PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x137 DUP2 PUSH2 0x141 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x1F4 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x226 SWAP1 PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B2 DUP3 PUSH2 0x289 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C2 DUP2 PUSH2 0x2A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2DD DUP2 PUSH2 0x2B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F8 JUMPI PUSH2 0x2F7 PUSH2 0x285 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x305 DUP5 DUP3 DUP6 ADD PUSH2 0x2CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x320 DUP2 PUSH2 0x30E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x339 PUSH0 DUP4 ADD DUP5 PUSH2 0x317 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x353 DUP2 PUSH2 0x33F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36C PUSH0 DUP4 ADD DUP5 PUSH2 0x34A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206D7573742073656E6420736F6D652045746865720000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3B6 PUSH1 0x18 DUP4 PUSH2 0x372 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C1 DUP3 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3E3 DUP2 PUSH2 0x3AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7573657220697320616C72656164792070616964210000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x41E PUSH1 0x15 DUP4 PUSH2 0x372 JUMP JUMPDEST SWAP2 POP PUSH2 0x429 DUP3 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x44B DUP2 PUSH2 0x412 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO PUSH7 0x472A574073F500 LOG1 0x1E CALLER DUP12 NUMBER 0xB4 DUP9 LOG2 PUSH20 0x9F01C8CC83B3D201CE900B397FC64736F6C6343 STOP ADDMOD AND STOP CALLER ",
		"sourceMap": "73:1719:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1424:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1690:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;970:277;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1255:117;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1424:212;1561:1;1549:9;:13;1541:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1602:24;1615:10;1602:12;:24::i;:::-;1424:212;:::o;1690:97::-;1732:7;1758:21;1751:28;;1690:97;:::o;970:277::-;1033:13;1049:14;:28;1064:12;1049:28;;;;;;;;;;;;;;;;;;;;;;;;;1033:44;;1105:4;1093:16;;:8;:16;;;1090:148;;1158:4;1127:14;:28;1142:12;1127:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;1090:148;;;1195:31;;;;;;;;;;:::i;:::-;;;;;;;;1090:148;1020:227;970:277;:::o;1255:117::-;1310:4;1336:14;:26;1351:10;1336:26;;;;;;;;;;;;;;;;;;;;;;;;;1328:34;;1255:117;;;:::o;88::1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:90::-;1645:7;1688:5;1681:13;1674:21;1663:32;;1611:90;;;:::o;1707:109::-;1788:21;1803:5;1788:21;:::i;:::-;1783:3;1776:34;1707:109;;:::o;1822:210::-;1909:4;1947:2;1936:9;1932:18;1924:26;;1960:65;2022:1;2011:9;2007:17;1998:6;1960:65;:::i;:::-;1822:210;;;;:::o;2038:169::-;2122:11;2156:6;2151:3;2144:19;2196:4;2191:3;2187:14;2172:29;;2038:169;;;;:::o;2213:174::-;2353:26;2349:1;2341:6;2337:14;2330:50;2213:174;:::o;2393:366::-;2535:3;2556:67;2620:2;2615:3;2556:67;:::i;:::-;2549:74;;2632:93;2721:3;2632:93;:::i;:::-;2750:2;2745:3;2741:12;2734:19;;2393:366;;;:::o;2765:419::-;2931:4;2969:2;2958:9;2954:18;2946:26;;3018:9;3012:4;3008:20;3004:1;2993:9;2989:17;2982:47;3046:131;3172:4;3046:131;:::i;:::-;3038:139;;2765:419;;;:::o;3190:171::-;3330:23;3326:1;3318:6;3314:14;3307:47;3190:171;:::o;3367:366::-;3509:3;3530:67;3594:2;3589:3;3530:67;:::i;:::-;3523:74;;3606:93;3695:3;3606:93;:::i;:::-;3724:2;3719:3;3715:12;3708:19;;3367:366;;;:::o;3739:419::-;3905:4;3943:2;3932:9;3928:18;3920:26;;3992:9;3986:4;3982:20;3978:1;3967:9;3963:17;3956:47;4020:131;4146:4;4020:131;:::i;:::-;4012:139;;3739:419;;;:::o"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  PUSH 40\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  MSTORE \t\t\tcontract cryptoDoreaUsers {\\r\\...\n  CALLVALUE \t\t\tconstructor()  {\\r\\n\\r\\n    }\n  DUP1 \t\t\tconstructor()  {\\r\\n\\r\\n    }\n  ISZERO \t\t\tconstructor()  {\\r\\n\\r\\n    }\n  PUSH [tag] 1\t\t\tconstructor()  {\\r\\n\\r\\n    }\n  JUMPI \t\t\tconstructor()  {\\r\\n\\r\\n    }\n  PUSH 0\t\t\tconstructor()  {\\r\\n\\r\\n    }\n  DUP1 \t\t\tconstructor()  {\\r\\n\\r\\n    }\n  REVERT \t\t\tconstructor()  {\\r\\n\\r\\n    }\ntag 1\t\t\tconstructor()  {\\r\\n\\r\\n    }\n  JUMPDEST \t\t\tconstructor()  {\\r\\n\\r\\n    }\n  POP \t\t\tconstructor()  {\\r\\n\\r\\n    }\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  PUSH 0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  CODECOPY \t\t\tcontract cryptoDoreaUsers {\\r\\...\n  PUSH 0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  RETURN \t\t\tcontract cryptoDoreaUsers {\\r\\...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 40\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      MSTORE \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 4\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      CALLDATASIZE \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      LT \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH [tag] 1\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPI \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      CALLDATALOAD \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH E0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      SHR \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH C11DEDD\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      EQ \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH [tag] 2\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPI \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 12065FE0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      EQ \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH [tag] 3\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPI \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 6062B66B\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      EQ \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH [tag] 4\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPI \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH BB29998E\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      EQ \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH [tag] 5\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPI \t\t\tcontract cryptoDoreaUsers {\\r\\...\n    tag 1\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPDEST \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      REVERT \t\t\tcontract cryptoDoreaUsers {\\r\\...\n    tag 2\t\t\tfunction pay(address _receipen...\n      JUMPDEST \t\t\tfunction pay(address _receipen...\n      PUSH [tag] 6\t\t\tfunction pay(address _receipen...\n      PUSH 4\t\t\tfunction pay(address _receipen...\n      DUP1 \t\t\tfunction pay(address _receipen...\n      CALLDATASIZE \t\t\tfunction pay(address _receipen...\n      SUB \t\t\tfunction pay(address _receipen...\n      DUP2 \t\t\tfunction pay(address _receipen...\n      ADD \t\t\tfunction pay(address _receipen...\n      SWAP1 \t\t\tfunction pay(address _receipen...\n      PUSH [tag] 7\t\t\tfunction pay(address _receipen...\n      SWAP2 \t\t\tfunction pay(address _receipen...\n      SWAP1 \t\t\tfunction pay(address _receipen...\n      PUSH [tag] 8\t\t\tfunction pay(address _receipen...\n      JUMP \t\t\tfunction pay(address _receipen...\n    tag 7\t\t\tfunction pay(address _receipen...\n      JUMPDEST \t\t\tfunction pay(address _receipen...\n      PUSH [tag] 9\t\t\tfunction pay(address _receipen...\n      JUMP \t\t\tfunction pay(address _receipen...\n    tag 6\t\t\tfunction pay(address _receipen...\n      JUMPDEST \t\t\tfunction pay(address _receipen...\n      STOP \t\t\tfunction pay(address _receipen...\n    tag 3\t\t\tfunction getBalance() public v...\n      JUMPDEST \t\t\tfunction getBalance() public v...\n      CALLVALUE \t\t\tfunction getBalance() public v...\n      DUP1 \t\t\tfunction getBalance() public v...\n      ISZERO \t\t\tfunction getBalance() public v...\n      PUSH [tag] 10\t\t\tfunction getBalance() public v...\n      JUMPI \t\t\tfunction getBalance() public v...\n      PUSH 0\t\t\tfunction getBalance() public v...\n      DUP1 \t\t\tfunction getBalance() public v...\n      REVERT \t\t\tfunction getBalance() public v...\n    tag 10\t\t\tfunction getBalance() public v...\n      JUMPDEST \t\t\tfunction getBalance() public v...\n      POP \t\t\tfunction getBalance() public v...\n      PUSH [tag] 11\t\t\tfunction getBalance() public v...\n      PUSH [tag] 12\t\t\tfunction getBalance() public v...\n      JUMP \t\t\tfunction getBalance() public v...\n    tag 11\t\t\tfunction getBalance() public v...\n      JUMPDEST \t\t\tfunction getBalance() public v...\n      PUSH 40\t\t\tfunction getBalance() public v...\n      MLOAD \t\t\tfunction getBalance() public v...\n      PUSH [tag] 13\t\t\tfunction getBalance() public v...\n      SWAP2 \t\t\tfunction getBalance() public v...\n      SWAP1 \t\t\tfunction getBalance() public v...\n      PUSH [tag] 14\t\t\tfunction getBalance() public v...\n      JUMP \t\t\tfunction getBalance() public v...\n    tag 13\t\t\tfunction getBalance() public v...\n      JUMPDEST \t\t\tfunction getBalance() public v...\n      PUSH 40\t\t\tfunction getBalance() public v...\n      MLOAD \t\t\tfunction getBalance() public v...\n      DUP1 \t\t\tfunction getBalance() public v...\n      SWAP2 \t\t\tfunction getBalance() public v...\n      SUB \t\t\tfunction getBalance() public v...\n      SWAP1 \t\t\tfunction getBalance() public v...\n      RETURN \t\t\tfunction getBalance() public v...\n    tag 4\t\t\tfunction paymentCheck(address ...\n      JUMPDEST \t\t\tfunction paymentCheck(address ...\n      CALLVALUE \t\t\tfunction paymentCheck(address ...\n      DUP1 \t\t\tfunction paymentCheck(address ...\n      ISZERO \t\t\tfunction paymentCheck(address ...\n      PUSH [tag] 15\t\t\tfunction paymentCheck(address ...\n      JUMPI \t\t\tfunction paymentCheck(address ...\n      PUSH 0\t\t\tfunction paymentCheck(address ...\n      DUP1 \t\t\tfunction paymentCheck(address ...\n      REVERT \t\t\tfunction paymentCheck(address ...\n    tag 15\t\t\tfunction paymentCheck(address ...\n      JUMPDEST \t\t\tfunction paymentCheck(address ...\n      POP \t\t\tfunction paymentCheck(address ...\n      PUSH [tag] 16\t\t\tfunction paymentCheck(address ...\n      PUSH 4\t\t\tfunction paymentCheck(address ...\n      DUP1 \t\t\tfunction paymentCheck(address ...\n      CALLDATASIZE \t\t\tfunction paymentCheck(address ...\n      SUB \t\t\tfunction paymentCheck(address ...\n      DUP2 \t\t\tfunction paymentCheck(address ...\n      ADD \t\t\tfunction paymentCheck(address ...\n      SWAP1 \t\t\tfunction paymentCheck(address ...\n      PUSH [tag] 17\t\t\tfunction paymentCheck(address ...\n      SWAP2 \t\t\tfunction paymentCheck(address ...\n      SWAP1 \t\t\tfunction paymentCheck(address ...\n      PUSH [tag] 8\t\t\tfunction paymentCheck(address ...\n      JUMP \t\t\tfunction paymentCheck(address ...\n    tag 17\t\t\tfunction paymentCheck(address ...\n      JUMPDEST \t\t\tfunction paymentCheck(address ...\n      PUSH [tag] 18\t\t\tfunction paymentCheck(address ...\n      JUMP \t\t\tfunction paymentCheck(address ...\n    tag 16\t\t\tfunction paymentCheck(address ...\n      JUMPDEST \t\t\tfunction paymentCheck(address ...\n      STOP \t\t\tfunction paymentCheck(address ...\n    tag 5\t\t\tfunction test(address _receipe...\n      JUMPDEST \t\t\tfunction test(address _receipe...\n      CALLVALUE \t\t\tfunction test(address _receipe...\n      DUP1 \t\t\tfunction test(address _receipe...\n      ISZERO \t\t\tfunction test(address _receipe...\n      PUSH [tag] 19\t\t\tfunction test(address _receipe...\n      JUMPI \t\t\tfunction test(address _receipe...\n      PUSH 0\t\t\tfunction test(address _receipe...\n      DUP1 \t\t\tfunction test(address _receipe...\n      REVERT \t\t\tfunction test(address _receipe...\n    tag 19\t\t\tfunction test(address _receipe...\n      JUMPDEST \t\t\tfunction test(address _receipe...\n      POP \t\t\tfunction test(address _receipe...\n      PUSH [tag] 20\t\t\tfunction test(address _receipe...\n      PUSH 4\t\t\tfunction test(address _receipe...\n      DUP1 \t\t\tfunction test(address _receipe...\n      CALLDATASIZE \t\t\tfunction test(address _receipe...\n      SUB \t\t\tfunction test(address _receipe...\n      DUP2 \t\t\tfunction test(address _receipe...\n      ADD \t\t\tfunction test(address _receipe...\n      SWAP1 \t\t\tfunction test(address _receipe...\n      PUSH [tag] 21\t\t\tfunction test(address _receipe...\n      SWAP2 \t\t\tfunction test(address _receipe...\n      SWAP1 \t\t\tfunction test(address _receipe...\n      PUSH [tag] 8\t\t\tfunction test(address _receipe...\n      JUMP \t\t\tfunction test(address _receipe...\n    tag 21\t\t\tfunction test(address _receipe...\n      JUMPDEST \t\t\tfunction test(address _receipe...\n      PUSH [tag] 22\t\t\tfunction test(address _receipe...\n      JUMP \t\t\tfunction test(address _receipe...\n    tag 20\t\t\tfunction test(address _receipe...\n      JUMPDEST \t\t\tfunction test(address _receipe...\n      PUSH 40\t\t\tfunction test(address _receipe...\n      MLOAD \t\t\tfunction test(address _receipe...\n      PUSH [tag] 23\t\t\tfunction test(address _receipe...\n      SWAP2 \t\t\tfunction test(address _receipe...\n      SWAP1 \t\t\tfunction test(address _receipe...\n      PUSH [tag] 24\t\t\tfunction test(address _receipe...\n      JUMP \t\t\tfunction test(address _receipe...\n    tag 23\t\t\tfunction test(address _receipe...\n      JUMPDEST \t\t\tfunction test(address _receipe...\n      PUSH 40\t\t\tfunction test(address _receipe...\n      MLOAD \t\t\tfunction test(address _receipe...\n      DUP1 \t\t\tfunction test(address _receipe...\n      SWAP2 \t\t\tfunction test(address _receipe...\n      SUB \t\t\tfunction test(address _receipe...\n      SWAP1 \t\t\tfunction test(address _receipe...\n      RETURN \t\t\tfunction test(address _receipe...\n    tag 9\t\t\tfunction pay(address _receipen...\n      JUMPDEST \t\t\tfunction pay(address _receipen...\n      PUSH 0\t\t\t0\n      CALLVALUE \t\t\tmsg.value\n      GT \t\t\tmsg.value > 0\n      PUSH [tag] 26\t\t\trequire(msg.value > 0, \"You mu...\n      JUMPI \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH 40\t\t\trequire(msg.value > 0, \"You mu...\n      MLOAD \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(msg.value > 0, \"You mu...\n      DUP2 \t\t\trequire(msg.value > 0, \"You mu...\n      MSTORE \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH 4\t\t\trequire(msg.value > 0, \"You mu...\n      ADD \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH [tag] 27\t\t\trequire(msg.value > 0, \"You mu...\n      SWAP1 \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH [tag] 28\t\t\trequire(msg.value > 0, \"You mu...\n      JUMP \t\t\trequire(msg.value > 0, \"You mu...\n    tag 27\t\t\trequire(msg.value > 0, \"You mu...\n      JUMPDEST \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH 40\t\t\trequire(msg.value > 0, \"You mu...\n      MLOAD \t\t\trequire(msg.value > 0, \"You mu...\n      DUP1 \t\t\trequire(msg.value > 0, \"You mu...\n      SWAP2 \t\t\trequire(msg.value > 0, \"You mu...\n      SUB \t\t\trequire(msg.value > 0, \"You mu...\n      SWAP1 \t\t\trequire(msg.value > 0, \"You mu...\n      REVERT \t\t\trequire(msg.value > 0, \"You mu...\n    tag 26\t\t\trequire(msg.value > 0, \"You mu...\n      JUMPDEST \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH [tag] 29\t\t\tpaymentCheck(_receipent)\n      DUP2 \t\t\t_receipent\n      PUSH [tag] 18\t\t\tpaymentCheck\n      JUMP \t\t\tpaymentCheck(_receipent)\n    tag 29\t\t\tpaymentCheck(_receipent)\n      JUMPDEST \t\t\tpaymentCheck(_receipent)\n      POP \t\t\tfunction pay(address _receipen...\n      JUMP \t\t\tfunction pay(address _receipen...\n    tag 12\t\t\tfunction getBalance() public v...\n      JUMPDEST \t\t\tfunction getBalance() public v...\n      PUSH 0\t\t\tuint256\n      SELFBALANCE \t\t\taddress(this).balance\n      SWAP1 \t\t\treturn address(this).balance\n      POP \t\t\treturn address(this).balance\n      SWAP1 \t\t\tfunction getBalance() public v...\n      JUMP \t\t\tfunction getBalance() public v...\n    tag 18\t\t\tfunction paymentCheck(address ...\n      JUMPDEST \t\t\tfunction paymentCheck(address ...\n      PUSH 0\t\t\tbool payCheck\n      PUSH 2\t\t\t_paymentStatus\n      PUSH 0\t\t\t_paymentStatus[usersAddress]\n      DUP4 \t\t\tusersAddress\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_paymentStatus[usersAddress]\n      AND \t\t\t_paymentStatus[usersAddress]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_paymentStatus[usersAddress]\n      AND \t\t\t_paymentStatus[usersAddress]\n      DUP2 \t\t\t_paymentStatus[usersAddress]\n      MSTORE \t\t\t_paymentStatus[usersAddress]\n      PUSH 20\t\t\t_paymentStatus[usersAddress]\n      ADD \t\t\t_paymentStatus[usersAddress]\n      SWAP1 \t\t\t_paymentStatus[usersAddress]\n      DUP2 \t\t\t_paymentStatus[usersAddress]\n      MSTORE \t\t\t_paymentStatus[usersAddress]\n      PUSH 20\t\t\t_paymentStatus[usersAddress]\n      ADD \t\t\t_paymentStatus[usersAddress]\n      PUSH 0\t\t\t_paymentStatus[usersAddress]\n      KECCAK256 \t\t\t_paymentStatus[usersAddress]\n      PUSH 0\t\t\t_paymentStatus[usersAddress]\n      SWAP1 \t\t\t_paymentStatus[usersAddress]\n      SLOAD \t\t\t_paymentStatus[usersAddress]\n      SWAP1 \t\t\t_paymentStatus[usersAddress]\n      PUSH 100\t\t\t_paymentStatus[usersAddress]\n      EXP \t\t\t_paymentStatus[usersAddress]\n      SWAP1 \t\t\t_paymentStatus[usersAddress]\n      DIV \t\t\t_paymentStatus[usersAddress]\n      PUSH FF\t\t\t_paymentStatus[usersAddress]\n      AND \t\t\t_paymentStatus[usersAddress]\n      SWAP1 \t\t\tbool payCheck = _paymentStatus...\n      POP \t\t\tbool payCheck = _paymentStatus...\n      PUSH 1\t\t\ttrue\n      ISZERO \t\t\tpayCheck != true\n      ISZERO \t\t\tpayCheck != true\n      DUP2 \t\t\tpayCheck\n      ISZERO \t\t\tpayCheck != true\n      ISZERO \t\t\tpayCheck != true\n      EQ \t\t\tpayCheck != true\n      PUSH [tag] 32\t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      JUMPI \t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      PUSH 1\t\t\ttrue\n      PUSH 2\t\t\t_paymentStatus\n      PUSH 0\t\t\t_paymentStatus[usersAddress]\n      DUP5 \t\t\tusersAddress\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_paymentStatus[usersAddress]\n      AND \t\t\t_paymentStatus[usersAddress]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_paymentStatus[usersAddress]\n      AND \t\t\t_paymentStatus[usersAddress]\n      DUP2 \t\t\t_paymentStatus[usersAddress]\n      MSTORE \t\t\t_paymentStatus[usersAddress]\n      PUSH 20\t\t\t_paymentStatus[usersAddress]\n      ADD \t\t\t_paymentStatus[usersAddress]\n      SWAP1 \t\t\t_paymentStatus[usersAddress]\n      DUP2 \t\t\t_paymentStatus[usersAddress]\n      MSTORE \t\t\t_paymentStatus[usersAddress]\n      PUSH 20\t\t\t_paymentStatus[usersAddress]\n      ADD \t\t\t_paymentStatus[usersAddress]\n      PUSH 0\t\t\t_paymentStatus[usersAddress]\n      KECCAK256 \t\t\t_paymentStatus[usersAddress]\n      PUSH 0\t\t\t_paymentStatus[usersAddress]\n      PUSH 100\t\t\t_paymentStatus[usersAddress] =...\n      EXP \t\t\t_paymentStatus[usersAddress] =...\n      DUP2 \t\t\t_paymentStatus[usersAddress] =...\n      SLOAD \t\t\t_paymentStatus[usersAddress] =...\n      DUP2 \t\t\t_paymentStatus[usersAddress] =...\n      PUSH FF\t\t\t_paymentStatus[usersAddress] =...\n      MUL \t\t\t_paymentStatus[usersAddress] =...\n      NOT \t\t\t_paymentStatus[usersAddress] =...\n      AND \t\t\t_paymentStatus[usersAddress] =...\n      SWAP1 \t\t\t_paymentStatus[usersAddress] =...\n      DUP4 \t\t\t_paymentStatus[usersAddress] =...\n      ISZERO \t\t\t_paymentStatus[usersAddress] =...\n      ISZERO \t\t\t_paymentStatus[usersAddress] =...\n      MUL \t\t\t_paymentStatus[usersAddress] =...\n      OR \t\t\t_paymentStatus[usersAddress] =...\n      SWAP1 \t\t\t_paymentStatus[usersAddress] =...\n      SSTORE \t\t\t_paymentStatus[usersAddress] =...\n      POP \t\t\t_paymentStatus[usersAddress] =...\n      PUSH [tag] 33\t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      JUMP \t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n    tag 32\t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      JUMPDEST \t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      PUSH 40\t\t\trevert(\"user is already paid!\"...\n      MLOAD \t\t\trevert(\"user is already paid!\"...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trevert(\"user is already paid!\"...\n      DUP2 \t\t\trevert(\"user is already paid!\"...\n      MSTORE \t\t\trevert(\"user is already paid!\"...\n      PUSH 4\t\t\trevert(\"user is already paid!\"...\n      ADD \t\t\trevert(\"user is already paid!\"...\n      PUSH [tag] 34\t\t\trevert(\"user is already paid!\"...\n      SWAP1 \t\t\trevert(\"user is already paid!\"...\n      PUSH [tag] 35\t\t\trevert(\"user is already paid!\"...\n      JUMP \t\t\trevert(\"user is already paid!\"...\n    tag 34\t\t\trevert(\"user is already paid!\"...\n      JUMPDEST \t\t\trevert(\"user is already paid!\"...\n      PUSH 40\t\t\trevert(\"user is already paid!\"...\n      MLOAD \t\t\trevert(\"user is already paid!\"...\n      DUP1 \t\t\trevert(\"user is already paid!\"...\n      SWAP2 \t\t\trevert(\"user is already paid!\"...\n      SUB \t\t\trevert(\"user is already paid!\"...\n      SWAP1 \t\t\trevert(\"user is already paid!\"...\n      REVERT \t\t\trevert(\"user is already paid!\"...\n    tag 33\t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      JUMPDEST \t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      POP \t\t\t{\\r\\n\\r\\n        bool payCheck...\n      POP \t\t\tfunction paymentCheck(address ...\n      JUMP \t\t\tfunction paymentCheck(address ...\n    tag 22\t\t\tfunction test(address _receipe...\n      JUMPDEST \t\t\tfunction test(address _receipe...\n      PUSH 0\t\t\tbool\n      PUSH 2\t\t\t_paymentStatus\n      PUSH 0\t\t\t_paymentStatus[_receipent]\n      DUP4 \t\t\t_receipent\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_paymentStatus[_receipent]\n      AND \t\t\t_paymentStatus[_receipent]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_paymentStatus[_receipent]\n      AND \t\t\t_paymentStatus[_receipent]\n      DUP2 \t\t\t_paymentStatus[_receipent]\n      MSTORE \t\t\t_paymentStatus[_receipent]\n      PUSH 20\t\t\t_paymentStatus[_receipent]\n      ADD \t\t\t_paymentStatus[_receipent]\n      SWAP1 \t\t\t_paymentStatus[_receipent]\n      DUP2 \t\t\t_paymentStatus[_receipent]\n      MSTORE \t\t\t_paymentStatus[_receipent]\n      PUSH 20\t\t\t_paymentStatus[_receipent]\n      ADD \t\t\t_paymentStatus[_receipent]\n      PUSH 0\t\t\t_paymentStatus[_receipent]\n      KECCAK256 \t\t\t_paymentStatus[_receipent]\n      PUSH 0\t\t\t_paymentStatus[_receipent]\n      SWAP1 \t\t\t_paymentStatus[_receipent]\n      SLOAD \t\t\t_paymentStatus[_receipent]\n      SWAP1 \t\t\t_paymentStatus[_receipent]\n      PUSH 100\t\t\t_paymentStatus[_receipent]\n      EXP \t\t\t_paymentStatus[_receipent]\n      SWAP1 \t\t\t_paymentStatus[_receipent]\n      DIV \t\t\t_paymentStatus[_receipent]\n      PUSH FF\t\t\t_paymentStatus[_receipent]\n      AND \t\t\t_paymentStatus[_receipent]\n      SWAP1 \t\t\treturn  _paymentStatus[_receip...\n      POP \t\t\treturn  _paymentStatus[_receip...\n      SWAP2 \t\t\tfunction test(address _receipe...\n      SWAP1 \t\t\tfunction test(address _receipe...\n      POP \t\t\tfunction test(address _receipe...\n      JUMP \t\t\tfunction test(address _receipe...\n    tag 38\t\t\tDoreaUsers {\\r\\n\\r\\n    mappin...\n      JUMPDEST \t\t\tDoreaUsers {\\r\\n\\r\\n    mappin...\n      PUSH 0\t\t\te\n      DUP1 \t\t\t_\n      REVERT \t\t\trivate _free\n    tag 40\t\t\t  function freeTrialCheck(addr...\n      JUMPDEST \t\t\t  function freeTrialCheck(addr...\n      PUSH 0\t\t\trsAddre\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tol trialCheck = _freeTrialTime...\n      DUP3 \t\t\t     \n      AND \t\t\t\\n        bool trialCheck = _f...\n      SWAP1 \t\t\t\\r\\n        \\r\\n        bool t...\n      POP \t\t\t\\r\\n        \\r\\n        bool t...\n      SWAP2 \t\t\t  function freeTrialCheck(addr...\n      SWAP1 \t\t\t  function freeTrialCheck(addr...\n      POP \t\t\t  function freeTrialCheck(addr...\n      JUMP \t\t\t  function freeTrialCheck(addr...\n    tag 41\t\t\t       if(trialCheck != true){...\n      JUMPDEST \t\t\t       if(trialCheck != true){...\n      PUSH 0\t\t\t       \n      PUSH [tag] 59\t\t\t period to the first tim\n      DUP3 \t\t\tst ti\n      PUSH [tag] 40\t\t\t period to the first tim\n      JUMP \t\t\t period to the first tim\n    tag 59\t\t\t period to the first tim\n      JUMPDEST \t\t\t period to the first tim\n      SWAP1 \t\t\t days trial period to the firs...\n      POP \t\t\t days trial period to the firs...\n      SWAP2 \t\t\t       if(trialCheck != true){...\n      SWAP1 \t\t\t       if(trialCheck != true){...\n      POP \t\t\t       if(trialCheck != true){...\n      JUMP \t\t\t       if(trialCheck != true){...\n    tag 42\t\t\t \\r\\n            _freeTrialTim...\n      JUMPDEST \t\t\t \\r\\n            _freeTrialTim...\n      PUSH [tag] 61\t\t\t00);\\r\\n            _freeT\n      DUP2 \t\t\t_free\n      PUSH [tag] 41\t\t\t00);\\r\\n            _freeT\n      JUMP \t\t\t00);\\r\\n            _freeT\n    tag 61\t\t\t00);\\r\\n            _freeT\n      JUMPDEST \t\t\t00);\\r\\n            _freeT\n      DUP2 \t\t\t4 * 8\n      EQ \t\t\t (14 * 86400);\\r\\n            ...\n      PUSH [tag] 62\t\t\timestamp + (14 * 86400);\\r\\n  ...\n      JUMPI \t\t\timestamp + (14 * 86400);\\r\\n  ...\n      PUSH 0\t\t\ts\n      DUP1 \t\t\ts\n      REVERT \t\t\ttatus[usersA\n    tag 62\t\t\timestamp + (14 * 86400);\\r\\n  ...\n      JUMPDEST \t\t\timestamp + (14 * 86400);\\r\\n  ...\n      POP \t\t\t \\r\\n            _freeTrialTim...\n      JUMP \t\t\t \\r\\n            _freeTrialTim...\n    tag 43\t\t\t;\\r\\n\\r\\n        }else{\\r\\n\\r\\...\n      JUMPDEST \t\t\t;\\r\\n\\r\\n        }else{\\r\\n\\r\\...\n      PUSH 0\t\t\talTim\n      DUP2 \t\t\tp){\\r\\n\\r\n      CALLDATALOAD \t\t\tlock.timestamp){\\r\\n\\r\\n\n      SWAP1 \t\t\tess] <= block.timestamp){\\r\\n\\...\n      POP \t\t\tess] <= block.timestamp){\\r\\n\\...\n      PUSH [tag] 64\t\t\t       _freeTrialTime[usersAdd...\n      DUP2 \t\t\tAddre\n      PUSH [tag] 42\t\t\t       _freeTrialTime[usersAdd...\n      JUMP \t\t\t       _freeTrialTime[usersAdd...\n    tag 64\t\t\t       _freeTrialTime[usersAdd...\n      JUMPDEST \t\t\t       _freeTrialTime[usersAdd...\n      SWAP3 \t\t\t;\\r\\n\\r\\n        }else{\\r\\n\\r\\...\n      SWAP2 \t\t\t;\\r\\n\\r\\n        }else{\\r\\n\\r\\...\n      POP \t\t\t;\\r\\n\\r\\n        }else{\\r\\n\\r\\...\n      POP \t\t\t;\\r\\n\\r\\n        }else{\\r\\n\\r\\...\n      JUMP \t\t\t;\\r\\n\\r\\n        }else{\\r\\n\\r\\...\n    tag 8\t\t\t             _freeTrialStatus[...\n      JUMPDEST \t\t\t             _freeTrialStatus[...\n      PUSH 0\t\t\t      \n      PUSH 20\t\t\t\\r\\n\n      DUP3 \t\t\t/\\r\\n\\r\\n    \n      DUP5 \t\t\t }\\r\\n   \n      SUB \t\t\t\\n    }\\r\\n    */\\r\\n\\r\\n    /\n      SLT \t\t\t  }\\r\\n    }\\r\\n    */\\r\\n\\r\\n...\n      ISZERO \t\t\t     }\\r\\n    }\\r\\n    */\\r\\n\\...\n      PUSH [tag] 66\t\t\t     }\\r\\n    }\\r\\n    */\\r\\n\\...\n      JUMPI \t\t\t     }\\r\\n    }\\r\\n    */\\r\\n\\...\n      PUSH [tag] 67\t\t\t*\\r\\n    */\\r\\n    function pa...\n      PUSH [tag] 38\t\t\t*\\r\\n    */\\r\\n    function pa...\n      JUMP \t\t\t*\\r\\n    */\\r\\n    function pa...\n    tag 67\t\t\t*\\r\\n    */\\r\\n    function pa...\n      JUMPDEST \t\t\t*\\r\\n    */\\r\\n    function pa...\n    tag 66\t\t\t     }\\r\\n    }\\r\\n    */\\r\\n\\...\n      JUMPDEST \t\t\t     }\\r\\n    }\\r\\n    */\\r\\n\\...\n      PUSH 0\t\t\ts\n      PUSH [tag] 68\t\t\tk != true){\\r\\n\\r\\n           ...\n      DUP5 \t\t\trsAddre\n      DUP3 \t\t\ttatus[\n      DUP6 \t\t\t  _paymen\n      ADD \t\t\t      _paymentStatus[u\n      PUSH [tag] 43\t\t\tk != true){\\r\\n\\r\\n           ...\n      JUMP \t\t\tk != true){\\r\\n\\r\\n           ...\n    tag 68\t\t\tk != true){\\r\\n\\r\\n           ...\n      JUMPDEST \t\t\tk != true){\\r\\n\\r\\n           ...\n      SWAP2 \t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      POP \t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      POP \t\t\t = _paymentStatus[usersAddress...\n      SWAP3 \t\t\t             _freeTrialStatus[...\n      SWAP2 \t\t\t             _freeTrialStatus[...\n      POP \t\t\t             _freeTrialStatus[...\n      POP \t\t\t             _freeTrialStatus[...\n      JUMP \t\t\t             _freeTrialStatus[...\n    tag 44\t\t\telse{\\r\\n            revert(\"u...\n      JUMPDEST \t\t\telse{\\r\\n            revert(\"u...\n      PUSH 0\t\t\tready p\n      DUP2 \t\t\t    }\n      SWAP1 \t\t\t      }\\r\\n\\r\\n    }\n      POP \t\t\t      }\\r\\n\\r\\n    }\n      SWAP2 \t\t\telse{\\r\\n            revert(\"u...\n      SWAP1 \t\t\telse{\\r\\n            revert(\"u...\n      POP \t\t\telse{\\r\\n            revert(\"u...\n      JUMP \t\t\telse{\\r\\n            revert(\"u...\n    tag 45\t\t\ttion test(address _receipent) ...\n      JUMPDEST \t\t\ttion test(address _receipent) ...\n      PUSH [tag] 71\t\t\tatus[_receipent];\\r\\n\\r\\n   \n      DUP2 \t\t\t\\n\\r\\n  \n      PUSH [tag] 44\t\t\tatus[_receipent];\\r\\n\\r\\n   \n      JUMP \t\t\tatus[_receipent];\\r\\n\\r\\n   \n    tag 71\t\t\tatus[_receipent];\\r\\n\\r\\n   \n      JUMPDEST \t\t\tatus[_receipent];\\r\\n\\r\\n   \n      DUP3 \t\t\tent\n      MSTORE \t\t\t  _paymentStatus[_receipent];\\...\n      POP \t\t\ttion test(address _receipent) ...\n      POP \t\t\ttion test(address _receipent) ...\n      JUMP \t\t\ttion test(address _receipent) ...\n    tag 14\t\t\t/ Transfer Ether to Loyal Cust...\n      JUMPDEST \t\t\t/ Transfer Ether to Loyal Cust...\n      PUSH 0\t\t\t    \n      PUSH 20\t\t\ter\n      DUP3 \t\t\tcheck if \n      ADD \t\t\t to check if user \n      SWAP1 \t\t\tfunction to check if user \n      POP \t\t\tfunction to check if user \n      PUSH [tag] 73\t\t\t not\\r\\n        require(msg.va...\n      PUSH 0\t\t\t \n      DUP4 \t\t\tEther\");\\r\n      ADD \t\t\tome Ether\");\\r\\n   \n      DUP5 \t\t\tst sen\n      PUSH [tag] 45\t\t\t not\\r\\n        require(msg.va...\n      JUMP \t\t\t not\\r\\n        require(msg.va...\n    tag 73\t\t\t not\\r\\n        require(msg.va...\n      JUMPDEST \t\t\t not\\r\\n        require(msg.va...\n      SWAP3 \t\t\t/ Transfer Ether to Loyal Cust...\n      SWAP2 \t\t\t/ Transfer Ether to Loyal Cust...\n      POP \t\t\t/ Transfer Ether to Loyal Cust...\n      POP \t\t\t/ Transfer Ether to Loyal Cust...\n      JUMP \t\t\t/ Transfer Ether to Loyal Cust...\n    tag 46\t\t\teck(_receipent);\\r\\n\\r\\n    }\\...\n      JUMPDEST \t\t\teck(_receipent);\\r\\n\\r\\n    }\\...\n      PUSH 0\t\t\t\\n    //\n      DUP2 \t\t\t  fun\n      ISZERO \t\t\tess\\r\\n    func\n      ISZERO \t\t\tct address\\r\\n    funct\n      SWAP1 \t\t\te of contract address\\r\\n    f...\n      POP \t\t\te of contract address\\r\\n    f...\n      SWAP2 \t\t\teck(_receipent);\\r\\n\\r\\n    }\\...\n      SWAP1 \t\t\teck(_receipent);\\r\\n\\r\\n    }\\...\n      POP \t\t\teck(_receipent);\\r\\n\\r\\n    }\\...\n      JUMP \t\t\teck(_receipent);\\r\\n\\r\\n    }\\...\n    tag 47\t\t\tce() public view returns(uint2...\n      JUMPDEST \t\t\tce() public view returns(uint2...\n      PUSH [tag] 76\t\t\t\\n\\r\\n}\n      DUP2 \t\t\t\n      PUSH [tag] 46\t\t\t\\n\\r\\n}\n      JUMP \t\t\t\\n\\r\\n}\n    tag 76\t\t\t\\n\\r\\n}\n      JUMPDEST \t\t\t\\n\\r\\n}\n      DUP3 \t\t\t   \n      MSTORE \t\t\tnce;\\r\\n    }\\r\\n\\r\\n}\n      POP \t\t\tce() public view returns(uint2...\n      POP \t\t\tce() public view returns(uint2...\n      JUMP \t\t\tce() public view returns(uint2...\n    tag 24\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 78\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 47\t\t\t\n      JUMP \t\t\t\n    tag 78\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 48\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 49\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 596F75206D7573742073656E6420736F6D652045746865720000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 50\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 82\t\t\t\n      PUSH 18\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 48\t\t\t\n      JUMP \t\t\t\n    tag 82\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 83\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 49\t\t\t\n      JUMP \t\t\t\n    tag 83\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 28\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 85\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 50\t\t\t\n      JUMP \t\t\t\n    tag 85\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 51\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 7573657220697320616C72656164792070616964210000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 52\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 88\t\t\t\n      PUSH 15\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 48\t\t\t\n      JUMP \t\t\t\n    tag 88\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 89\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 51\t\t\t\n      JUMP \t\t\t\n    tag 89\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 35\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 91\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 52\t\t\t\n      JUMP \t\t\t\n    tag 91\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    .data\n"
}