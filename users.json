{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"users.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity >=0.4.20 <0.9.0;\\r\\n\\r\\ncontract cryptoDoreaUsers {\\r\\n\\r\\n    mapping(address=>bool) private _paymentStatus;\\r\\n    mapping(address=>uint256) private _paymentAmount;\\r\\n\\r\\n    constructor()  {\\r\\n\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    *\\r\\n    */\\r\\n    function paymentCheck(address usersAddress, uint256 _amount) public{\\r\\n\\r\\n        bool payCheck = _paymentStatus[usersAddress];\\r\\n\\r\\n        if(payCheck != true){\\r\\n\\r\\n            _paymentStatus[usersAddress] = true;\\r\\n            _paymentAmount[usersAddress] = _amount;\\r\\n\\r\\n        }else{\\r\\n            revert(\\\"user is already paid!\\\");\\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function userCheckStatus(address _receipent) public view returns (uint256){\\r\\n\\r\\n        return  _paymentAmount[_receipent];\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n    // Transfer Ether to Loyal Customers\\r\\n    function pay(address _receipent) public payable{\\r\\n\\r\\n        // add function to check if user is paid or not\\r\\n        require(msg.value > 0, \\\"You must send some Ether\\\");\\r\\n        paymentCheck(_receipent, msg.value);\\r\\n\\r\\n    }\\r\\n\\r\\n    \\r\\n    // get balance of contract address\\r\\n    function getBalance() public view returns(uint256){\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n}\"}},\"settings\":{\"optimizer\":{\"enabled\":false,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}},\"remappings\":[]}}",
	"name": "cryptoDoreaUsers",
	"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receipent\",\"type\":\"address\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usersAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"paymentCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receipent\",\"type\":\"address\"}],\"name\":\"userCheckStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"users.sol\":\"cryptoDoreaUsers\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"users.sol\":{\"keccak256\":\"0xb4984cc0c37291ac93a6f175b1bc626dfe99b2aa8355e5d672c43e7281cc7b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://40225b197e1fb5cf869c76de3f876381329b97269ffe4e575dcd1047f3ed4d12\",\"dweb:/ipfs/QmP4KEfgpu7CPXWJ1d4tNric86spcJg2FHzHKHEsMLu8bM\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_13": {
				"entryPoint": null,
				"id": 13,
				"parameterSlots": 0,
				"returnSlots": 0
			}
		},
		"generatedSources": [],
		"linkReferences": {},
		"object": "608060405234801561000f575f80fd5b506104f38061001d5f395ff3fe60806040526004361061003e575f3560e01c80630c11dedd1461004257806312065fe01461005e578063669b680c14610088578063857cf24e146100c4575b5f80fd5b61005c60048036038101906100579190610319565b6100ec565b005b348015610069575f80fd5b5061007261013b565b60405161007f919061035c565b60405180910390f35b348015610093575f80fd5b506100ae60048036038101906100a99190610319565b610142565b6040516100bb919061035c565b60405180910390f35b3480156100cf575f80fd5b506100ea60048036038101906100e5919061039f565b610188565b005b5f341161012e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012590610437565b60405180910390fd5b6101388134610188565b50565b5f47905090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050600115158115151461027b5760015f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508160015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506102b6565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ad9061049f565b60405180910390fd5b505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102e8826102bf565b9050919050565b6102f8816102de565b8114610302575f80fd5b50565b5f81359050610313816102ef565b92915050565b5f6020828403121561032e5761032d6102bb565b5b5f61033b84828501610305565b91505092915050565b5f819050919050565b61035681610344565b82525050565b5f60208201905061036f5f83018461034d565b92915050565b61037e81610344565b8114610388575f80fd5b50565b5f8135905061039981610375565b92915050565b5f80604083850312156103b5576103b46102bb565b5b5f6103c285828601610305565b92505060206103d38582860161038b565b9150509250929050565b5f82825260208201905092915050565b7f596f75206d7573742073656e6420736f6d6520457468657200000000000000005f82015250565b5f6104216018836103dd565b915061042c826103ed565b602082019050919050565b5f6020820190508181035f83015261044e81610415565b9050919050565b7f7573657220697320616c726561647920706169642100000000000000000000005f82015250565b5f6104896015836103dd565b915061049482610455565b602082019050919050565b5f6020820190508181035f8301526104b68161047d565b905091905056fea26469706673582212201618fc19e5d7e2c5823d454bc4bb30a6253cfadd23719aa68a9a27a931c691d764736f6c63430008160033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F3 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC11DEDD EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x669B680C EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x857CF24E EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x72 PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x39F JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x12E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x138 DUP2 CALLVALUE PUSH2 0x188 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x27B JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AD SWAP1 PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2E8 DUP3 PUSH2 0x2BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F8 DUP2 PUSH2 0x2DE JUMP JUMPDEST DUP2 EQ PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x313 DUP2 PUSH2 0x2EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32E JUMPI PUSH2 0x32D PUSH2 0x2BB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x33B DUP5 DUP3 DUP6 ADD PUSH2 0x305 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x356 DUP2 PUSH2 0x344 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36F PUSH0 DUP4 ADD DUP5 PUSH2 0x34D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x37E DUP2 PUSH2 0x344 JUMP JUMPDEST DUP2 EQ PUSH2 0x388 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x399 DUP2 PUSH2 0x375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B5 JUMPI PUSH2 0x3B4 PUSH2 0x2BB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C2 DUP6 DUP3 DUP7 ADD PUSH2 0x305 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3D3 DUP6 DUP3 DUP7 ADD PUSH2 0x38B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206D7573742073656E6420736F6D652045746865720000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x421 PUSH1 0x18 DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x42C DUP3 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x44E DUP2 PUSH2 0x415 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7573657220697320616C72656164792070616964210000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x489 PUSH1 0x15 DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x494 DUP3 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4B6 DUP2 PUSH2 0x47D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND XOR 0xFC NOT 0xE5 0xD7 0xE2 0xC5 DUP3 RETURNDATASIZE GASLIMIT 0x4B 0xC4 0xBB ADDRESS 0xA6 0x25 EXTCODECOPY STATICCALL 0xDD 0x23 PUSH18 0x9AA68A9A27A931C691D764736F6C63430008 AND STOP CALLER ",
		"sourceMap": "73:1118:0:-:0;;;217:25;;;;;;;;;;73:1118;;;;;;"
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [],
			"name": "getBalance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_receipent",
					"type": "address"
				}
			],
			"name": "pay",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "usersAddress",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "_amount",
					"type": "uint256"
				}
			],
			"name": "paymentCheck",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_receipent",
					"type": "address"
				}
			],
			"name": "userCheckStatus",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 5,
				"contract": "users.sol:cryptoDoreaUsers",
				"label": "_paymentStatus",
				"offset": 0,
				"slot": "0",
				"type": "t_mapping(t_address,t_bool)"
			},
			{
				"astId": 9,
				"contract": "users.sol:cryptoDoreaUsers",
				"label": "_paymentAmount",
				"offset": 0,
				"slot": "1",
				"type": "t_mapping(t_address,t_uint256)"
			}
		],
		"types": {
			"t_address": {
				"encoding": "inplace",
				"label": "address",
				"numberOfBytes": "20"
			},
			"t_bool": {
				"encoding": "inplace",
				"label": "bool",
				"numberOfBytes": "1"
			},
			"t_mapping(t_address,t_bool)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => bool)",
				"numberOfBytes": "32",
				"value": "t_bool"
			},
			"t_mapping(t_address,t_uint256)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => uint256)",
				"numberOfBytes": "32",
				"value": "t_uint256"
			},
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			}
		}
	},
	"web3Deploy": "var cryptodoreausersContract = new web3.eth.Contract([{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receipent\",\"type\":\"address\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usersAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"paymentCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receipent\",\"type\":\"address\"}],\"name\":\"userCheckStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]);\nvar cryptodoreausers = cryptodoreausersContract.deploy({\n     data: '0x608060405234801561000f575f80fd5b506104f38061001d5f395ff3fe60806040526004361061003e575f3560e01c80630c11dedd1461004257806312065fe01461005e578063669b680c14610088578063857cf24e146100c4575b5f80fd5b61005c60048036038101906100579190610319565b6100ec565b005b348015610069575f80fd5b5061007261013b565b60405161007f919061035c565b60405180910390f35b348015610093575f80fd5b506100ae60048036038101906100a99190610319565b610142565b6040516100bb919061035c565b60405180910390f35b3480156100cf575f80fd5b506100ea60048036038101906100e5919061039f565b610188565b005b5f341161012e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012590610437565b60405180910390fd5b6101388134610188565b50565b5f47905090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050600115158115151461027b5760015f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508160015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506102b6565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ad9061049f565b60405180910390fd5b505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102e8826102bf565b9050919050565b6102f8816102de565b8114610302575f80fd5b50565b5f81359050610313816102ef565b92915050565b5f6020828403121561032e5761032d6102bb565b5b5f61033b84828501610305565b91505092915050565b5f819050919050565b61035681610344565b82525050565b5f60208201905061036f5f83018461034d565b92915050565b61037e81610344565b8114610388575f80fd5b50565b5f8135905061039981610375565b92915050565b5f80604083850312156103b5576103b46102bb565b5b5f6103c285828601610305565b92505060206103d38582860161038b565b9150509250929050565b5f82825260208201905092915050565b7f596f75206d7573742073656e6420736f6d6520457468657200000000000000005f82015250565b5f6104216018836103dd565b915061042c826103ed565b602082019050919050565b5f6020820190508181035f83015261044e81610415565b9050919050565b7f7573657220697320616c726561647920706169642100000000000000000000005f82015250565b5f6104896015836103dd565b915061049482610455565b602082019050919050565b5f6020820190508181035f8301526104b68161047d565b905091905056fea26469706673582212201618fc19e5d7e2c5823d454bc4bb30a6253cfadd23719aa68a9a27a931c691d764736f6c63430008160033', \n     arguments: [\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"12065fe0": "getBalance()",
		"0c11dedd": "pay(address)",
		"857cf24e": "paymentCheck(address,uint256)",
		"669b680c": "userCheckStatus(address)"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "253400",
			"executionCost": "292",
			"totalCost": "253692"
		},
		"External": {
			"getBalance()": "334",
			"pay(address)": "49294",
			"paymentCheck(address,uint256)": "49501",
			"userCheckStatus(address)": "2851"
		}
	},
	"devdoc": {
		"kind": "dev",
		"methods": {},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@getBalance_93": {
				"entryPoint": 315,
				"id": 93,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@pay_81": {
				"entryPoint": 236,
				"id": 81,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@paymentCheck_49": {
				"entryPoint": 392,
				"id": 49,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@userCheckStatus_61": {
				"entryPoint": 322,
				"id": 61,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_decode_t_address": {
				"entryPoint": 773,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_uint256": {
				"entryPoint": 907,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_address": {
				"entryPoint": 793,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_addresst_uint256": {
				"entryPoint": 927,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_encode_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 1149,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 1045,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 845,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 1183,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 1079,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": 860,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"allocate_unbounded": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
				"entryPoint": 989,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"cleanup_t_address": {
				"entryPoint": 734,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint160": {
				"entryPoint": 703,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 836,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
				"entryPoint": 699,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"store_literal_in_memory_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212": {
				"entryPoint": 1109,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b": {
				"entryPoint": 1005,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_address": {
				"entryPoint": 751,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_uint256": {
				"entryPoint": 885,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:4487:1",
					"nodeType": "YulBlock",
					"src": "0:4487:1",
					"statements": [
						{
							"body": {
								"nativeSrc": "47:35:1",
								"nodeType": "YulBlock",
								"src": "47:35:1",
								"statements": [
									{
										"nativeSrc": "57:19:1",
										"nodeType": "YulAssignment",
										"src": "57:19:1",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "73:2:1",
													"nodeType": "YulLiteral",
													"src": "73:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "67:5:1",
												"nodeType": "YulIdentifier",
												"src": "67:5:1"
											},
											"nativeSrc": "67:9:1",
											"nodeType": "YulFunctionCall",
											"src": "67:9:1"
										},
										"variableNames": [
											{
												"name": "memPtr",
												"nativeSrc": "57:6:1",
												"nodeType": "YulIdentifier",
												"src": "57:6:1"
											}
										]
									}
								]
							},
							"name": "allocate_unbounded",
							"nativeSrc": "7:75:1",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "memPtr",
									"nativeSrc": "40:6:1",
									"nodeType": "YulTypedName",
									"src": "40:6:1",
									"type": ""
								}
							],
							"src": "7:75:1"
						},
						{
							"body": {
								"nativeSrc": "177:28:1",
								"nodeType": "YulBlock",
								"src": "177:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "194:1:1",
													"nodeType": "YulLiteral",
													"src": "194:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "197:1:1",
													"nodeType": "YulLiteral",
													"src": "197:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "187:6:1",
												"nodeType": "YulIdentifier",
												"src": "187:6:1"
											},
											"nativeSrc": "187:12:1",
											"nodeType": "YulFunctionCall",
											"src": "187:12:1"
										},
										"nativeSrc": "187:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "187:12:1"
									}
								]
							},
							"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
							"nativeSrc": "88:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "88:117:1"
						},
						{
							"body": {
								"nativeSrc": "300:28:1",
								"nodeType": "YulBlock",
								"src": "300:28:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "317:1:1",
													"nodeType": "YulLiteral",
													"src": "317:1:1",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "320:1:1",
													"nodeType": "YulLiteral",
													"src": "320:1:1",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "310:6:1",
												"nodeType": "YulIdentifier",
												"src": "310:6:1"
											},
											"nativeSrc": "310:12:1",
											"nodeType": "YulFunctionCall",
											"src": "310:12:1"
										},
										"nativeSrc": "310:12:1",
										"nodeType": "YulExpressionStatement",
										"src": "310:12:1"
									}
								]
							},
							"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
							"nativeSrc": "211:117:1",
							"nodeType": "YulFunctionDefinition",
							"src": "211:117:1"
						},
						{
							"body": {
								"nativeSrc": "379:81:1",
								"nodeType": "YulBlock",
								"src": "379:81:1",
								"statements": [
									{
										"nativeSrc": "389:65:1",
										"nodeType": "YulAssignment",
										"src": "389:65:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "404:5:1",
													"nodeType": "YulIdentifier",
													"src": "404:5:1"
												},
												{
													"kind": "number",
													"nativeSrc": "411:42:1",
													"nodeType": "YulLiteral",
													"src": "411:42:1",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "400:3:1",
												"nodeType": "YulIdentifier",
												"src": "400:3:1"
											},
											"nativeSrc": "400:54:1",
											"nodeType": "YulFunctionCall",
											"src": "400:54:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "389:7:1",
												"nodeType": "YulIdentifier",
												"src": "389:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint160",
							"nativeSrc": "334:126:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "361:5:1",
									"nodeType": "YulTypedName",
									"src": "361:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "371:7:1",
									"nodeType": "YulTypedName",
									"src": "371:7:1",
									"type": ""
								}
							],
							"src": "334:126:1"
						},
						{
							"body": {
								"nativeSrc": "511:51:1",
								"nodeType": "YulBlock",
								"src": "511:51:1",
								"statements": [
									{
										"nativeSrc": "521:35:1",
										"nodeType": "YulAssignment",
										"src": "521:35:1",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "550:5:1",
													"nodeType": "YulIdentifier",
													"src": "550:5:1"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint160",
												"nativeSrc": "532:17:1",
												"nodeType": "YulIdentifier",
												"src": "532:17:1"
											},
											"nativeSrc": "532:24:1",
											"nodeType": "YulFunctionCall",
											"src": "532:24:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "521:7:1",
												"nodeType": "YulIdentifier",
												"src": "521:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_address",
							"nativeSrc": "466:96:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "493:5:1",
									"nodeType": "YulTypedName",
									"src": "493:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "503:7:1",
									"nodeType": "YulTypedName",
									"src": "503:7:1",
									"type": ""
								}
							],
							"src": "466:96:1"
						},
						{
							"body": {
								"nativeSrc": "611:79:1",
								"nodeType": "YulBlock",
								"src": "611:79:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "668:16:1",
											"nodeType": "YulBlock",
											"src": "668:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "677:1:1",
																"nodeType": "YulLiteral",
																"src": "677:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "680:1:1",
																"nodeType": "YulLiteral",
																"src": "680:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "670:6:1",
															"nodeType": "YulIdentifier",
															"src": "670:6:1"
														},
														"nativeSrc": "670:12:1",
														"nodeType": "YulFunctionCall",
														"src": "670:12:1"
													},
													"nativeSrc": "670:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "670:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "634:5:1",
															"nodeType": "YulIdentifier",
															"src": "634:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "659:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "659:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_address",
																"nativeSrc": "641:17:1",
																"nodeType": "YulIdentifier",
																"src": "641:17:1"
															},
															"nativeSrc": "641:24:1",
															"nodeType": "YulFunctionCall",
															"src": "641:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "631:2:1",
														"nodeType": "YulIdentifier",
														"src": "631:2:1"
													},
													"nativeSrc": "631:35:1",
													"nodeType": "YulFunctionCall",
													"src": "631:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "624:6:1",
												"nodeType": "YulIdentifier",
												"src": "624:6:1"
											},
											"nativeSrc": "624:43:1",
											"nodeType": "YulFunctionCall",
											"src": "624:43:1"
										},
										"nativeSrc": "621:63:1",
										"nodeType": "YulIf",
										"src": "621:63:1"
									}
								]
							},
							"name": "validator_revert_t_address",
							"nativeSrc": "568:122:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "604:5:1",
									"nodeType": "YulTypedName",
									"src": "604:5:1",
									"type": ""
								}
							],
							"src": "568:122:1"
						},
						{
							"body": {
								"nativeSrc": "748:87:1",
								"nodeType": "YulBlock",
								"src": "748:87:1",
								"statements": [
									{
										"nativeSrc": "758:29:1",
										"nodeType": "YulAssignment",
										"src": "758:29:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "780:6:1",
													"nodeType": "YulIdentifier",
													"src": "780:6:1"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "767:12:1",
												"nodeType": "YulIdentifier",
												"src": "767:12:1"
											},
											"nativeSrc": "767:20:1",
											"nodeType": "YulFunctionCall",
											"src": "767:20:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "758:5:1",
												"nodeType": "YulIdentifier",
												"src": "758:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "823:5:1",
													"nodeType": "YulIdentifier",
													"src": "823:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_address",
												"nativeSrc": "796:26:1",
												"nodeType": "YulIdentifier",
												"src": "796:26:1"
											},
											"nativeSrc": "796:33:1",
											"nodeType": "YulFunctionCall",
											"src": "796:33:1"
										},
										"nativeSrc": "796:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "796:33:1"
									}
								]
							},
							"name": "abi_decode_t_address",
							"nativeSrc": "696:139:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "726:6:1",
									"nodeType": "YulTypedName",
									"src": "726:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "734:3:1",
									"nodeType": "YulTypedName",
									"src": "734:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "742:5:1",
									"nodeType": "YulTypedName",
									"src": "742:5:1",
									"type": ""
								}
							],
							"src": "696:139:1"
						},
						{
							"body": {
								"nativeSrc": "907:263:1",
								"nodeType": "YulBlock",
								"src": "907:263:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "953:83:1",
											"nodeType": "YulBlock",
											"src": "953:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "955:77:1",
															"nodeType": "YulIdentifier",
															"src": "955:77:1"
														},
														"nativeSrc": "955:79:1",
														"nodeType": "YulFunctionCall",
														"src": "955:79:1"
													},
													"nativeSrc": "955:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "955:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "928:7:1",
															"nodeType": "YulIdentifier",
															"src": "928:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "937:9:1",
															"nodeType": "YulIdentifier",
															"src": "937:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "924:3:1",
														"nodeType": "YulIdentifier",
														"src": "924:3:1"
													},
													"nativeSrc": "924:23:1",
													"nodeType": "YulFunctionCall",
													"src": "924:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "949:2:1",
													"nodeType": "YulLiteral",
													"src": "949:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "920:3:1",
												"nodeType": "YulIdentifier",
												"src": "920:3:1"
											},
											"nativeSrc": "920:32:1",
											"nodeType": "YulFunctionCall",
											"src": "920:32:1"
										},
										"nativeSrc": "917:119:1",
										"nodeType": "YulIf",
										"src": "917:119:1"
									},
									{
										"nativeSrc": "1046:117:1",
										"nodeType": "YulBlock",
										"src": "1046:117:1",
										"statements": [
											{
												"nativeSrc": "1061:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "1061:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "1075:1:1",
													"nodeType": "YulLiteral",
													"src": "1075:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "1065:6:1",
														"nodeType": "YulTypedName",
														"src": "1065:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "1090:63:1",
												"nodeType": "YulAssignment",
												"src": "1090:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "1125:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1125:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "1136:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1136:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "1121:3:1",
																"nodeType": "YulIdentifier",
																"src": "1121:3:1"
															},
															"nativeSrc": "1121:22:1",
															"nodeType": "YulFunctionCall",
															"src": "1121:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "1145:7:1",
															"nodeType": "YulIdentifier",
															"src": "1145:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "1100:20:1",
														"nodeType": "YulIdentifier",
														"src": "1100:20:1"
													},
													"nativeSrc": "1100:53:1",
													"nodeType": "YulFunctionCall",
													"src": "1100:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "1090:6:1",
														"nodeType": "YulIdentifier",
														"src": "1090:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_address",
							"nativeSrc": "841:329:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "877:9:1",
									"nodeType": "YulTypedName",
									"src": "877:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "888:7:1",
									"nodeType": "YulTypedName",
									"src": "888:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "900:6:1",
									"nodeType": "YulTypedName",
									"src": "900:6:1",
									"type": ""
								}
							],
							"src": "841:329:1"
						},
						{
							"body": {
								"nativeSrc": "1221:32:1",
								"nodeType": "YulBlock",
								"src": "1221:32:1",
								"statements": [
									{
										"nativeSrc": "1231:16:1",
										"nodeType": "YulAssignment",
										"src": "1231:16:1",
										"value": {
											"name": "value",
											"nativeSrc": "1242:5:1",
											"nodeType": "YulIdentifier",
											"src": "1242:5:1"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "1231:7:1",
												"nodeType": "YulIdentifier",
												"src": "1231:7:1"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "1176:77:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1203:5:1",
									"nodeType": "YulTypedName",
									"src": "1203:5:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "1213:7:1",
									"nodeType": "YulTypedName",
									"src": "1213:7:1",
									"type": ""
								}
							],
							"src": "1176:77:1"
						},
						{
							"body": {
								"nativeSrc": "1324:53:1",
								"nodeType": "YulBlock",
								"src": "1324:53:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "1341:3:1",
													"nodeType": "YulIdentifier",
													"src": "1341:3:1"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1364:5:1",
															"nodeType": "YulIdentifier",
															"src": "1364:5:1"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nativeSrc": "1346:17:1",
														"nodeType": "YulIdentifier",
														"src": "1346:17:1"
													},
													"nativeSrc": "1346:24:1",
													"nodeType": "YulFunctionCall",
													"src": "1346:24:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1334:6:1",
												"nodeType": "YulIdentifier",
												"src": "1334:6:1"
											},
											"nativeSrc": "1334:37:1",
											"nodeType": "YulFunctionCall",
											"src": "1334:37:1"
										},
										"nativeSrc": "1334:37:1",
										"nodeType": "YulExpressionStatement",
										"src": "1334:37:1"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nativeSrc": "1259:118:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1312:5:1",
									"nodeType": "YulTypedName",
									"src": "1312:5:1",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "1319:3:1",
									"nodeType": "YulTypedName",
									"src": "1319:3:1",
									"type": ""
								}
							],
							"src": "1259:118:1"
						},
						{
							"body": {
								"nativeSrc": "1481:124:1",
								"nodeType": "YulBlock",
								"src": "1481:124:1",
								"statements": [
									{
										"nativeSrc": "1491:26:1",
										"nodeType": "YulAssignment",
										"src": "1491:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1503:9:1",
													"nodeType": "YulIdentifier",
													"src": "1503:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "1514:2:1",
													"nodeType": "YulLiteral",
													"src": "1514:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1499:3:1",
												"nodeType": "YulIdentifier",
												"src": "1499:3:1"
											},
											"nativeSrc": "1499:18:1",
											"nodeType": "YulFunctionCall",
											"src": "1499:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1491:4:1",
												"nodeType": "YulIdentifier",
												"src": "1491:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "1571:6:1",
													"nodeType": "YulIdentifier",
													"src": "1571:6:1"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "1584:9:1",
															"nodeType": "YulIdentifier",
															"src": "1584:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "1595:1:1",
															"nodeType": "YulLiteral",
															"src": "1595:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1580:3:1",
														"nodeType": "YulIdentifier",
														"src": "1580:3:1"
													},
													"nativeSrc": "1580:17:1",
													"nodeType": "YulFunctionCall",
													"src": "1580:17:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1527:43:1",
												"nodeType": "YulIdentifier",
												"src": "1527:43:1"
											},
											"nativeSrc": "1527:71:1",
											"nodeType": "YulFunctionCall",
											"src": "1527:71:1"
										},
										"nativeSrc": "1527:71:1",
										"nodeType": "YulExpressionStatement",
										"src": "1527:71:1"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "1383:222:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1453:9:1",
									"nodeType": "YulTypedName",
									"src": "1453:9:1",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "1465:6:1",
									"nodeType": "YulTypedName",
									"src": "1465:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "1476:4:1",
									"nodeType": "YulTypedName",
									"src": "1476:4:1",
									"type": ""
								}
							],
							"src": "1383:222:1"
						},
						{
							"body": {
								"nativeSrc": "1654:79:1",
								"nodeType": "YulBlock",
								"src": "1654:79:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "1711:16:1",
											"nodeType": "YulBlock",
											"src": "1711:16:1",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1720:1:1",
																"nodeType": "YulLiteral",
																"src": "1720:1:1",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "1723:1:1",
																"nodeType": "YulLiteral",
																"src": "1723:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "1713:6:1",
															"nodeType": "YulIdentifier",
															"src": "1713:6:1"
														},
														"nativeSrc": "1713:12:1",
														"nodeType": "YulFunctionCall",
														"src": "1713:12:1"
													},
													"nativeSrc": "1713:12:1",
													"nodeType": "YulExpressionStatement",
													"src": "1713:12:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1677:5:1",
															"nodeType": "YulIdentifier",
															"src": "1677:5:1"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "1702:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1702:5:1"
																}
															],
															"functionName": {
																"name": "cleanup_t_uint256",
																"nativeSrc": "1684:17:1",
																"nodeType": "YulIdentifier",
																"src": "1684:17:1"
															},
															"nativeSrc": "1684:24:1",
															"nodeType": "YulFunctionCall",
															"src": "1684:24:1"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "1674:2:1",
														"nodeType": "YulIdentifier",
														"src": "1674:2:1"
													},
													"nativeSrc": "1674:35:1",
													"nodeType": "YulFunctionCall",
													"src": "1674:35:1"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "1667:6:1",
												"nodeType": "YulIdentifier",
												"src": "1667:6:1"
											},
											"nativeSrc": "1667:43:1",
											"nodeType": "YulFunctionCall",
											"src": "1667:43:1"
										},
										"nativeSrc": "1664:63:1",
										"nodeType": "YulIf",
										"src": "1664:63:1"
									}
								]
							},
							"name": "validator_revert_t_uint256",
							"nativeSrc": "1611:122:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1647:5:1",
									"nodeType": "YulTypedName",
									"src": "1647:5:1",
									"type": ""
								}
							],
							"src": "1611:122:1"
						},
						{
							"body": {
								"nativeSrc": "1791:87:1",
								"nodeType": "YulBlock",
								"src": "1791:87:1",
								"statements": [
									{
										"nativeSrc": "1801:29:1",
										"nodeType": "YulAssignment",
										"src": "1801:29:1",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "1823:6:1",
													"nodeType": "YulIdentifier",
													"src": "1823:6:1"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "1810:12:1",
												"nodeType": "YulIdentifier",
												"src": "1810:12:1"
											},
											"nativeSrc": "1810:20:1",
											"nodeType": "YulFunctionCall",
											"src": "1810:20:1"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "1801:5:1",
												"nodeType": "YulIdentifier",
												"src": "1801:5:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1866:5:1",
													"nodeType": "YulIdentifier",
													"src": "1866:5:1"
												}
											],
											"functionName": {
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1839:26:1",
												"nodeType": "YulIdentifier",
												"src": "1839:26:1"
											},
											"nativeSrc": "1839:33:1",
											"nodeType": "YulFunctionCall",
											"src": "1839:33:1"
										},
										"nativeSrc": "1839:33:1",
										"nodeType": "YulExpressionStatement",
										"src": "1839:33:1"
									}
								]
							},
							"name": "abi_decode_t_uint256",
							"nativeSrc": "1739:139:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "1769:6:1",
									"nodeType": "YulTypedName",
									"src": "1769:6:1",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "1777:3:1",
									"nodeType": "YulTypedName",
									"src": "1777:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "1785:5:1",
									"nodeType": "YulTypedName",
									"src": "1785:5:1",
									"type": ""
								}
							],
							"src": "1739:139:1"
						},
						{
							"body": {
								"nativeSrc": "1967:391:1",
								"nodeType": "YulBlock",
								"src": "1967:391:1",
								"statements": [
									{
										"body": {
											"nativeSrc": "2013:83:1",
											"nodeType": "YulBlock",
											"src": "2013:83:1",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "2015:77:1",
															"nodeType": "YulIdentifier",
															"src": "2015:77:1"
														},
														"nativeSrc": "2015:79:1",
														"nodeType": "YulFunctionCall",
														"src": "2015:79:1"
													},
													"nativeSrc": "2015:79:1",
													"nodeType": "YulExpressionStatement",
													"src": "2015:79:1"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "1988:7:1",
															"nodeType": "YulIdentifier",
															"src": "1988:7:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "1997:9:1",
															"nodeType": "YulIdentifier",
															"src": "1997:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "1984:3:1",
														"nodeType": "YulIdentifier",
														"src": "1984:3:1"
													},
													"nativeSrc": "1984:23:1",
													"nodeType": "YulFunctionCall",
													"src": "1984:23:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2009:2:1",
													"nodeType": "YulLiteral",
													"src": "2009:2:1",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "1980:3:1",
												"nodeType": "YulIdentifier",
												"src": "1980:3:1"
											},
											"nativeSrc": "1980:32:1",
											"nodeType": "YulFunctionCall",
											"src": "1980:32:1"
										},
										"nativeSrc": "1977:119:1",
										"nodeType": "YulIf",
										"src": "1977:119:1"
									},
									{
										"nativeSrc": "2106:117:1",
										"nodeType": "YulBlock",
										"src": "2106:117:1",
										"statements": [
											{
												"nativeSrc": "2121:15:1",
												"nodeType": "YulVariableDeclaration",
												"src": "2121:15:1",
												"value": {
													"kind": "number",
													"nativeSrc": "2135:1:1",
													"nodeType": "YulLiteral",
													"src": "2135:1:1",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "2125:6:1",
														"nodeType": "YulTypedName",
														"src": "2125:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "2150:63:1",
												"nodeType": "YulAssignment",
												"src": "2150:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "2185:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2185:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "2196:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2196:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "2181:3:1",
																"nodeType": "YulIdentifier",
																"src": "2181:3:1"
															},
															"nativeSrc": "2181:22:1",
															"nodeType": "YulFunctionCall",
															"src": "2181:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "2205:7:1",
															"nodeType": "YulIdentifier",
															"src": "2205:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "2160:20:1",
														"nodeType": "YulIdentifier",
														"src": "2160:20:1"
													},
													"nativeSrc": "2160:53:1",
													"nodeType": "YulFunctionCall",
													"src": "2160:53:1"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "2150:6:1",
														"nodeType": "YulIdentifier",
														"src": "2150:6:1"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "2233:118:1",
										"nodeType": "YulBlock",
										"src": "2233:118:1",
										"statements": [
											{
												"nativeSrc": "2248:16:1",
												"nodeType": "YulVariableDeclaration",
												"src": "2248:16:1",
												"value": {
													"kind": "number",
													"nativeSrc": "2262:2:1",
													"nodeType": "YulLiteral",
													"src": "2262:2:1",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "2252:6:1",
														"nodeType": "YulTypedName",
														"src": "2252:6:1",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "2278:63:1",
												"nodeType": "YulAssignment",
												"src": "2278:63:1",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "2313:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2313:9:1"
																},
																{
																	"name": "offset",
																	"nativeSrc": "2324:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:1"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "2309:3:1",
																"nodeType": "YulIdentifier",
																"src": "2309:3:1"
															},
															"nativeSrc": "2309:22:1",
															"nodeType": "YulFunctionCall",
															"src": "2309:22:1"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "2333:7:1",
															"nodeType": "YulIdentifier",
															"src": "2333:7:1"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "2288:20:1",
														"nodeType": "YulIdentifier",
														"src": "2288:20:1"
													},
													"nativeSrc": "2288:53:1",
													"nodeType": "YulFunctionCall",
													"src": "2288:53:1"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "2278:6:1",
														"nodeType": "YulIdentifier",
														"src": "2278:6:1"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_uint256",
							"nativeSrc": "1884:474:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1929:9:1",
									"nodeType": "YulTypedName",
									"src": "1929:9:1",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "1940:7:1",
									"nodeType": "YulTypedName",
									"src": "1940:7:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "1952:6:1",
									"nodeType": "YulTypedName",
									"src": "1952:6:1",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "1960:6:1",
									"nodeType": "YulTypedName",
									"src": "1960:6:1",
									"type": ""
								}
							],
							"src": "1884:474:1"
						},
						{
							"body": {
								"nativeSrc": "2460:73:1",
								"nodeType": "YulBlock",
								"src": "2460:73:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2477:3:1",
													"nodeType": "YulIdentifier",
													"src": "2477:3:1"
												},
												{
													"name": "length",
													"nativeSrc": "2482:6:1",
													"nodeType": "YulIdentifier",
													"src": "2482:6:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2470:6:1",
												"nodeType": "YulIdentifier",
												"src": "2470:6:1"
											},
											"nativeSrc": "2470:19:1",
											"nodeType": "YulFunctionCall",
											"src": "2470:19:1"
										},
										"nativeSrc": "2470:19:1",
										"nodeType": "YulExpressionStatement",
										"src": "2470:19:1"
									},
									{
										"nativeSrc": "2498:29:1",
										"nodeType": "YulAssignment",
										"src": "2498:29:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2517:3:1",
													"nodeType": "YulIdentifier",
													"src": "2517:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2522:4:1",
													"nodeType": "YulLiteral",
													"src": "2522:4:1",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "2513:3:1",
												"nodeType": "YulIdentifier",
												"src": "2513:3:1"
											},
											"nativeSrc": "2513:14:1",
											"nodeType": "YulFunctionCall",
											"src": "2513:14:1"
										},
										"variableNames": [
											{
												"name": "updated_pos",
												"nativeSrc": "2498:11:1",
												"nodeType": "YulIdentifier",
												"src": "2498:11:1"
											}
										]
									}
								]
							},
							"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
							"nativeSrc": "2364:169:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "2432:3:1",
									"nodeType": "YulTypedName",
									"src": "2432:3:1",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "2437:6:1",
									"nodeType": "YulTypedName",
									"src": "2437:6:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "updated_pos",
									"nativeSrc": "2448:11:1",
									"nodeType": "YulTypedName",
									"src": "2448:11:1",
									"type": ""
								}
							],
							"src": "2364:169:1"
						},
						{
							"body": {
								"nativeSrc": "2645:68:1",
								"nodeType": "YulBlock",
								"src": "2645:68:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "2667:6:1",
															"nodeType": "YulIdentifier",
															"src": "2667:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "2675:1:1",
															"nodeType": "YulLiteral",
															"src": "2675:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "2663:3:1",
														"nodeType": "YulIdentifier",
														"src": "2663:3:1"
													},
													"nativeSrc": "2663:14:1",
													"nodeType": "YulFunctionCall",
													"src": "2663:14:1"
												},
												{
													"hexValue": "596f75206d7573742073656e6420736f6d65204574686572",
													"kind": "string",
													"nativeSrc": "2679:26:1",
													"nodeType": "YulLiteral",
													"src": "2679:26:1",
													"type": "",
													"value": "You must send some Ether"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "2656:6:1",
												"nodeType": "YulIdentifier",
												"src": "2656:6:1"
											},
											"nativeSrc": "2656:50:1",
											"nodeType": "YulFunctionCall",
											"src": "2656:50:1"
										},
										"nativeSrc": "2656:50:1",
										"nodeType": "YulExpressionStatement",
										"src": "2656:50:1"
									}
								]
							},
							"name": "store_literal_in_memory_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b",
							"nativeSrc": "2539:174:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "2637:6:1",
									"nodeType": "YulTypedName",
									"src": "2637:6:1",
									"type": ""
								}
							],
							"src": "2539:174:1"
						},
						{
							"body": {
								"nativeSrc": "2865:220:1",
								"nodeType": "YulBlock",
								"src": "2865:220:1",
								"statements": [
									{
										"nativeSrc": "2875:74:1",
										"nodeType": "YulAssignment",
										"src": "2875:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "2941:3:1",
													"nodeType": "YulIdentifier",
													"src": "2941:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "2946:2:1",
													"nodeType": "YulLiteral",
													"src": "2946:2:1",
													"type": "",
													"value": "24"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2882:58:1",
												"nodeType": "YulIdentifier",
												"src": "2882:58:1"
											},
											"nativeSrc": "2882:67:1",
											"nodeType": "YulFunctionCall",
											"src": "2882:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "2875:3:1",
												"nodeType": "YulIdentifier",
												"src": "2875:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3047:3:1",
													"nodeType": "YulIdentifier",
													"src": "3047:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b",
												"nativeSrc": "2958:88:1",
												"nodeType": "YulIdentifier",
												"src": "2958:88:1"
											},
											"nativeSrc": "2958:93:1",
											"nodeType": "YulFunctionCall",
											"src": "2958:93:1"
										},
										"nativeSrc": "2958:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "2958:93:1"
									},
									{
										"nativeSrc": "3060:19:1",
										"nodeType": "YulAssignment",
										"src": "3060:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3071:3:1",
													"nodeType": "YulIdentifier",
													"src": "3071:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3076:2:1",
													"nodeType": "YulLiteral",
													"src": "3076:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3067:3:1",
												"nodeType": "YulIdentifier",
												"src": "3067:3:1"
											},
											"nativeSrc": "3067:12:1",
											"nodeType": "YulFunctionCall",
											"src": "3067:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "3060:3:1",
												"nodeType": "YulIdentifier",
												"src": "3060:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "2719:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "2853:3:1",
									"nodeType": "YulTypedName",
									"src": "2853:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "2861:3:1",
									"nodeType": "YulTypedName",
									"src": "2861:3:1",
									"type": ""
								}
							],
							"src": "2719:366:1"
						},
						{
							"body": {
								"nativeSrc": "3262:248:1",
								"nodeType": "YulBlock",
								"src": "3262:248:1",
								"statements": [
									{
										"nativeSrc": "3272:26:1",
										"nodeType": "YulAssignment",
										"src": "3272:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3284:9:1",
													"nodeType": "YulIdentifier",
													"src": "3284:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3295:2:1",
													"nodeType": "YulLiteral",
													"src": "3295:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3280:3:1",
												"nodeType": "YulIdentifier",
												"src": "3280:3:1"
											},
											"nativeSrc": "3280:18:1",
											"nodeType": "YulFunctionCall",
											"src": "3280:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3272:4:1",
												"nodeType": "YulIdentifier",
												"src": "3272:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3319:9:1",
															"nodeType": "YulIdentifier",
															"src": "3319:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "3330:1:1",
															"nodeType": "YulLiteral",
															"src": "3330:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3315:3:1",
														"nodeType": "YulIdentifier",
														"src": "3315:3:1"
													},
													"nativeSrc": "3315:17:1",
													"nodeType": "YulFunctionCall",
													"src": "3315:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "3338:4:1",
															"nodeType": "YulIdentifier",
															"src": "3338:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "3344:9:1",
															"nodeType": "YulIdentifier",
															"src": "3344:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "3334:3:1",
														"nodeType": "YulIdentifier",
														"src": "3334:3:1"
													},
													"nativeSrc": "3334:20:1",
													"nodeType": "YulFunctionCall",
													"src": "3334:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3308:6:1",
												"nodeType": "YulIdentifier",
												"src": "3308:6:1"
											},
											"nativeSrc": "3308:47:1",
											"nodeType": "YulFunctionCall",
											"src": "3308:47:1"
										},
										"nativeSrc": "3308:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "3308:47:1"
									},
									{
										"nativeSrc": "3364:139:1",
										"nodeType": "YulAssignment",
										"src": "3364:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "3498:4:1",
													"nodeType": "YulIdentifier",
													"src": "3498:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3372:124:1",
												"nodeType": "YulIdentifier",
												"src": "3372:124:1"
											},
											"nativeSrc": "3372:131:1",
											"nodeType": "YulFunctionCall",
											"src": "3372:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3364:4:1",
												"nodeType": "YulIdentifier",
												"src": "3364:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "3091:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3242:9:1",
									"nodeType": "YulTypedName",
									"src": "3242:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "3257:4:1",
									"nodeType": "YulTypedName",
									"src": "3257:4:1",
									"type": ""
								}
							],
							"src": "3091:419:1"
						},
						{
							"body": {
								"nativeSrc": "3622:65:1",
								"nodeType": "YulBlock",
								"src": "3622:65:1",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "3644:6:1",
															"nodeType": "YulIdentifier",
															"src": "3644:6:1"
														},
														{
															"kind": "number",
															"nativeSrc": "3652:1:1",
															"nodeType": "YulLiteral",
															"src": "3652:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3640:3:1",
														"nodeType": "YulIdentifier",
														"src": "3640:3:1"
													},
													"nativeSrc": "3640:14:1",
													"nodeType": "YulFunctionCall",
													"src": "3640:14:1"
												},
												{
													"hexValue": "7573657220697320616c7265616479207061696421",
													"kind": "string",
													"nativeSrc": "3656:23:1",
													"nodeType": "YulLiteral",
													"src": "3656:23:1",
													"type": "",
													"value": "user is already paid!"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3633:6:1",
												"nodeType": "YulIdentifier",
												"src": "3633:6:1"
											},
											"nativeSrc": "3633:47:1",
											"nodeType": "YulFunctionCall",
											"src": "3633:47:1"
										},
										"nativeSrc": "3633:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "3633:47:1"
									}
								]
							},
							"name": "store_literal_in_memory_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212",
							"nativeSrc": "3516:171:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "3614:6:1",
									"nodeType": "YulTypedName",
									"src": "3614:6:1",
									"type": ""
								}
							],
							"src": "3516:171:1"
						},
						{
							"body": {
								"nativeSrc": "3839:220:1",
								"nodeType": "YulBlock",
								"src": "3839:220:1",
								"statements": [
									{
										"nativeSrc": "3849:74:1",
										"nodeType": "YulAssignment",
										"src": "3849:74:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3915:3:1",
													"nodeType": "YulIdentifier",
													"src": "3915:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "3920:2:1",
													"nodeType": "YulLiteral",
													"src": "3920:2:1",
													"type": "",
													"value": "21"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3856:58:1",
												"nodeType": "YulIdentifier",
												"src": "3856:58:1"
											},
											"nativeSrc": "3856:67:1",
											"nodeType": "YulFunctionCall",
											"src": "3856:67:1"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "3849:3:1",
												"nodeType": "YulIdentifier",
												"src": "3849:3:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "4021:3:1",
													"nodeType": "YulIdentifier",
													"src": "4021:3:1"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212",
												"nativeSrc": "3932:88:1",
												"nodeType": "YulIdentifier",
												"src": "3932:88:1"
											},
											"nativeSrc": "3932:93:1",
											"nodeType": "YulFunctionCall",
											"src": "3932:93:1"
										},
										"nativeSrc": "3932:93:1",
										"nodeType": "YulExpressionStatement",
										"src": "3932:93:1"
									},
									{
										"nativeSrc": "4034:19:1",
										"nodeType": "YulAssignment",
										"src": "4034:19:1",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "4045:3:1",
													"nodeType": "YulIdentifier",
													"src": "4045:3:1"
												},
												{
													"kind": "number",
													"nativeSrc": "4050:2:1",
													"nodeType": "YulLiteral",
													"src": "4050:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "4041:3:1",
												"nodeType": "YulIdentifier",
												"src": "4041:3:1"
											},
											"nativeSrc": "4041:12:1",
											"nodeType": "YulFunctionCall",
											"src": "4041:12:1"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "4034:3:1",
												"nodeType": "YulIdentifier",
												"src": "4034:3:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "3693:366:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "3827:3:1",
									"nodeType": "YulTypedName",
									"src": "3827:3:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "3835:3:1",
									"nodeType": "YulTypedName",
									"src": "3835:3:1",
									"type": ""
								}
							],
							"src": "3693:366:1"
						},
						{
							"body": {
								"nativeSrc": "4236:248:1",
								"nodeType": "YulBlock",
								"src": "4236:248:1",
								"statements": [
									{
										"nativeSrc": "4246:26:1",
										"nodeType": "YulAssignment",
										"src": "4246:26:1",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "4258:9:1",
													"nodeType": "YulIdentifier",
													"src": "4258:9:1"
												},
												{
													"kind": "number",
													"nativeSrc": "4269:2:1",
													"nodeType": "YulLiteral",
													"src": "4269:2:1",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "4254:3:1",
												"nodeType": "YulIdentifier",
												"src": "4254:3:1"
											},
											"nativeSrc": "4254:18:1",
											"nodeType": "YulFunctionCall",
											"src": "4254:18:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "4246:4:1",
												"nodeType": "YulIdentifier",
												"src": "4246:4:1"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "4293:9:1",
															"nodeType": "YulIdentifier",
															"src": "4293:9:1"
														},
														{
															"kind": "number",
															"nativeSrc": "4304:1:1",
															"nodeType": "YulLiteral",
															"src": "4304:1:1",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "4289:3:1",
														"nodeType": "YulIdentifier",
														"src": "4289:3:1"
													},
													"nativeSrc": "4289:17:1",
													"nodeType": "YulFunctionCall",
													"src": "4289:17:1"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "4312:4:1",
															"nodeType": "YulIdentifier",
															"src": "4312:4:1"
														},
														{
															"name": "headStart",
															"nativeSrc": "4318:9:1",
															"nodeType": "YulIdentifier",
															"src": "4318:9:1"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "4308:3:1",
														"nodeType": "YulIdentifier",
														"src": "4308:3:1"
													},
													"nativeSrc": "4308:20:1",
													"nodeType": "YulFunctionCall",
													"src": "4308:20:1"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "4282:6:1",
												"nodeType": "YulIdentifier",
												"src": "4282:6:1"
											},
											"nativeSrc": "4282:47:1",
											"nodeType": "YulFunctionCall",
											"src": "4282:47:1"
										},
										"nativeSrc": "4282:47:1",
										"nodeType": "YulExpressionStatement",
										"src": "4282:47:1"
									},
									{
										"nativeSrc": "4338:139:1",
										"nodeType": "YulAssignment",
										"src": "4338:139:1",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "4472:4:1",
													"nodeType": "YulIdentifier",
													"src": "4472:4:1"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4346:124:1",
												"nodeType": "YulIdentifier",
												"src": "4346:124:1"
											},
											"nativeSrc": "4346:131:1",
											"nodeType": "YulFunctionCall",
											"src": "4346:131:1"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "4338:4:1",
												"nodeType": "YulIdentifier",
												"src": "4338:4:1"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "4065:419:1",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "4216:9:1",
									"nodeType": "YulTypedName",
									"src": "4216:9:1",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "4231:4:1",
									"nodeType": "YulTypedName",
									"src": "4231:4:1",
									"type": ""
								}
							],
							"src": "4065:419:1"
						}
					]
				},
				"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b(memPtr) {\n\n        mstore(add(memPtr, 0), \"You must send some Ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c605d9c1d62b9513f83d716ff334f7a0d35977b0100bd2820c441985c5ca775b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212(memPtr) {\n\n        mstore(add(memPtr, 0), \"user is already paid!\")\n\n    }\n\n    function abi_encode_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_56527f875d10a36b50f8e91bb28a85c990090b79dc06ea89f0ead8d5faa05212_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
				"id": 1,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "60806040526004361061003e575f3560e01c80630c11dedd1461004257806312065fe01461005e578063669b680c14610088578063857cf24e146100c4575b5f80fd5b61005c60048036038101906100579190610319565b6100ec565b005b348015610069575f80fd5b5061007261013b565b60405161007f919061035c565b60405180910390f35b348015610093575f80fd5b506100ae60048036038101906100a99190610319565b610142565b6040516100bb919061035c565b60405180910390f35b3480156100cf575f80fd5b506100ea60048036038101906100e5919061039f565b610188565b005b5f341161012e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012590610437565b60405180910390fd5b6101388134610188565b50565b5f47905090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f805f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050600115158115151461027b5760015f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508160015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506102b6565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ad9061049f565b60405180910390fd5b505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102e8826102bf565b9050919050565b6102f8816102de565b8114610302575f80fd5b50565b5f81359050610313816102ef565b92915050565b5f6020828403121561032e5761032d6102bb565b5b5f61033b84828501610305565b91505092915050565b5f819050919050565b61035681610344565b82525050565b5f60208201905061036f5f83018461034d565b92915050565b61037e81610344565b8114610388575f80fd5b50565b5f8135905061039981610375565b92915050565b5f80604083850312156103b5576103b46102bb565b5b5f6103c285828601610305565b92505060206103d38582860161038b565b9150509250929050565b5f82825260208201905092915050565b7f596f75206d7573742073656e6420736f6d6520457468657200000000000000005f82015250565b5f6104216018836103dd565b915061042c826103ed565b602082019050919050565b5f6020820190508181035f83015261044e81610415565b9050919050565b7f7573657220697320616c726561647920706169642100000000000000000000005f82015250565b5f6104896015836103dd565b915061049482610455565b602082019050919050565b5f6020820190508181035f8301526104b68161047d565b905091905056fea26469706673582212201618fc19e5d7e2c5823d454bc4bb30a6253cfadd23719aa68a9a27a931c691d764736f6c63430008160033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC11DEDD EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x669B680C EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x857CF24E EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x72 PUSH2 0x13B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x319 JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x39F JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x12E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125 SWAP1 PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x138 DUP2 CALLVALUE PUSH2 0x188 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x27B JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AD SWAP1 PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2E8 DUP3 PUSH2 0x2BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F8 DUP2 PUSH2 0x2DE JUMP JUMPDEST DUP2 EQ PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x313 DUP2 PUSH2 0x2EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32E JUMPI PUSH2 0x32D PUSH2 0x2BB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x33B DUP5 DUP3 DUP6 ADD PUSH2 0x305 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x356 DUP2 PUSH2 0x344 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x36F PUSH0 DUP4 ADD DUP5 PUSH2 0x34D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x37E DUP2 PUSH2 0x344 JUMP JUMPDEST DUP2 EQ PUSH2 0x388 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x399 DUP2 PUSH2 0x375 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3B5 JUMPI PUSH2 0x3B4 PUSH2 0x2BB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C2 DUP6 DUP3 DUP7 ADD PUSH2 0x305 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3D3 DUP6 DUP3 DUP7 ADD PUSH2 0x38B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206D7573742073656E6420736F6D652045746865720000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x421 PUSH1 0x18 DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x42C DUP3 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x44E DUP2 PUSH2 0x415 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7573657220697320616C72656164792070616964210000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x489 PUSH1 0x15 DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x494 DUP3 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4B6 DUP2 PUSH2 0x47D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND XOR 0xFC NOT 0xE5 0xD7 0xE2 0xC5 DUP3 RETURNDATASIZE GASLIMIT 0x4B 0xC4 0xBB ADDRESS 0xA6 0x25 EXTCODECOPY STATICCALL 0xDD 0x23 PUSH18 0x9AA68A9A27A931C691D764736F6C63430008 AND STOP CALLER ",
		"sourceMap": "73:1118:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;812:223;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1089:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;629:131;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;274:347;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;812:223;949:1;937:9;:13;929:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;990:35;1003:10;1015:9;990:12;:35::i;:::-;812:223;:::o;1089:97::-;1131:7;1157:21;1150:28;;1089:97;:::o;629:131::-;695:7;724:14;:26;739:10;724:26;;;;;;;;;;;;;;;;716:34;;629:131;;;:::o;274:347::-;354:13;370:14;:28;385:12;370:28;;;;;;;;;;;;;;;;;;;;;;;;;354:44;;426:4;414:16;;:8;:16;;;411:201;;479:4;448:14;:28;463:12;448:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;529:7;498:14;:28;513:12;498:28;;;;;;;;;;;;;;;:38;;;;411:201;;;569:31;;;;;;;;;;:::i;:::-;;;;;;;;411:201;341:280;274:347;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:169::-;2448:11;2482:6;2477:3;2470:19;2522:4;2517:3;2513:14;2498:29;;2364:169;;;;:::o;2539:174::-;2679:26;2675:1;2667:6;2663:14;2656:50;2539:174;:::o;2719:366::-;2861:3;2882:67;2946:2;2941:3;2882:67;:::i;:::-;2875:74;;2958:93;3047:3;2958:93;:::i;:::-;3076:2;3071:3;3067:12;3060:19;;2719:366;;;:::o;3091:419::-;3257:4;3295:2;3284:9;3280:18;3272:26;;3344:9;3338:4;3334:20;3330:1;3319:9;3315:17;3308:47;3372:131;3498:4;3372:131;:::i;:::-;3364:139;;3091:419;;;:::o;3516:171::-;3656:23;3652:1;3644:6;3640:14;3633:47;3516:171;:::o;3693:366::-;3835:3;3856:67;3920:2;3915:3;3856:67;:::i;:::-;3849:74;;3932:93;4021:3;3932:93;:::i;:::-;4050:2;4045:3;4041:12;4034:19;;3693:366;;;:::o;4065:419::-;4231:4;4269:2;4258:9;4254:18;4246:26;;4318:9;4312:4;4308:20;4304:1;4293:9;4289:17;4282:47;4346:131;4472:4;4346:131;:::i;:::-;4338:139;;4065:419;;;:::o"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  PUSH 40\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  MSTORE \t\t\tcontract cryptoDoreaUsers {\\r\\...\n  CALLVALUE \t\t\tconstructor()  {\\r\\n\\r\\n    }\n  DUP1 \t\t\tconstructor()  {\\r\\n\\r\\n    }\n  ISZERO \t\t\tconstructor()  {\\r\\n\\r\\n    }\n  PUSH [tag] 1\t\t\tconstructor()  {\\r\\n\\r\\n    }\n  JUMPI \t\t\tconstructor()  {\\r\\n\\r\\n    }\n  PUSH 0\t\t\tconstructor()  {\\r\\n\\r\\n    }\n  DUP1 \t\t\tconstructor()  {\\r\\n\\r\\n    }\n  REVERT \t\t\tconstructor()  {\\r\\n\\r\\n    }\ntag 1\t\t\tconstructor()  {\\r\\n\\r\\n    }\n  JUMPDEST \t\t\tconstructor()  {\\r\\n\\r\\n    }\n  POP \t\t\tconstructor()  {\\r\\n\\r\\n    }\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  PUSH 0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  CODECOPY \t\t\tcontract cryptoDoreaUsers {\\r\\...\n  PUSH 0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n  RETURN \t\t\tcontract cryptoDoreaUsers {\\r\\...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 40\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      MSTORE \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 4\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      CALLDATASIZE \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      LT \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH [tag] 1\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPI \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      CALLDATALOAD \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH E0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      SHR \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH C11DEDD\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      EQ \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH [tag] 2\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPI \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 12065FE0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      EQ \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH [tag] 3\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPI \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 669B680C\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      EQ \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH [tag] 4\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPI \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 857CF24E\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      EQ \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH [tag] 5\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPI \t\t\tcontract cryptoDoreaUsers {\\r\\...\n    tag 1\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      JUMPDEST \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      PUSH 0\t\t\tcontract cryptoDoreaUsers {\\r\\...\n      DUP1 \t\t\tcontract cryptoDoreaUsers {\\r\\...\n      REVERT \t\t\tcontract cryptoDoreaUsers {\\r\\...\n    tag 2\t\t\tfunction pay(address _receipen...\n      JUMPDEST \t\t\tfunction pay(address _receipen...\n      PUSH [tag] 6\t\t\tfunction pay(address _receipen...\n      PUSH 4\t\t\tfunction pay(address _receipen...\n      DUP1 \t\t\tfunction pay(address _receipen...\n      CALLDATASIZE \t\t\tfunction pay(address _receipen...\n      SUB \t\t\tfunction pay(address _receipen...\n      DUP2 \t\t\tfunction pay(address _receipen...\n      ADD \t\t\tfunction pay(address _receipen...\n      SWAP1 \t\t\tfunction pay(address _receipen...\n      PUSH [tag] 7\t\t\tfunction pay(address _receipen...\n      SWAP2 \t\t\tfunction pay(address _receipen...\n      SWAP1 \t\t\tfunction pay(address _receipen...\n      PUSH [tag] 8\t\t\tfunction pay(address _receipen...\n      JUMP \t\t\tfunction pay(address _receipen...\n    tag 7\t\t\tfunction pay(address _receipen...\n      JUMPDEST \t\t\tfunction pay(address _receipen...\n      PUSH [tag] 9\t\t\tfunction pay(address _receipen...\n      JUMP \t\t\tfunction pay(address _receipen...\n    tag 6\t\t\tfunction pay(address _receipen...\n      JUMPDEST \t\t\tfunction pay(address _receipen...\n      STOP \t\t\tfunction pay(address _receipen...\n    tag 3\t\t\tfunction getBalance() public v...\n      JUMPDEST \t\t\tfunction getBalance() public v...\n      CALLVALUE \t\t\tfunction getBalance() public v...\n      DUP1 \t\t\tfunction getBalance() public v...\n      ISZERO \t\t\tfunction getBalance() public v...\n      PUSH [tag] 10\t\t\tfunction getBalance() public v...\n      JUMPI \t\t\tfunction getBalance() public v...\n      PUSH 0\t\t\tfunction getBalance() public v...\n      DUP1 \t\t\tfunction getBalance() public v...\n      REVERT \t\t\tfunction getBalance() public v...\n    tag 10\t\t\tfunction getBalance() public v...\n      JUMPDEST \t\t\tfunction getBalance() public v...\n      POP \t\t\tfunction getBalance() public v...\n      PUSH [tag] 11\t\t\tfunction getBalance() public v...\n      PUSH [tag] 12\t\t\tfunction getBalance() public v...\n      JUMP \t\t\tfunction getBalance() public v...\n    tag 11\t\t\tfunction getBalance() public v...\n      JUMPDEST \t\t\tfunction getBalance() public v...\n      PUSH 40\t\t\tfunction getBalance() public v...\n      MLOAD \t\t\tfunction getBalance() public v...\n      PUSH [tag] 13\t\t\tfunction getBalance() public v...\n      SWAP2 \t\t\tfunction getBalance() public v...\n      SWAP1 \t\t\tfunction getBalance() public v...\n      PUSH [tag] 14\t\t\tfunction getBalance() public v...\n      JUMP \t\t\tfunction getBalance() public v...\n    tag 13\t\t\tfunction getBalance() public v...\n      JUMPDEST \t\t\tfunction getBalance() public v...\n      PUSH 40\t\t\tfunction getBalance() public v...\n      MLOAD \t\t\tfunction getBalance() public v...\n      DUP1 \t\t\tfunction getBalance() public v...\n      SWAP2 \t\t\tfunction getBalance() public v...\n      SUB \t\t\tfunction getBalance() public v...\n      SWAP1 \t\t\tfunction getBalance() public v...\n      RETURN \t\t\tfunction getBalance() public v...\n    tag 4\t\t\tfunction userCheckStatus(addre...\n      JUMPDEST \t\t\tfunction userCheckStatus(addre...\n      CALLVALUE \t\t\tfunction userCheckStatus(addre...\n      DUP1 \t\t\tfunction userCheckStatus(addre...\n      ISZERO \t\t\tfunction userCheckStatus(addre...\n      PUSH [tag] 15\t\t\tfunction userCheckStatus(addre...\n      JUMPI \t\t\tfunction userCheckStatus(addre...\n      PUSH 0\t\t\tfunction userCheckStatus(addre...\n      DUP1 \t\t\tfunction userCheckStatus(addre...\n      REVERT \t\t\tfunction userCheckStatus(addre...\n    tag 15\t\t\tfunction userCheckStatus(addre...\n      JUMPDEST \t\t\tfunction userCheckStatus(addre...\n      POP \t\t\tfunction userCheckStatus(addre...\n      PUSH [tag] 16\t\t\tfunction userCheckStatus(addre...\n      PUSH 4\t\t\tfunction userCheckStatus(addre...\n      DUP1 \t\t\tfunction userCheckStatus(addre...\n      CALLDATASIZE \t\t\tfunction userCheckStatus(addre...\n      SUB \t\t\tfunction userCheckStatus(addre...\n      DUP2 \t\t\tfunction userCheckStatus(addre...\n      ADD \t\t\tfunction userCheckStatus(addre...\n      SWAP1 \t\t\tfunction userCheckStatus(addre...\n      PUSH [tag] 17\t\t\tfunction userCheckStatus(addre...\n      SWAP2 \t\t\tfunction userCheckStatus(addre...\n      SWAP1 \t\t\tfunction userCheckStatus(addre...\n      PUSH [tag] 8\t\t\tfunction userCheckStatus(addre...\n      JUMP \t\t\tfunction userCheckStatus(addre...\n    tag 17\t\t\tfunction userCheckStatus(addre...\n      JUMPDEST \t\t\tfunction userCheckStatus(addre...\n      PUSH [tag] 18\t\t\tfunction userCheckStatus(addre...\n      JUMP \t\t\tfunction userCheckStatus(addre...\n    tag 16\t\t\tfunction userCheckStatus(addre...\n      JUMPDEST \t\t\tfunction userCheckStatus(addre...\n      PUSH 40\t\t\tfunction userCheckStatus(addre...\n      MLOAD \t\t\tfunction userCheckStatus(addre...\n      PUSH [tag] 19\t\t\tfunction userCheckStatus(addre...\n      SWAP2 \t\t\tfunction userCheckStatus(addre...\n      SWAP1 \t\t\tfunction userCheckStatus(addre...\n      PUSH [tag] 14\t\t\tfunction userCheckStatus(addre...\n      JUMP \t\t\tfunction userCheckStatus(addre...\n    tag 19\t\t\tfunction userCheckStatus(addre...\n      JUMPDEST \t\t\tfunction userCheckStatus(addre...\n      PUSH 40\t\t\tfunction userCheckStatus(addre...\n      MLOAD \t\t\tfunction userCheckStatus(addre...\n      DUP1 \t\t\tfunction userCheckStatus(addre...\n      SWAP2 \t\t\tfunction userCheckStatus(addre...\n      SUB \t\t\tfunction userCheckStatus(addre...\n      SWAP1 \t\t\tfunction userCheckStatus(addre...\n      RETURN \t\t\tfunction userCheckStatus(addre...\n    tag 5\t\t\tfunction paymentCheck(address ...\n      JUMPDEST \t\t\tfunction paymentCheck(address ...\n      CALLVALUE \t\t\tfunction paymentCheck(address ...\n      DUP1 \t\t\tfunction paymentCheck(address ...\n      ISZERO \t\t\tfunction paymentCheck(address ...\n      PUSH [tag] 20\t\t\tfunction paymentCheck(address ...\n      JUMPI \t\t\tfunction paymentCheck(address ...\n      PUSH 0\t\t\tfunction paymentCheck(address ...\n      DUP1 \t\t\tfunction paymentCheck(address ...\n      REVERT \t\t\tfunction paymentCheck(address ...\n    tag 20\t\t\tfunction paymentCheck(address ...\n      JUMPDEST \t\t\tfunction paymentCheck(address ...\n      POP \t\t\tfunction paymentCheck(address ...\n      PUSH [tag] 21\t\t\tfunction paymentCheck(address ...\n      PUSH 4\t\t\tfunction paymentCheck(address ...\n      DUP1 \t\t\tfunction paymentCheck(address ...\n      CALLDATASIZE \t\t\tfunction paymentCheck(address ...\n      SUB \t\t\tfunction paymentCheck(address ...\n      DUP2 \t\t\tfunction paymentCheck(address ...\n      ADD \t\t\tfunction paymentCheck(address ...\n      SWAP1 \t\t\tfunction paymentCheck(address ...\n      PUSH [tag] 22\t\t\tfunction paymentCheck(address ...\n      SWAP2 \t\t\tfunction paymentCheck(address ...\n      SWAP1 \t\t\tfunction paymentCheck(address ...\n      PUSH [tag] 23\t\t\tfunction paymentCheck(address ...\n      JUMP \t\t\tfunction paymentCheck(address ...\n    tag 22\t\t\tfunction paymentCheck(address ...\n      JUMPDEST \t\t\tfunction paymentCheck(address ...\n      PUSH [tag] 24\t\t\tfunction paymentCheck(address ...\n      JUMP \t\t\tfunction paymentCheck(address ...\n    tag 21\t\t\tfunction paymentCheck(address ...\n      JUMPDEST \t\t\tfunction paymentCheck(address ...\n      STOP \t\t\tfunction paymentCheck(address ...\n    tag 9\t\t\tfunction pay(address _receipen...\n      JUMPDEST \t\t\tfunction pay(address _receipen...\n      PUSH 0\t\t\t0\n      CALLVALUE \t\t\tmsg.value\n      GT \t\t\tmsg.value > 0\n      PUSH [tag] 26\t\t\trequire(msg.value > 0, \"You mu...\n      JUMPI \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH 40\t\t\trequire(msg.value > 0, \"You mu...\n      MLOAD \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(msg.value > 0, \"You mu...\n      DUP2 \t\t\trequire(msg.value > 0, \"You mu...\n      MSTORE \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH 4\t\t\trequire(msg.value > 0, \"You mu...\n      ADD \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH [tag] 27\t\t\trequire(msg.value > 0, \"You mu...\n      SWAP1 \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH [tag] 28\t\t\trequire(msg.value > 0, \"You mu...\n      JUMP \t\t\trequire(msg.value > 0, \"You mu...\n    tag 27\t\t\trequire(msg.value > 0, \"You mu...\n      JUMPDEST \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH 40\t\t\trequire(msg.value > 0, \"You mu...\n      MLOAD \t\t\trequire(msg.value > 0, \"You mu...\n      DUP1 \t\t\trequire(msg.value > 0, \"You mu...\n      SWAP2 \t\t\trequire(msg.value > 0, \"You mu...\n      SUB \t\t\trequire(msg.value > 0, \"You mu...\n      SWAP1 \t\t\trequire(msg.value > 0, \"You mu...\n      REVERT \t\t\trequire(msg.value > 0, \"You mu...\n    tag 26\t\t\trequire(msg.value > 0, \"You mu...\n      JUMPDEST \t\t\trequire(msg.value > 0, \"You mu...\n      PUSH [tag] 29\t\t\tpaymentCheck(_receipent, msg.v...\n      DUP2 \t\t\t_receipent\n      CALLVALUE \t\t\tmsg.value\n      PUSH [tag] 24\t\t\tpaymentCheck\n      JUMP \t\t\tpaymentCheck(_receipent, msg.v...\n    tag 29\t\t\tpaymentCheck(_receipent, msg.v...\n      JUMPDEST \t\t\tpaymentCheck(_receipent, msg.v...\n      POP \t\t\tfunction pay(address _receipen...\n      JUMP \t\t\tfunction pay(address _receipen...\n    tag 12\t\t\tfunction getBalance() public v...\n      JUMPDEST \t\t\tfunction getBalance() public v...\n      PUSH 0\t\t\tuint256\n      SELFBALANCE \t\t\taddress(this).balance\n      SWAP1 \t\t\treturn address(this).balance\n      POP \t\t\treturn address(this).balance\n      SWAP1 \t\t\tfunction getBalance() public v...\n      JUMP \t\t\tfunction getBalance() public v...\n    tag 18\t\t\tfunction userCheckStatus(addre...\n      JUMPDEST \t\t\tfunction userCheckStatus(addre...\n      PUSH 0\t\t\tuint256\n      PUSH 1\t\t\t_paymentAmount\n      PUSH 0\t\t\t_paymentAmount[_receipent]\n      DUP4 \t\t\t_receipent\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_paymentAmount[_receipent]\n      AND \t\t\t_paymentAmount[_receipent]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_paymentAmount[_receipent]\n      AND \t\t\t_paymentAmount[_receipent]\n      DUP2 \t\t\t_paymentAmount[_receipent]\n      MSTORE \t\t\t_paymentAmount[_receipent]\n      PUSH 20\t\t\t_paymentAmount[_receipent]\n      ADD \t\t\t_paymentAmount[_receipent]\n      SWAP1 \t\t\t_paymentAmount[_receipent]\n      DUP2 \t\t\t_paymentAmount[_receipent]\n      MSTORE \t\t\t_paymentAmount[_receipent]\n      PUSH 20\t\t\t_paymentAmount[_receipent]\n      ADD \t\t\t_paymentAmount[_receipent]\n      PUSH 0\t\t\t_paymentAmount[_receipent]\n      KECCAK256 \t\t\t_paymentAmount[_receipent]\n      SLOAD \t\t\t_paymentAmount[_receipent]\n      SWAP1 \t\t\treturn  _paymentAmount[_receip...\n      POP \t\t\treturn  _paymentAmount[_receip...\n      SWAP2 \t\t\tfunction userCheckStatus(addre...\n      SWAP1 \t\t\tfunction userCheckStatus(addre...\n      POP \t\t\tfunction userCheckStatus(addre...\n      JUMP \t\t\tfunction userCheckStatus(addre...\n    tag 24\t\t\tfunction paymentCheck(address ...\n      JUMPDEST \t\t\tfunction paymentCheck(address ...\n      PUSH 0\t\t\tbool payCheck\n      DUP1 \t\t\t_paymentStatus\n      PUSH 0\t\t\t_paymentStatus[usersAddress]\n      DUP5 \t\t\tusersAddress\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_paymentStatus[usersAddress]\n      AND \t\t\t_paymentStatus[usersAddress]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_paymentStatus[usersAddress]\n      AND \t\t\t_paymentStatus[usersAddress]\n      DUP2 \t\t\t_paymentStatus[usersAddress]\n      MSTORE \t\t\t_paymentStatus[usersAddress]\n      PUSH 20\t\t\t_paymentStatus[usersAddress]\n      ADD \t\t\t_paymentStatus[usersAddress]\n      SWAP1 \t\t\t_paymentStatus[usersAddress]\n      DUP2 \t\t\t_paymentStatus[usersAddress]\n      MSTORE \t\t\t_paymentStatus[usersAddress]\n      PUSH 20\t\t\t_paymentStatus[usersAddress]\n      ADD \t\t\t_paymentStatus[usersAddress]\n      PUSH 0\t\t\t_paymentStatus[usersAddress]\n      KECCAK256 \t\t\t_paymentStatus[usersAddress]\n      PUSH 0\t\t\t_paymentStatus[usersAddress]\n      SWAP1 \t\t\t_paymentStatus[usersAddress]\n      SLOAD \t\t\t_paymentStatus[usersAddress]\n      SWAP1 \t\t\t_paymentStatus[usersAddress]\n      PUSH 100\t\t\t_paymentStatus[usersAddress]\n      EXP \t\t\t_paymentStatus[usersAddress]\n      SWAP1 \t\t\t_paymentStatus[usersAddress]\n      DIV \t\t\t_paymentStatus[usersAddress]\n      PUSH FF\t\t\t_paymentStatus[usersAddress]\n      AND \t\t\t_paymentStatus[usersAddress]\n      SWAP1 \t\t\tbool payCheck = _paymentStatus...\n      POP \t\t\tbool payCheck = _paymentStatus...\n      PUSH 1\t\t\ttrue\n      ISZERO \t\t\tpayCheck != true\n      ISZERO \t\t\tpayCheck != true\n      DUP2 \t\t\tpayCheck\n      ISZERO \t\t\tpayCheck != true\n      ISZERO \t\t\tpayCheck != true\n      EQ \t\t\tpayCheck != true\n      PUSH [tag] 33\t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      JUMPI \t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      PUSH 1\t\t\ttrue\n      PUSH 0\t\t\t_paymentStatus\n      DUP1 \t\t\t_paymentStatus[usersAddress]\n      DUP6 \t\t\tusersAddress\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_paymentStatus[usersAddress]\n      AND \t\t\t_paymentStatus[usersAddress]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_paymentStatus[usersAddress]\n      AND \t\t\t_paymentStatus[usersAddress]\n      DUP2 \t\t\t_paymentStatus[usersAddress]\n      MSTORE \t\t\t_paymentStatus[usersAddress]\n      PUSH 20\t\t\t_paymentStatus[usersAddress]\n      ADD \t\t\t_paymentStatus[usersAddress]\n      SWAP1 \t\t\t_paymentStatus[usersAddress]\n      DUP2 \t\t\t_paymentStatus[usersAddress]\n      MSTORE \t\t\t_paymentStatus[usersAddress]\n      PUSH 20\t\t\t_paymentStatus[usersAddress]\n      ADD \t\t\t_paymentStatus[usersAddress]\n      PUSH 0\t\t\t_paymentStatus[usersAddress]\n      KECCAK256 \t\t\t_paymentStatus[usersAddress]\n      PUSH 0\t\t\t_paymentStatus[usersAddress]\n      PUSH 100\t\t\t_paymentStatus[usersAddress] =...\n      EXP \t\t\t_paymentStatus[usersAddress] =...\n      DUP2 \t\t\t_paymentStatus[usersAddress] =...\n      SLOAD \t\t\t_paymentStatus[usersAddress] =...\n      DUP2 \t\t\t_paymentStatus[usersAddress] =...\n      PUSH FF\t\t\t_paymentStatus[usersAddress] =...\n      MUL \t\t\t_paymentStatus[usersAddress] =...\n      NOT \t\t\t_paymentStatus[usersAddress] =...\n      AND \t\t\t_paymentStatus[usersAddress] =...\n      SWAP1 \t\t\t_paymentStatus[usersAddress] =...\n      DUP4 \t\t\t_paymentStatus[usersAddress] =...\n      ISZERO \t\t\t_paymentStatus[usersAddress] =...\n      ISZERO \t\t\t_paymentStatus[usersAddress] =...\n      MUL \t\t\t_paymentStatus[usersAddress] =...\n      OR \t\t\t_paymentStatus[usersAddress] =...\n      SWAP1 \t\t\t_paymentStatus[usersAddress] =...\n      SSTORE \t\t\t_paymentStatus[usersAddress] =...\n      POP \t\t\t_paymentStatus[usersAddress] =...\n      DUP2 \t\t\t_amount\n      PUSH 1\t\t\t_paymentAmount\n      PUSH 0\t\t\t_paymentAmount[usersAddress]\n      DUP6 \t\t\tusersAddress\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_paymentAmount[usersAddress]\n      AND \t\t\t_paymentAmount[usersAddress]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t_paymentAmount[usersAddress]\n      AND \t\t\t_paymentAmount[usersAddress]\n      DUP2 \t\t\t_paymentAmount[usersAddress]\n      MSTORE \t\t\t_paymentAmount[usersAddress]\n      PUSH 20\t\t\t_paymentAmount[usersAddress]\n      ADD \t\t\t_paymentAmount[usersAddress]\n      SWAP1 \t\t\t_paymentAmount[usersAddress]\n      DUP2 \t\t\t_paymentAmount[usersAddress]\n      MSTORE \t\t\t_paymentAmount[usersAddress]\n      PUSH 20\t\t\t_paymentAmount[usersAddress]\n      ADD \t\t\t_paymentAmount[usersAddress]\n      PUSH 0\t\t\t_paymentAmount[usersAddress]\n      KECCAK256 \t\t\t_paymentAmount[usersAddress]\n      DUP2 \t\t\t_paymentAmount[usersAddress] =...\n      SWAP1 \t\t\t_paymentAmount[usersAddress] =...\n      SSTORE \t\t\t_paymentAmount[usersAddress] =...\n      POP \t\t\t_paymentAmount[usersAddress] =...\n      PUSH [tag] 34\t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      JUMP \t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n    tag 33\t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      JUMPDEST \t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      PUSH 40\t\t\trevert(\"user is already paid!\"...\n      MLOAD \t\t\trevert(\"user is already paid!\"...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trevert(\"user is already paid!\"...\n      DUP2 \t\t\trevert(\"user is already paid!\"...\n      MSTORE \t\t\trevert(\"user is already paid!\"...\n      PUSH 4\t\t\trevert(\"user is already paid!\"...\n      ADD \t\t\trevert(\"user is already paid!\"...\n      PUSH [tag] 35\t\t\trevert(\"user is already paid!\"...\n      SWAP1 \t\t\trevert(\"user is already paid!\"...\n      PUSH [tag] 36\t\t\trevert(\"user is already paid!\"...\n      JUMP \t\t\trevert(\"user is already paid!\"...\n    tag 35\t\t\trevert(\"user is already paid!\"...\n      JUMPDEST \t\t\trevert(\"user is already paid!\"...\n      PUSH 40\t\t\trevert(\"user is already paid!\"...\n      MLOAD \t\t\trevert(\"user is already paid!\"...\n      DUP1 \t\t\trevert(\"user is already paid!\"...\n      SWAP2 \t\t\trevert(\"user is already paid!\"...\n      SUB \t\t\trevert(\"user is already paid!\"...\n      SWAP1 \t\t\trevert(\"user is already paid!\"...\n      REVERT \t\t\trevert(\"user is already paid!\"...\n    tag 34\t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      JUMPDEST \t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      POP \t\t\t{\\r\\n\\r\\n        bool payCheck...\n      POP \t\t\tfunction paymentCheck(address ...\n      POP \t\t\tfunction paymentCheck(address ...\n      JUMP \t\t\tfunction paymentCheck(address ...\n    tag 38\t\t\tDoreaUsers {\\r\\n\\r\\n    mappin...\n      JUMPDEST \t\t\tDoreaUsers {\\r\\n\\r\\n    mappin...\n      PUSH 0\t\t\ty\n      DUP1 \t\t\t_\n      REVERT \t\t\trivate _paym\n    tag 40\t\t\t public{\\r\\n\\r\\n        bool p...\n      JUMPDEST \t\t\t public{\\r\\n\\r\\n        bool p...\n      PUSH 0\t\t\tpayment\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tif(payCheck != true){\\r\\n\\r\\n ...\n      DUP3 \t\t\t     \n      AND \t\t\t\\n\\r\\n        if(payCheck != t...\n      SWAP1 \t\t\tsAddress];\\r\\n\\r\\n        if(p...\n      POP \t\t\tsAddress];\\r\\n\\r\\n        if(p...\n      SWAP2 \t\t\t public{\\r\\n\\r\\n        bool p...\n      SWAP1 \t\t\t public{\\r\\n\\r\\n        bool p...\n      POP \t\t\t public{\\r\\n\\r\\n        bool p...\n      JUMP \t\t\t public{\\r\\n\\r\\n        bool p...\n    tag 41\t\t\trsAddress] = true;\\r\\n        ...\n      JUMPDEST \t\t\trsAddress] = true;\\r\\n        ...\n      PUSH 0\t\t\tentAmou\n      PUSH [tag] 59\t\t\tount;\\r\\n\\r\\n        }else{\\r\n      DUP3 \t\t\telse{\n      PUSH [tag] 40\t\t\tount;\\r\\n\\r\\n        }else{\\r\n      JUMP \t\t\tount;\\r\\n\\r\\n        }else{\\r\n    tag 59\t\t\tount;\\r\\n\\r\\n        }else{\\r\n      JUMPDEST \t\t\tount;\\r\\n\\r\\n        }else{\\r\n      SWAP1 \t\t\tress] = _amount;\\r\\n\\r\\n      ...\n      POP \t\t\tress] = _amount;\\r\\n\\r\\n      ...\n      SWAP2 \t\t\trsAddress] = true;\\r\\n        ...\n      SWAP1 \t\t\trsAddress] = true;\\r\\n        ...\n      POP \t\t\trsAddress] = true;\\r\\n        ...\n      JUMP \t\t\trsAddress] = true;\\r\\n        ...\n    tag 42\t\t\t revert(\"user is already paid!...\n      JUMPDEST \t\t\t revert(\"user is already paid!...\n      PUSH [tag] 61\t\t\trCheckStatus(address _re\n      DUP2 \t\t\tss _r\n      PUSH [tag] 41\t\t\trCheckStatus(address _re\n      JUMP \t\t\trCheckStatus(address _re\n    tag 61\t\t\trCheckStatus(address _re\n      JUMPDEST \t\t\trCheckStatus(address _re\n      DUP2 \t\t\tion u\n      EQ \t\t\tnction userCheckStatus(address...\n      PUSH [tag] 62\t\t\t\\r\\n\\r\\n    function userCheck...\n      JUMPI \t\t\t\\r\\n\\r\\n    function userCheck...\n      PUSH 0\t\t\t \n      DUP1 \t\t\tl\n      REVERT \t\t\tnt) public v\n    tag 62\t\t\t\\r\\n\\r\\n    function userCheck...\n      JUMPDEST \t\t\t\\r\\n\\r\\n    function userCheck...\n      POP \t\t\t revert(\"user is already paid!...\n      JUMP \t\t\t revert(\"user is already paid!...\n    tag 43\t\t\tint256){\\r\\n\\r\\n        return...\n      JUMPDEST \t\t\tint256){\\r\\n\\r\\n        return...\n      PUSH 0\t\t\tceipe\n      DUP2 \t\t\tr Ethe\n      CALLDATALOAD \t\t\t   // Transfer Ether\n      SWAP1 \t\t\t }\\r\\n\\r\\n\\r\\n    // Transfer ...\n      POP \t\t\t }\\r\\n\\r\\n\\r\\n    // Transfer ...\n      PUSH [tag] 64\t\t\t Customers\\r\\n    function pay...\n      DUP2 \t\t\ty(add\n      PUSH [tag] 42\t\t\t Customers\\r\\n    function pay...\n      JUMP \t\t\t Customers\\r\\n    function pay...\n    tag 64\t\t\t Customers\\r\\n    function pay...\n      JUMPDEST \t\t\t Customers\\r\\n    function pay...\n      SWAP3 \t\t\tint256){\\r\\n\\r\\n        return...\n      SWAP2 \t\t\tint256){\\r\\n\\r\\n        return...\n      POP \t\t\tint256){\\r\\n\\r\\n        return...\n      POP \t\t\tint256){\\r\\n\\r\\n        return...\n      JUMP \t\t\tint256){\\r\\n\\r\\n        return...\n    tag 8\t\t\tnt) public payable{\\r\\n\\r\\n   ...\n      JUMPDEST \t\t\tnt) public payable{\\r\\n\\r\\n   ...\n      PUSH 0\t\t\tuser i\n      PUSH 20\t\t\t0,\n      DUP3 \t\t\tmsg.value\n      DUP5 \t\t\t requir\n      SUB \t\t\t     require(msg.value \n      SLT \t\t\t\\n        require(msg.value > ...\n      ISZERO \t\t\tot\\r\\n        require(msg.valu...\n      PUSH [tag] 66\t\t\tot\\r\\n        require(msg.valu...\n      JUMPI \t\t\tot\\r\\n        require(msg.valu...\n      PUSH [tag] 67\t\t\tu must send some Ether\");\\r\\n ...\n      PUSH [tag] 38\t\t\tu must send some Ether\");\\r\\n ...\n      JUMP \t\t\tu must send some Ether\");\\r\\n ...\n    tag 67\t\t\tu must send some Ether\");\\r\\n ...\n      JUMPDEST \t\t\tu must send some Ether\");\\r\\n ...\n    tag 66\t\t\tot\\r\\n        require(msg.valu...\n      JUMPDEST \t\t\tot\\r\\n        require(msg.valu...\n      PUSH 0\t\t\t \n      PUSH [tag] 68\t\t\ttBalance() public view returns...\n      DUP5 \t\t\t     re\n      DUP3 \t\t\t56){\\r\\n\n      DUP6 \t\t\tturns(uin\n      ADD \t\t\tw returns(uint256){\\r\\n \n      PUSH [tag] 43\t\t\ttBalance() public view returns...\n      JUMP \t\t\ttBalance() public view returns...\n    tag 68\t\t\ttBalance() public view returns...\n      JUMPDEST \t\t\ttBalance() public view returns...\n      SWAP2 \t\t\tunction getBalance() public vi...\n      POP \t\t\tunction getBalance() public vi...\n      POP \t\t\t   // get balance of contract ...\n      SWAP3 \t\t\tnt) public payable{\\r\\n\\r\\n   ...\n      SWAP2 \t\t\tnt) public payable{\\r\\n\\r\\n   ...\n      POP \t\t\tnt) public payable{\\r\\n\\r\\n   ...\n      POP \t\t\tnt) public payable{\\r\\n\\r\\n   ...\n      JUMP \t\t\tnt) public payable{\\r\\n\\r\\n   ...\n    tag 44\t\t\tce;\\r\\n    }\\r\\n\\r\\n}\n      JUMPDEST \t\t\tce;\\r\\n    }\\r\\n\\r\\n}\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\tce;\\r\\n    }\\r\\n\\r\\n}\n      SWAP1 \t\t\tce;\\r\\n    }\\r\\n\\r\\n}\n      POP \t\t\tce;\\r\\n    }\\r\\n\\r\\n}\n      JUMP \t\t\tce;\\r\\n    }\\r\\n\\r\\n}\n    tag 45\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 71\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 44\t\t\t\n      JUMP \t\t\t\n    tag 71\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 14\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 73\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 45\t\t\t\n      JUMP \t\t\t\n    tag 73\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 46\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 75\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 44\t\t\t\n      JUMP \t\t\t\n    tag 75\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 76\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 76\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 47\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      CALLDATALOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 78\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 46\t\t\t\n      JUMP \t\t\t\n    tag 78\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 23\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      DUP6 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 80\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 81\t\t\t\n      PUSH [tag] 38\t\t\t\n      JUMP \t\t\t\n    tag 81\t\t\t\n      JUMPDEST \t\t\t\n    tag 80\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 82\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 43\t\t\t\n      JUMP \t\t\t\n    tag 82\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 20\t\t\t\n      PUSH [tag] 83\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 47\t\t\t\n      JUMP \t\t\t\n    tag 83\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 48\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 49\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 596F75206D7573742073656E6420736F6D652045746865720000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 50\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 87\t\t\t\n      PUSH 18\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 48\t\t\t\n      JUMP \t\t\t\n    tag 87\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 88\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 49\t\t\t\n      JUMP \t\t\t\n    tag 88\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 28\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 90\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 50\t\t\t\n      JUMP \t\t\t\n    tag 90\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 51\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 7573657220697320616C72656164792070616964210000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 52\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 93\t\t\t\n      PUSH 15\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 48\t\t\t\n      JUMP \t\t\t\n    tag 93\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 94\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 51\t\t\t\n      JUMP \t\t\t\n    tag 94\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 36\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 96\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 52\t\t\t\n      JUMP \t\t\t\n    tag 96\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    .data\n"
}